// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/android/packages_list.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace perfetto {
namespace protos {
class PackagesList;
class PackagesListDefaultTypeInternal;
extern PackagesListDefaultTypeInternal _PackagesList_default_instance_;
class PackagesList_PackageInfo;
class PackagesList_PackageInfoDefaultTypeInternal;
extern PackagesList_PackageInfoDefaultTypeInternal _PackagesList_PackageInfo_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> ::perfetto::protos::PackagesList* Arena::CreateMaybeMessage<::perfetto::protos::PackagesList>(Arena*);
template<> ::perfetto::protos::PackagesList_PackageInfo* Arena::CreateMaybeMessage<::perfetto::protos::PackagesList_PackageInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace perfetto {
namespace protos {

// ===================================================================

class PackagesList_PackageInfo :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.PackagesList.PackageInfo) */ {
 public:
  PackagesList_PackageInfo();
  virtual ~PackagesList_PackageInfo();

  PackagesList_PackageInfo(const PackagesList_PackageInfo& from);
  PackagesList_PackageInfo(PackagesList_PackageInfo&& from) noexcept
    : PackagesList_PackageInfo() {
    *this = ::std::move(from);
  }

  inline PackagesList_PackageInfo& operator=(const PackagesList_PackageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackagesList_PackageInfo& operator=(PackagesList_PackageInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PackagesList_PackageInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackagesList_PackageInfo* internal_default_instance() {
    return reinterpret_cast<const PackagesList_PackageInfo*>(
               &_PackagesList_PackageInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PackagesList_PackageInfo& a, PackagesList_PackageInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(PackagesList_PackageInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PackagesList_PackageInfo* New() const final {
    return CreateMaybeMessage<PackagesList_PackageInfo>(nullptr);
  }

  PackagesList_PackageInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PackagesList_PackageInfo>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const PackagesList_PackageInfo& from);
  void MergeFrom(const PackagesList_PackageInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PackagesList_PackageInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.PackagesList.PackageInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kUidFieldNumber = 2,
    kVersionCodeFieldNumber = 5,
    kDebuggableFieldNumber = 3,
    kProfileableFromShellFieldNumber = 4,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional uint64 uid = 2;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional int64 version_code = 5;
  bool has_version_code() const;
  void clear_version_code();
  ::PROTOBUF_NAMESPACE_ID::int64 version_code() const;
  void set_version_code(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional bool debuggable = 3;
  bool has_debuggable() const;
  void clear_debuggable();
  bool debuggable() const;
  void set_debuggable(bool value);

  // optional bool profileable_from_shell = 4;
  bool has_profileable_from_shell() const;
  void clear_profileable_from_shell();
  bool profileable_from_shell() const;
  void set_profileable_from_shell(bool value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.PackagesList.PackageInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uid_;
  ::PROTOBUF_NAMESPACE_ID::int64 version_code_;
  bool debuggable_;
  bool profileable_from_shell_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto;
};
// -------------------------------------------------------------------

class PackagesList :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.PackagesList) */ {
 public:
  PackagesList();
  virtual ~PackagesList();

  PackagesList(const PackagesList& from);
  PackagesList(PackagesList&& from) noexcept
    : PackagesList() {
    *this = ::std::move(from);
  }

  inline PackagesList& operator=(const PackagesList& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackagesList& operator=(PackagesList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PackagesList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackagesList* internal_default_instance() {
    return reinterpret_cast<const PackagesList*>(
               &_PackagesList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PackagesList& a, PackagesList& b) {
    a.Swap(&b);
  }
  inline void Swap(PackagesList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PackagesList* New() const final {
    return CreateMaybeMessage<PackagesList>(nullptr);
  }

  PackagesList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PackagesList>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const PackagesList& from);
  void MergeFrom(const PackagesList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PackagesList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.PackagesList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef PackagesList_PackageInfo PackageInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kPackagesFieldNumber = 1,
    kParseErrorFieldNumber = 2,
    kReadErrorFieldNumber = 3,
  };
  // repeated .perfetto.protos.PackagesList.PackageInfo packages = 1;
  int packages_size() const;
  void clear_packages();
  ::perfetto::protos::PackagesList_PackageInfo* mutable_packages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::PackagesList_PackageInfo >*
      mutable_packages();
  const ::perfetto::protos::PackagesList_PackageInfo& packages(int index) const;
  ::perfetto::protos::PackagesList_PackageInfo* add_packages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::PackagesList_PackageInfo >&
      packages() const;

  // optional bool parse_error = 2;
  bool has_parse_error() const;
  void clear_parse_error();
  bool parse_error() const;
  void set_parse_error(bool value);

  // optional bool read_error = 3;
  bool has_read_error() const;
  void clear_read_error();
  bool read_error() const;
  void set_read_error(bool value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.PackagesList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::PackagesList_PackageInfo > packages_;
  bool parse_error_;
  bool read_error_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PackagesList_PackageInfo

// optional string name = 1;
inline bool PackagesList_PackageInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackagesList_PackageInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PackagesList_PackageInfo::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.PackageInfo.name)
  return name_.GetNoArena();
}
inline void PackagesList_PackageInfo::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.PackageInfo.name)
}
inline void PackagesList_PackageInfo::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.PackagesList.PackageInfo.name)
}
inline void PackagesList_PackageInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.PackagesList.PackageInfo.name)
}
inline void PackagesList_PackageInfo::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.PackagesList.PackageInfo.name)
}
inline std::string* PackagesList_PackageInfo::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.PackagesList.PackageInfo.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PackagesList_PackageInfo::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.PackagesList.PackageInfo.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PackagesList_PackageInfo::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.PackagesList.PackageInfo.name)
}

// optional uint64 uid = 2;
inline bool PackagesList_PackageInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackagesList_PackageInfo::clear_uid() {
  uid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PackagesList_PackageInfo::uid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.PackageInfo.uid)
  return uid_;
}
inline void PackagesList_PackageInfo::set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.PackageInfo.uid)
}

// optional bool debuggable = 3;
inline bool PackagesList_PackageInfo::has_debuggable() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PackagesList_PackageInfo::clear_debuggable() {
  debuggable_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool PackagesList_PackageInfo::debuggable() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.PackageInfo.debuggable)
  return debuggable_;
}
inline void PackagesList_PackageInfo::set_debuggable(bool value) {
  _has_bits_[0] |= 0x00000008u;
  debuggable_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.PackageInfo.debuggable)
}

// optional bool profileable_from_shell = 4;
inline bool PackagesList_PackageInfo::has_profileable_from_shell() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PackagesList_PackageInfo::clear_profileable_from_shell() {
  profileable_from_shell_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool PackagesList_PackageInfo::profileable_from_shell() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.PackageInfo.profileable_from_shell)
  return profileable_from_shell_;
}
inline void PackagesList_PackageInfo::set_profileable_from_shell(bool value) {
  _has_bits_[0] |= 0x00000010u;
  profileable_from_shell_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.PackageInfo.profileable_from_shell)
}

// optional int64 version_code = 5;
inline bool PackagesList_PackageInfo::has_version_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PackagesList_PackageInfo::clear_version_code() {
  version_code_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PackagesList_PackageInfo::version_code() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.PackageInfo.version_code)
  return version_code_;
}
inline void PackagesList_PackageInfo::set_version_code(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  version_code_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.PackageInfo.version_code)
}

// -------------------------------------------------------------------

// PackagesList

// repeated .perfetto.protos.PackagesList.PackageInfo packages = 1;
inline int PackagesList::packages_size() const {
  return packages_.size();
}
inline void PackagesList::clear_packages() {
  packages_.Clear();
}
inline ::perfetto::protos::PackagesList_PackageInfo* PackagesList::mutable_packages(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.PackagesList.packages)
  return packages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::PackagesList_PackageInfo >*
PackagesList::mutable_packages() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.PackagesList.packages)
  return &packages_;
}
inline const ::perfetto::protos::PackagesList_PackageInfo& PackagesList::packages(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.packages)
  return packages_.Get(index);
}
inline ::perfetto::protos::PackagesList_PackageInfo* PackagesList::add_packages() {
  // @@protoc_insertion_point(field_add:perfetto.protos.PackagesList.packages)
  return packages_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::PackagesList_PackageInfo >&
PackagesList::packages() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.PackagesList.packages)
  return packages_;
}

// optional bool parse_error = 2;
inline bool PackagesList::has_parse_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackagesList::clear_parse_error() {
  parse_error_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool PackagesList::parse_error() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.parse_error)
  return parse_error_;
}
inline void PackagesList::set_parse_error(bool value) {
  _has_bits_[0] |= 0x00000001u;
  parse_error_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.parse_error)
}

// optional bool read_error = 3;
inline bool PackagesList::has_read_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackagesList::clear_read_error() {
  read_error_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool PackagesList::read_error() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.read_error)
  return read_error_;
}
inline void PackagesList::set_read_error(bool value) {
  _has_bits_[0] |= 0x00000002u;
  read_error_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.read_error)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace perfetto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto
