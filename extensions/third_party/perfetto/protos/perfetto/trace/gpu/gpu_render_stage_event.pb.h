// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/gpu/gpu_render_stage_event.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace perfetto {
namespace protos {
class GpuRenderStageEvent;
class GpuRenderStageEventDefaultTypeInternal;
extern GpuRenderStageEventDefaultTypeInternal _GpuRenderStageEvent_default_instance_;
class GpuRenderStageEvent_ExtraData;
class GpuRenderStageEvent_ExtraDataDefaultTypeInternal;
extern GpuRenderStageEvent_ExtraDataDefaultTypeInternal _GpuRenderStageEvent_ExtraData_default_instance_;
class GpuRenderStageEvent_Specifications;
class GpuRenderStageEvent_SpecificationsDefaultTypeInternal;
extern GpuRenderStageEvent_SpecificationsDefaultTypeInternal _GpuRenderStageEvent_Specifications_default_instance_;
class GpuRenderStageEvent_Specifications_ContextSpec;
class GpuRenderStageEvent_Specifications_ContextSpecDefaultTypeInternal;
extern GpuRenderStageEvent_Specifications_ContextSpecDefaultTypeInternal _GpuRenderStageEvent_Specifications_ContextSpec_default_instance_;
class GpuRenderStageEvent_Specifications_Description;
class GpuRenderStageEvent_Specifications_DescriptionDefaultTypeInternal;
extern GpuRenderStageEvent_Specifications_DescriptionDefaultTypeInternal _GpuRenderStageEvent_Specifications_Description_default_instance_;
class InternedGpuRenderStageSpecification;
class InternedGpuRenderStageSpecificationDefaultTypeInternal;
extern InternedGpuRenderStageSpecificationDefaultTypeInternal _InternedGpuRenderStageSpecification_default_instance_;
class InternedGraphicsContext;
class InternedGraphicsContextDefaultTypeInternal;
extern InternedGraphicsContextDefaultTypeInternal _InternedGraphicsContext_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> ::perfetto::protos::GpuRenderStageEvent* Arena::CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent>(Arena*);
template<> ::perfetto::protos::GpuRenderStageEvent_ExtraData* Arena::CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent_ExtraData>(Arena*);
template<> ::perfetto::protos::GpuRenderStageEvent_Specifications* Arena::CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent_Specifications>(Arena*);
template<> ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* Arena::CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec>(Arena*);
template<> ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* Arena::CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent_Specifications_Description>(Arena*);
template<> ::perfetto::protos::InternedGpuRenderStageSpecification* Arena::CreateMaybeMessage<::perfetto::protos::InternedGpuRenderStageSpecification>(Arena*);
template<> ::perfetto::protos::InternedGraphicsContext* Arena::CreateMaybeMessage<::perfetto::protos::InternedGraphicsContext>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace perfetto {
namespace protos {

enum InternedGraphicsContext_Api : int {
  InternedGraphicsContext_Api_UNDEFINED = 0,
  InternedGraphicsContext_Api_OPEN_GL = 1,
  InternedGraphicsContext_Api_VULKAN = 2,
  InternedGraphicsContext_Api_OPEN_CL = 3
};
bool InternedGraphicsContext_Api_IsValid(int value);
constexpr InternedGraphicsContext_Api InternedGraphicsContext_Api_Api_MIN = InternedGraphicsContext_Api_UNDEFINED;
constexpr InternedGraphicsContext_Api InternedGraphicsContext_Api_Api_MAX = InternedGraphicsContext_Api_OPEN_CL;
constexpr int InternedGraphicsContext_Api_Api_ARRAYSIZE = InternedGraphicsContext_Api_Api_MAX + 1;

const std::string& InternedGraphicsContext_Api_Name(InternedGraphicsContext_Api value);
template<typename T>
inline const std::string& InternedGraphicsContext_Api_Name(T enum_t_value) {
  static_assert(::std::is_same<T, InternedGraphicsContext_Api>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function InternedGraphicsContext_Api_Name.");
  return InternedGraphicsContext_Api_Name(static_cast<InternedGraphicsContext_Api>(enum_t_value));
}
bool InternedGraphicsContext_Api_Parse(
    const std::string& name, InternedGraphicsContext_Api* value);
enum InternedGpuRenderStageSpecification_RenderStageCategory : int {
  InternedGpuRenderStageSpecification_RenderStageCategory_OTHER = 0,
  InternedGpuRenderStageSpecification_RenderStageCategory_GRAPHICS = 1,
  InternedGpuRenderStageSpecification_RenderStageCategory_COMPUTE = 2
};
bool InternedGpuRenderStageSpecification_RenderStageCategory_IsValid(int value);
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification_RenderStageCategory_RenderStageCategory_MIN = InternedGpuRenderStageSpecification_RenderStageCategory_OTHER;
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification_RenderStageCategory_RenderStageCategory_MAX = InternedGpuRenderStageSpecification_RenderStageCategory_COMPUTE;
constexpr int InternedGpuRenderStageSpecification_RenderStageCategory_RenderStageCategory_ARRAYSIZE = InternedGpuRenderStageSpecification_RenderStageCategory_RenderStageCategory_MAX + 1;

const std::string& InternedGpuRenderStageSpecification_RenderStageCategory_Name(InternedGpuRenderStageSpecification_RenderStageCategory value);
template<typename T>
inline const std::string& InternedGpuRenderStageSpecification_RenderStageCategory_Name(T enum_t_value) {
  static_assert(::std::is_same<T, InternedGpuRenderStageSpecification_RenderStageCategory>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function InternedGpuRenderStageSpecification_RenderStageCategory_Name.");
  return InternedGpuRenderStageSpecification_RenderStageCategory_Name(static_cast<InternedGpuRenderStageSpecification_RenderStageCategory>(enum_t_value));
}
bool InternedGpuRenderStageSpecification_RenderStageCategory_Parse(
    const std::string& name, InternedGpuRenderStageSpecification_RenderStageCategory* value);
// ===================================================================

class GpuRenderStageEvent_ExtraData :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.GpuRenderStageEvent.ExtraData) */ {
 public:
  GpuRenderStageEvent_ExtraData();
  virtual ~GpuRenderStageEvent_ExtraData();

  GpuRenderStageEvent_ExtraData(const GpuRenderStageEvent_ExtraData& from);
  GpuRenderStageEvent_ExtraData(GpuRenderStageEvent_ExtraData&& from) noexcept
    : GpuRenderStageEvent_ExtraData() {
    *this = ::std::move(from);
  }

  inline GpuRenderStageEvent_ExtraData& operator=(const GpuRenderStageEvent_ExtraData& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpuRenderStageEvent_ExtraData& operator=(GpuRenderStageEvent_ExtraData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GpuRenderStageEvent_ExtraData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GpuRenderStageEvent_ExtraData* internal_default_instance() {
    return reinterpret_cast<const GpuRenderStageEvent_ExtraData*>(
               &_GpuRenderStageEvent_ExtraData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GpuRenderStageEvent_ExtraData& a, GpuRenderStageEvent_ExtraData& b) {
    a.Swap(&b);
  }
  inline void Swap(GpuRenderStageEvent_ExtraData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GpuRenderStageEvent_ExtraData* New() const final {
    return CreateMaybeMessage<GpuRenderStageEvent_ExtraData>(nullptr);
  }

  GpuRenderStageEvent_ExtraData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GpuRenderStageEvent_ExtraData>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const GpuRenderStageEvent_ExtraData& from);
  void MergeFrom(const GpuRenderStageEvent_ExtraData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GpuRenderStageEvent_ExtraData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.GpuRenderStageEvent.ExtraData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.GpuRenderStageEvent.ExtraData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};
// -------------------------------------------------------------------

class GpuRenderStageEvent_Specifications_ContextSpec :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec) */ {
 public:
  GpuRenderStageEvent_Specifications_ContextSpec();
  virtual ~GpuRenderStageEvent_Specifications_ContextSpec();

  GpuRenderStageEvent_Specifications_ContextSpec(const GpuRenderStageEvent_Specifications_ContextSpec& from);
  GpuRenderStageEvent_Specifications_ContextSpec(GpuRenderStageEvent_Specifications_ContextSpec&& from) noexcept
    : GpuRenderStageEvent_Specifications_ContextSpec() {
    *this = ::std::move(from);
  }

  inline GpuRenderStageEvent_Specifications_ContextSpec& operator=(const GpuRenderStageEvent_Specifications_ContextSpec& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpuRenderStageEvent_Specifications_ContextSpec& operator=(GpuRenderStageEvent_Specifications_ContextSpec&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GpuRenderStageEvent_Specifications_ContextSpec& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GpuRenderStageEvent_Specifications_ContextSpec* internal_default_instance() {
    return reinterpret_cast<const GpuRenderStageEvent_Specifications_ContextSpec*>(
               &_GpuRenderStageEvent_Specifications_ContextSpec_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GpuRenderStageEvent_Specifications_ContextSpec& a, GpuRenderStageEvent_Specifications_ContextSpec& b) {
    a.Swap(&b);
  }
  inline void Swap(GpuRenderStageEvent_Specifications_ContextSpec* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GpuRenderStageEvent_Specifications_ContextSpec* New() const final {
    return CreateMaybeMessage<GpuRenderStageEvent_Specifications_ContextSpec>(nullptr);
  }

  GpuRenderStageEvent_Specifications_ContextSpec* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GpuRenderStageEvent_Specifications_ContextSpec>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const GpuRenderStageEvent_Specifications_ContextSpec& from);
  void MergeFrom(const GpuRenderStageEvent_Specifications_ContextSpec& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GpuRenderStageEvent_Specifications_ContextSpec* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextFieldNumber = 1,
    kPidFieldNumber = 2,
  };
  // optional uint64 context = 1;
  bool has_context() const;
  void clear_context();
  ::PROTOBUF_NAMESPACE_ID::uint64 context() const;
  void set_context(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional int32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  ::PROTOBUF_NAMESPACE_ID::int32 pid() const;
  void set_pid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 context_;
  ::PROTOBUF_NAMESPACE_ID::int32 pid_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};
// -------------------------------------------------------------------

class GpuRenderStageEvent_Specifications_Description :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.GpuRenderStageEvent.Specifications.Description) */ {
 public:
  GpuRenderStageEvent_Specifications_Description();
  virtual ~GpuRenderStageEvent_Specifications_Description();

  GpuRenderStageEvent_Specifications_Description(const GpuRenderStageEvent_Specifications_Description& from);
  GpuRenderStageEvent_Specifications_Description(GpuRenderStageEvent_Specifications_Description&& from) noexcept
    : GpuRenderStageEvent_Specifications_Description() {
    *this = ::std::move(from);
  }

  inline GpuRenderStageEvent_Specifications_Description& operator=(const GpuRenderStageEvent_Specifications_Description& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpuRenderStageEvent_Specifications_Description& operator=(GpuRenderStageEvent_Specifications_Description&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GpuRenderStageEvent_Specifications_Description& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GpuRenderStageEvent_Specifications_Description* internal_default_instance() {
    return reinterpret_cast<const GpuRenderStageEvent_Specifications_Description*>(
               &_GpuRenderStageEvent_Specifications_Description_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GpuRenderStageEvent_Specifications_Description& a, GpuRenderStageEvent_Specifications_Description& b) {
    a.Swap(&b);
  }
  inline void Swap(GpuRenderStageEvent_Specifications_Description* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GpuRenderStageEvent_Specifications_Description* New() const final {
    return CreateMaybeMessage<GpuRenderStageEvent_Specifications_Description>(nullptr);
  }

  GpuRenderStageEvent_Specifications_Description* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GpuRenderStageEvent_Specifications_Description>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const GpuRenderStageEvent_Specifications_Description& from);
  void MergeFrom(const GpuRenderStageEvent_Specifications_Description& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GpuRenderStageEvent_Specifications_Description* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.GpuRenderStageEvent.Specifications.Description";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kDescriptionFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional string description = 2;
  bool has_description() const;
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);

  // @@protoc_insertion_point(class_scope:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};
// -------------------------------------------------------------------

class GpuRenderStageEvent_Specifications :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.GpuRenderStageEvent.Specifications) */ {
 public:
  GpuRenderStageEvent_Specifications();
  virtual ~GpuRenderStageEvent_Specifications();

  GpuRenderStageEvent_Specifications(const GpuRenderStageEvent_Specifications& from);
  GpuRenderStageEvent_Specifications(GpuRenderStageEvent_Specifications&& from) noexcept
    : GpuRenderStageEvent_Specifications() {
    *this = ::std::move(from);
  }

  inline GpuRenderStageEvent_Specifications& operator=(const GpuRenderStageEvent_Specifications& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpuRenderStageEvent_Specifications& operator=(GpuRenderStageEvent_Specifications&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GpuRenderStageEvent_Specifications& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GpuRenderStageEvent_Specifications* internal_default_instance() {
    return reinterpret_cast<const GpuRenderStageEvent_Specifications*>(
               &_GpuRenderStageEvent_Specifications_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GpuRenderStageEvent_Specifications& a, GpuRenderStageEvent_Specifications& b) {
    a.Swap(&b);
  }
  inline void Swap(GpuRenderStageEvent_Specifications* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GpuRenderStageEvent_Specifications* New() const final {
    return CreateMaybeMessage<GpuRenderStageEvent_Specifications>(nullptr);
  }

  GpuRenderStageEvent_Specifications* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GpuRenderStageEvent_Specifications>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const GpuRenderStageEvent_Specifications& from);
  void MergeFrom(const GpuRenderStageEvent_Specifications& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GpuRenderStageEvent_Specifications* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.GpuRenderStageEvent.Specifications";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef GpuRenderStageEvent_Specifications_ContextSpec ContextSpec;
  typedef GpuRenderStageEvent_Specifications_Description Description;

  // accessors -------------------------------------------------------

  enum : int {
    kHwQueueFieldNumber = 2,
    kStageFieldNumber = 3,
    kContextSpecFieldNumber = 1,
  };
  // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description hw_queue = 2;
  int hw_queue_size() const;
  void clear_hw_queue();
  ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* mutable_hw_queue(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >*
      mutable_hw_queue();
  const ::perfetto::protos::GpuRenderStageEvent_Specifications_Description& hw_queue(int index) const;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* add_hw_queue();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >&
      hw_queue() const;

  // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description stage = 3;
  int stage_size() const;
  void clear_stage();
  ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* mutable_stage(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >*
      mutable_stage();
  const ::perfetto::protos::GpuRenderStageEvent_Specifications_Description& stage(int index) const;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* add_stage();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >&
      stage() const;

  // optional .perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec context_spec = 1;
  bool has_context_spec() const;
  void clear_context_spec();
  const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec& context_spec() const;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* release_context_spec();
  ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* mutable_context_spec();
  void set_allocated_context_spec(::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* context_spec);

  // @@protoc_insertion_point(class_scope:perfetto.protos.GpuRenderStageEvent.Specifications)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description > hw_queue_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description > stage_;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* context_spec_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};
// -------------------------------------------------------------------

class GpuRenderStageEvent :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.GpuRenderStageEvent) */ {
 public:
  GpuRenderStageEvent();
  virtual ~GpuRenderStageEvent();

  GpuRenderStageEvent(const GpuRenderStageEvent& from);
  GpuRenderStageEvent(GpuRenderStageEvent&& from) noexcept
    : GpuRenderStageEvent() {
    *this = ::std::move(from);
  }

  inline GpuRenderStageEvent& operator=(const GpuRenderStageEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpuRenderStageEvent& operator=(GpuRenderStageEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GpuRenderStageEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GpuRenderStageEvent* internal_default_instance() {
    return reinterpret_cast<const GpuRenderStageEvent*>(
               &_GpuRenderStageEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GpuRenderStageEvent& a, GpuRenderStageEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(GpuRenderStageEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GpuRenderStageEvent* New() const final {
    return CreateMaybeMessage<GpuRenderStageEvent>(nullptr);
  }

  GpuRenderStageEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GpuRenderStageEvent>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const GpuRenderStageEvent& from);
  void MergeFrom(const GpuRenderStageEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GpuRenderStageEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.GpuRenderStageEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef GpuRenderStageEvent_ExtraData ExtraData;
  typedef GpuRenderStageEvent_Specifications Specifications;

  // accessors -------------------------------------------------------

  enum : int {
    kExtraDataFieldNumber = 6,
    kRenderSubpassIndexMaskFieldNumber = 15,
    kSpecificationsFieldNumber = 7,
    kEventIdFieldNumber = 1,
    kDurationFieldNumber = 2,
    kHwQueueIdFieldNumber = 3,
    kStageIdFieldNumber = 4,
    kContextFieldNumber = 5,
    kRenderTargetHandleFieldNumber = 8,
    kRenderPassHandleFieldNumber = 9,
    kSubmissionIdFieldNumber = 10,
    kGpuIdFieldNumber = 11,
    kCommandBufferHandleFieldNumber = 12,
    kHwQueueIidFieldNumber = 13,
    kStageIidFieldNumber = 14,
  };
  // repeated .perfetto.protos.GpuRenderStageEvent.ExtraData extra_data = 6;
  int extra_data_size() const;
  void clear_extra_data();
  ::perfetto::protos::GpuRenderStageEvent_ExtraData* mutable_extra_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_ExtraData >*
      mutable_extra_data();
  const ::perfetto::protos::GpuRenderStageEvent_ExtraData& extra_data(int index) const;
  ::perfetto::protos::GpuRenderStageEvent_ExtraData* add_extra_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_ExtraData >&
      extra_data() const;

  // repeated uint64 render_subpass_index_mask = 15;
  int render_subpass_index_mask_size() const;
  void clear_render_subpass_index_mask();
  ::PROTOBUF_NAMESPACE_ID::uint64 render_subpass_index_mask(int index) const;
  void set_render_subpass_index_mask(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_render_subpass_index_mask(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      render_subpass_index_mask() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_render_subpass_index_mask();

  // optional .perfetto.protos.GpuRenderStageEvent.Specifications specifications = 7 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_specifications() const;
  PROTOBUF_DEPRECATED void clear_specifications();
  PROTOBUF_DEPRECATED const ::perfetto::protos::GpuRenderStageEvent_Specifications& specifications() const;
  PROTOBUF_DEPRECATED ::perfetto::protos::GpuRenderStageEvent_Specifications* release_specifications();
  PROTOBUF_DEPRECATED ::perfetto::protos::GpuRenderStageEvent_Specifications* mutable_specifications();
  PROTOBUF_DEPRECATED void set_allocated_specifications(::perfetto::protos::GpuRenderStageEvent_Specifications* specifications);

  // optional uint64 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 event_id() const;
  void set_event_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 duration = 2;
  bool has_duration() const;
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::uint64 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional int32 hw_queue_id = 3 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_hw_queue_id() const;
  PROTOBUF_DEPRECATED void clear_hw_queue_id();
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::int32 hw_queue_id() const;
  PROTOBUF_DEPRECATED void set_hw_queue_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 stage_id = 4 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_stage_id() const;
  PROTOBUF_DEPRECATED void clear_stage_id();
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::int32 stage_id() const;
  PROTOBUF_DEPRECATED void set_stage_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional uint64 context = 5;
  bool has_context() const;
  void clear_context();
  ::PROTOBUF_NAMESPACE_ID::uint64 context() const;
  void set_context(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 render_target_handle = 8;
  bool has_render_target_handle() const;
  void clear_render_target_handle();
  ::PROTOBUF_NAMESPACE_ID::uint64 render_target_handle() const;
  void set_render_target_handle(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 render_pass_handle = 9;
  bool has_render_pass_handle() const;
  void clear_render_pass_handle();
  ::PROTOBUF_NAMESPACE_ID::uint64 render_pass_handle() const;
  void set_render_pass_handle(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint32 submission_id = 10;
  bool has_submission_id() const;
  void clear_submission_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 submission_id() const;
  void set_submission_id(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional int32 gpu_id = 11;
  bool has_gpu_id() const;
  void clear_gpu_id();
  ::PROTOBUF_NAMESPACE_ID::int32 gpu_id() const;
  void set_gpu_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional uint64 command_buffer_handle = 12;
  bool has_command_buffer_handle() const;
  void clear_command_buffer_handle();
  ::PROTOBUF_NAMESPACE_ID::uint64 command_buffer_handle() const;
  void set_command_buffer_handle(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 hw_queue_iid = 13;
  bool has_hw_queue_iid() const;
  void clear_hw_queue_iid();
  ::PROTOBUF_NAMESPACE_ID::uint64 hw_queue_iid() const;
  void set_hw_queue_iid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 stage_iid = 14;
  bool has_stage_iid() const;
  void clear_stage_iid();
  ::PROTOBUF_NAMESPACE_ID::uint64 stage_iid() const;
  void set_stage_iid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(GpuRenderStageEvent)
  // @@protoc_insertion_point(class_scope:perfetto.protos.GpuRenderStageEvent)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::ExtensionSet _extensions_;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_ExtraData > extra_data_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > render_subpass_index_mask_;
  ::perfetto::protos::GpuRenderStageEvent_Specifications* specifications_;
  ::PROTOBUF_NAMESPACE_ID::uint64 event_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 duration_;
  ::PROTOBUF_NAMESPACE_ID::int32 hw_queue_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 stage_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 context_;
  ::PROTOBUF_NAMESPACE_ID::uint64 render_target_handle_;
  ::PROTOBUF_NAMESPACE_ID::uint64 render_pass_handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 submission_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 gpu_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 command_buffer_handle_;
  ::PROTOBUF_NAMESPACE_ID::uint64 hw_queue_iid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 stage_iid_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};
// -------------------------------------------------------------------

class InternedGraphicsContext :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.InternedGraphicsContext) */ {
 public:
  InternedGraphicsContext();
  virtual ~InternedGraphicsContext();

  InternedGraphicsContext(const InternedGraphicsContext& from);
  InternedGraphicsContext(InternedGraphicsContext&& from) noexcept
    : InternedGraphicsContext() {
    *this = ::std::move(from);
  }

  inline InternedGraphicsContext& operator=(const InternedGraphicsContext& from) {
    CopyFrom(from);
    return *this;
  }
  inline InternedGraphicsContext& operator=(InternedGraphicsContext&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InternedGraphicsContext& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InternedGraphicsContext* internal_default_instance() {
    return reinterpret_cast<const InternedGraphicsContext*>(
               &_InternedGraphicsContext_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(InternedGraphicsContext& a, InternedGraphicsContext& b) {
    a.Swap(&b);
  }
  inline void Swap(InternedGraphicsContext* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InternedGraphicsContext* New() const final {
    return CreateMaybeMessage<InternedGraphicsContext>(nullptr);
  }

  InternedGraphicsContext* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InternedGraphicsContext>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const InternedGraphicsContext& from);
  void MergeFrom(const InternedGraphicsContext& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InternedGraphicsContext* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.InternedGraphicsContext";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef InternedGraphicsContext_Api Api;
  static constexpr Api UNDEFINED =
    InternedGraphicsContext_Api_UNDEFINED;
  static constexpr Api OPEN_GL =
    InternedGraphicsContext_Api_OPEN_GL;
  static constexpr Api VULKAN =
    InternedGraphicsContext_Api_VULKAN;
  static constexpr Api OPEN_CL =
    InternedGraphicsContext_Api_OPEN_CL;
  static inline bool Api_IsValid(int value) {
    return InternedGraphicsContext_Api_IsValid(value);
  }
  static constexpr Api Api_MIN =
    InternedGraphicsContext_Api_Api_MIN;
  static constexpr Api Api_MAX =
    InternedGraphicsContext_Api_Api_MAX;
  static constexpr int Api_ARRAYSIZE =
    InternedGraphicsContext_Api_Api_ARRAYSIZE;
  template<typename T>
  static inline const std::string& Api_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Api>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Api_Name.");
    return InternedGraphicsContext_Api_Name(enum_t_value);
  }
  static inline bool Api_Parse(const std::string& name,
      Api* value) {
    return InternedGraphicsContext_Api_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kIidFieldNumber = 1,
    kPidFieldNumber = 2,
    kApiFieldNumber = 3,
  };
  // optional uint64 iid = 1;
  bool has_iid() const;
  void clear_iid();
  ::PROTOBUF_NAMESPACE_ID::uint64 iid() const;
  void set_iid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional int32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  ::PROTOBUF_NAMESPACE_ID::int32 pid() const;
  void set_pid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional .perfetto.protos.InternedGraphicsContext.Api api = 3;
  bool has_api() const;
  void clear_api();
  ::perfetto::protos::InternedGraphicsContext_Api api() const;
  void set_api(::perfetto::protos::InternedGraphicsContext_Api value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.InternedGraphicsContext)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 iid_;
  ::PROTOBUF_NAMESPACE_ID::int32 pid_;
  int api_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};
// -------------------------------------------------------------------

class InternedGpuRenderStageSpecification :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.InternedGpuRenderStageSpecification) */ {
 public:
  InternedGpuRenderStageSpecification();
  virtual ~InternedGpuRenderStageSpecification();

  InternedGpuRenderStageSpecification(const InternedGpuRenderStageSpecification& from);
  InternedGpuRenderStageSpecification(InternedGpuRenderStageSpecification&& from) noexcept
    : InternedGpuRenderStageSpecification() {
    *this = ::std::move(from);
  }

  inline InternedGpuRenderStageSpecification& operator=(const InternedGpuRenderStageSpecification& from) {
    CopyFrom(from);
    return *this;
  }
  inline InternedGpuRenderStageSpecification& operator=(InternedGpuRenderStageSpecification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InternedGpuRenderStageSpecification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InternedGpuRenderStageSpecification* internal_default_instance() {
    return reinterpret_cast<const InternedGpuRenderStageSpecification*>(
               &_InternedGpuRenderStageSpecification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(InternedGpuRenderStageSpecification& a, InternedGpuRenderStageSpecification& b) {
    a.Swap(&b);
  }
  inline void Swap(InternedGpuRenderStageSpecification* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InternedGpuRenderStageSpecification* New() const final {
    return CreateMaybeMessage<InternedGpuRenderStageSpecification>(nullptr);
  }

  InternedGpuRenderStageSpecification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InternedGpuRenderStageSpecification>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const InternedGpuRenderStageSpecification& from);
  void MergeFrom(const InternedGpuRenderStageSpecification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InternedGpuRenderStageSpecification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.InternedGpuRenderStageSpecification";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef InternedGpuRenderStageSpecification_RenderStageCategory RenderStageCategory;
  static constexpr RenderStageCategory OTHER =
    InternedGpuRenderStageSpecification_RenderStageCategory_OTHER;
  static constexpr RenderStageCategory GRAPHICS =
    InternedGpuRenderStageSpecification_RenderStageCategory_GRAPHICS;
  static constexpr RenderStageCategory COMPUTE =
    InternedGpuRenderStageSpecification_RenderStageCategory_COMPUTE;
  static inline bool RenderStageCategory_IsValid(int value) {
    return InternedGpuRenderStageSpecification_RenderStageCategory_IsValid(value);
  }
  static constexpr RenderStageCategory RenderStageCategory_MIN =
    InternedGpuRenderStageSpecification_RenderStageCategory_RenderStageCategory_MIN;
  static constexpr RenderStageCategory RenderStageCategory_MAX =
    InternedGpuRenderStageSpecification_RenderStageCategory_RenderStageCategory_MAX;
  static constexpr int RenderStageCategory_ARRAYSIZE =
    InternedGpuRenderStageSpecification_RenderStageCategory_RenderStageCategory_ARRAYSIZE;
  template<typename T>
  static inline const std::string& RenderStageCategory_Name(T enum_t_value) {
    static_assert(::std::is_same<T, RenderStageCategory>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function RenderStageCategory_Name.");
    return InternedGpuRenderStageSpecification_RenderStageCategory_Name(enum_t_value);
  }
  static inline bool RenderStageCategory_Parse(const std::string& name,
      RenderStageCategory* value) {
    return InternedGpuRenderStageSpecification_RenderStageCategory_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kIidFieldNumber = 1,
    kCategoryFieldNumber = 4,
  };
  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional string description = 3;
  bool has_description() const;
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);

  // optional uint64 iid = 1;
  bool has_iid() const;
  void clear_iid();
  ::PROTOBUF_NAMESPACE_ID::uint64 iid() const;
  void set_iid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional .perfetto.protos.InternedGpuRenderStageSpecification.RenderStageCategory category = 4;
  bool has_category() const;
  void clear_category();
  ::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory category() const;
  void set_category(::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.InternedGpuRenderStageSpecification)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::uint64 iid_;
  int category_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GpuRenderStageEvent_ExtraData

// optional string name = 1;
inline bool GpuRenderStageEvent_ExtraData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GpuRenderStageEvent_ExtraData::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GpuRenderStageEvent_ExtraData::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.ExtraData.name)
  return name_.GetNoArena();
}
inline void GpuRenderStageEvent_ExtraData::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.ExtraData.name)
}
inline void GpuRenderStageEvent_ExtraData::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.GpuRenderStageEvent.ExtraData.name)
}
inline void GpuRenderStageEvent_ExtraData::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.GpuRenderStageEvent.ExtraData.name)
}
inline void GpuRenderStageEvent_ExtraData::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.GpuRenderStageEvent.ExtraData.name)
}
inline std::string* GpuRenderStageEvent_ExtraData::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.ExtraData.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GpuRenderStageEvent_ExtraData::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.GpuRenderStageEvent.ExtraData.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GpuRenderStageEvent_ExtraData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.GpuRenderStageEvent.ExtraData.name)
}

// optional string value = 2;
inline bool GpuRenderStageEvent_ExtraData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GpuRenderStageEvent_ExtraData::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GpuRenderStageEvent_ExtraData::value() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.ExtraData.value)
  return value_.GetNoArena();
}
inline void GpuRenderStageEvent_ExtraData::set_value(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.ExtraData.value)
}
inline void GpuRenderStageEvent_ExtraData::set_value(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.GpuRenderStageEvent.ExtraData.value)
}
inline void GpuRenderStageEvent_ExtraData::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.GpuRenderStageEvent.ExtraData.value)
}
inline void GpuRenderStageEvent_ExtraData::set_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.GpuRenderStageEvent.ExtraData.value)
}
inline std::string* GpuRenderStageEvent_ExtraData::mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.ExtraData.value)
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GpuRenderStageEvent_ExtraData::release_value() {
  // @@protoc_insertion_point(field_release:perfetto.protos.GpuRenderStageEvent.ExtraData.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GpuRenderStageEvent_ExtraData::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.GpuRenderStageEvent.ExtraData.value)
}

// -------------------------------------------------------------------

// GpuRenderStageEvent_Specifications_ContextSpec

// optional uint64 context = 1;
inline bool GpuRenderStageEvent_Specifications_ContextSpec::has_context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GpuRenderStageEvent_Specifications_ContextSpec::clear_context() {
  context_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GpuRenderStageEvent_Specifications_ContextSpec::context() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec.context)
  return context_;
}
inline void GpuRenderStageEvent_Specifications_ContextSpec::set_context(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  context_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec.context)
}

// optional int32 pid = 2;
inline bool GpuRenderStageEvent_Specifications_ContextSpec::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GpuRenderStageEvent_Specifications_ContextSpec::clear_pid() {
  pid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GpuRenderStageEvent_Specifications_ContextSpec::pid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec.pid)
  return pid_;
}
inline void GpuRenderStageEvent_Specifications_ContextSpec::set_pid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  pid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec.pid)
}

// -------------------------------------------------------------------

// GpuRenderStageEvent_Specifications_Description

// optional string name = 1;
inline bool GpuRenderStageEvent_Specifications_Description::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GpuRenderStageEvent_Specifications_Description::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GpuRenderStageEvent_Specifications_Description::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.Description.name)
  return name_.GetNoArena();
}
inline void GpuRenderStageEvent_Specifications_Description::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.Specifications.Description.name)
}
inline void GpuRenderStageEvent_Specifications_Description::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.GpuRenderStageEvent.Specifications.Description.name)
}
inline void GpuRenderStageEvent_Specifications_Description::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.GpuRenderStageEvent.Specifications.Description.name)
}
inline void GpuRenderStageEvent_Specifications_Description::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.GpuRenderStageEvent.Specifications.Description.name)
}
inline std::string* GpuRenderStageEvent_Specifications_Description::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.Specifications.Description.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GpuRenderStageEvent_Specifications_Description::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.GpuRenderStageEvent.Specifications.Description.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GpuRenderStageEvent_Specifications_Description::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.GpuRenderStageEvent.Specifications.Description.name)
}

// optional string description = 2;
inline bool GpuRenderStageEvent_Specifications_Description::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GpuRenderStageEvent_Specifications_Description::clear_description() {
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GpuRenderStageEvent_Specifications_Description::description() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.Description.description)
  return description_.GetNoArena();
}
inline void GpuRenderStageEvent_Specifications_Description::set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.Specifications.Description.description)
}
inline void GpuRenderStageEvent_Specifications_Description::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.GpuRenderStageEvent.Specifications.Description.description)
}
inline void GpuRenderStageEvent_Specifications_Description::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.GpuRenderStageEvent.Specifications.Description.description)
}
inline void GpuRenderStageEvent_Specifications_Description::set_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.GpuRenderStageEvent.Specifications.Description.description)
}
inline std::string* GpuRenderStageEvent_Specifications_Description::mutable_description() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.Specifications.Description.description)
  return description_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GpuRenderStageEvent_Specifications_Description::release_description() {
  // @@protoc_insertion_point(field_release:perfetto.protos.GpuRenderStageEvent.Specifications.Description.description)
  if (!has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return description_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GpuRenderStageEvent_Specifications_Description::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  description_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.GpuRenderStageEvent.Specifications.Description.description)
}

// -------------------------------------------------------------------

// GpuRenderStageEvent_Specifications

// optional .perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec context_spec = 1;
inline bool GpuRenderStageEvent_Specifications::has_context_spec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GpuRenderStageEvent_Specifications::clear_context_spec() {
  if (context_spec_ != nullptr) context_spec_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec& GpuRenderStageEvent_Specifications::context_spec() const {
  const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* p = context_spec_;
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.context_spec)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec*>(
      &::perfetto::protos::_GpuRenderStageEvent_Specifications_ContextSpec_default_instance_);
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* GpuRenderStageEvent_Specifications::release_context_spec() {
  // @@protoc_insertion_point(field_release:perfetto.protos.GpuRenderStageEvent.Specifications.context_spec)
  _has_bits_[0] &= ~0x00000001u;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* temp = context_spec_;
  context_spec_ = nullptr;
  return temp;
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* GpuRenderStageEvent_Specifications::mutable_context_spec() {
  _has_bits_[0] |= 0x00000001u;
  if (context_spec_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec>(GetArenaNoVirtual());
    context_spec_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.Specifications.context_spec)
  return context_spec_;
}
inline void GpuRenderStageEvent_Specifications::set_allocated_context_spec(::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* context_spec) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete context_spec_;
  }
  if (context_spec) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      context_spec = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, context_spec, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  context_spec_ = context_spec;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.GpuRenderStageEvent.Specifications.context_spec)
}

// repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description hw_queue = 2;
inline int GpuRenderStageEvent_Specifications::hw_queue_size() const {
  return hw_queue_.size();
}
inline void GpuRenderStageEvent_Specifications::clear_hw_queue() {
  hw_queue_.Clear();
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* GpuRenderStageEvent_Specifications::mutable_hw_queue(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.Specifications.hw_queue)
  return hw_queue_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >*
GpuRenderStageEvent_Specifications::mutable_hw_queue() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.GpuRenderStageEvent.Specifications.hw_queue)
  return &hw_queue_;
}
inline const ::perfetto::protos::GpuRenderStageEvent_Specifications_Description& GpuRenderStageEvent_Specifications::hw_queue(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.hw_queue)
  return hw_queue_.Get(index);
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* GpuRenderStageEvent_Specifications::add_hw_queue() {
  // @@protoc_insertion_point(field_add:perfetto.protos.GpuRenderStageEvent.Specifications.hw_queue)
  return hw_queue_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >&
GpuRenderStageEvent_Specifications::hw_queue() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.GpuRenderStageEvent.Specifications.hw_queue)
  return hw_queue_;
}

// repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description stage = 3;
inline int GpuRenderStageEvent_Specifications::stage_size() const {
  return stage_.size();
}
inline void GpuRenderStageEvent_Specifications::clear_stage() {
  stage_.Clear();
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* GpuRenderStageEvent_Specifications::mutable_stage(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.Specifications.stage)
  return stage_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >*
GpuRenderStageEvent_Specifications::mutable_stage() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.GpuRenderStageEvent.Specifications.stage)
  return &stage_;
}
inline const ::perfetto::protos::GpuRenderStageEvent_Specifications_Description& GpuRenderStageEvent_Specifications::stage(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.stage)
  return stage_.Get(index);
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* GpuRenderStageEvent_Specifications::add_stage() {
  // @@protoc_insertion_point(field_add:perfetto.protos.GpuRenderStageEvent.Specifications.stage)
  return stage_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >&
GpuRenderStageEvent_Specifications::stage() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.GpuRenderStageEvent.Specifications.stage)
  return stage_;
}

// -------------------------------------------------------------------

// GpuRenderStageEvent

// optional uint64 event_id = 1;
inline bool GpuRenderStageEvent::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GpuRenderStageEvent::clear_event_id() {
  event_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GpuRenderStageEvent::event_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.event_id)
  return event_id_;
}
inline void GpuRenderStageEvent::set_event_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.event_id)
}

// optional uint64 duration = 2;
inline bool GpuRenderStageEvent::has_duration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GpuRenderStageEvent::clear_duration() {
  duration_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GpuRenderStageEvent::duration() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.duration)
  return duration_;
}
inline void GpuRenderStageEvent::set_duration(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  duration_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.duration)
}

// optional uint64 hw_queue_iid = 13;
inline bool GpuRenderStageEvent::has_hw_queue_iid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GpuRenderStageEvent::clear_hw_queue_iid() {
  hw_queue_iid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GpuRenderStageEvent::hw_queue_iid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.hw_queue_iid)
  return hw_queue_iid_;
}
inline void GpuRenderStageEvent::set_hw_queue_iid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000800u;
  hw_queue_iid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.hw_queue_iid)
}

// optional uint64 stage_iid = 14;
inline bool GpuRenderStageEvent::has_stage_iid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GpuRenderStageEvent::clear_stage_iid() {
  stage_iid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GpuRenderStageEvent::stage_iid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.stage_iid)
  return stage_iid_;
}
inline void GpuRenderStageEvent::set_stage_iid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00001000u;
  stage_iid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.stage_iid)
}

// optional int32 gpu_id = 11;
inline bool GpuRenderStageEvent::has_gpu_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GpuRenderStageEvent::clear_gpu_id() {
  gpu_id_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GpuRenderStageEvent::gpu_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.gpu_id)
  return gpu_id_;
}
inline void GpuRenderStageEvent::set_gpu_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  gpu_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.gpu_id)
}

// optional uint64 context = 5;
inline bool GpuRenderStageEvent::has_context() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GpuRenderStageEvent::clear_context() {
  context_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GpuRenderStageEvent::context() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.context)
  return context_;
}
inline void GpuRenderStageEvent::set_context(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  context_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.context)
}

// optional uint64 render_target_handle = 8;
inline bool GpuRenderStageEvent::has_render_target_handle() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GpuRenderStageEvent::clear_render_target_handle() {
  render_target_handle_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GpuRenderStageEvent::render_target_handle() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.render_target_handle)
  return render_target_handle_;
}
inline void GpuRenderStageEvent::set_render_target_handle(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  render_target_handle_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.render_target_handle)
}

// optional uint32 submission_id = 10;
inline bool GpuRenderStageEvent::has_submission_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GpuRenderStageEvent::clear_submission_id() {
  submission_id_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GpuRenderStageEvent::submission_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.submission_id)
  return submission_id_;
}
inline void GpuRenderStageEvent::set_submission_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  submission_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.submission_id)
}

// repeated .perfetto.protos.GpuRenderStageEvent.ExtraData extra_data = 6;
inline int GpuRenderStageEvent::extra_data_size() const {
  return extra_data_.size();
}
inline void GpuRenderStageEvent::clear_extra_data() {
  extra_data_.Clear();
}
inline ::perfetto::protos::GpuRenderStageEvent_ExtraData* GpuRenderStageEvent::mutable_extra_data(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.extra_data)
  return extra_data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_ExtraData >*
GpuRenderStageEvent::mutable_extra_data() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.GpuRenderStageEvent.extra_data)
  return &extra_data_;
}
inline const ::perfetto::protos::GpuRenderStageEvent_ExtraData& GpuRenderStageEvent::extra_data(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.extra_data)
  return extra_data_.Get(index);
}
inline ::perfetto::protos::GpuRenderStageEvent_ExtraData* GpuRenderStageEvent::add_extra_data() {
  // @@protoc_insertion_point(field_add:perfetto.protos.GpuRenderStageEvent.extra_data)
  return extra_data_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_ExtraData >&
GpuRenderStageEvent::extra_data() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.GpuRenderStageEvent.extra_data)
  return extra_data_;
}

// optional uint64 render_pass_handle = 9;
inline bool GpuRenderStageEvent::has_render_pass_handle() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GpuRenderStageEvent::clear_render_pass_handle() {
  render_pass_handle_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GpuRenderStageEvent::render_pass_handle() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.render_pass_handle)
  return render_pass_handle_;
}
inline void GpuRenderStageEvent::set_render_pass_handle(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  render_pass_handle_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.render_pass_handle)
}

// repeated uint64 render_subpass_index_mask = 15;
inline int GpuRenderStageEvent::render_subpass_index_mask_size() const {
  return render_subpass_index_mask_.size();
}
inline void GpuRenderStageEvent::clear_render_subpass_index_mask() {
  render_subpass_index_mask_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GpuRenderStageEvent::render_subpass_index_mask(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.render_subpass_index_mask)
  return render_subpass_index_mask_.Get(index);
}
inline void GpuRenderStageEvent::set_render_subpass_index_mask(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  render_subpass_index_mask_.Set(index, value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.render_subpass_index_mask)
}
inline void GpuRenderStageEvent::add_render_subpass_index_mask(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  render_subpass_index_mask_.Add(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.GpuRenderStageEvent.render_subpass_index_mask)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
GpuRenderStageEvent::render_subpass_index_mask() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.GpuRenderStageEvent.render_subpass_index_mask)
  return render_subpass_index_mask_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
GpuRenderStageEvent::mutable_render_subpass_index_mask() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.GpuRenderStageEvent.render_subpass_index_mask)
  return &render_subpass_index_mask_;
}

// optional uint64 command_buffer_handle = 12;
inline bool GpuRenderStageEvent::has_command_buffer_handle() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GpuRenderStageEvent::clear_command_buffer_handle() {
  command_buffer_handle_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GpuRenderStageEvent::command_buffer_handle() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.command_buffer_handle)
  return command_buffer_handle_;
}
inline void GpuRenderStageEvent::set_command_buffer_handle(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000400u;
  command_buffer_handle_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.command_buffer_handle)
}

// optional .perfetto.protos.GpuRenderStageEvent.Specifications specifications = 7 [deprecated = true];
inline bool GpuRenderStageEvent::has_specifications() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GpuRenderStageEvent::clear_specifications() {
  if (specifications_ != nullptr) specifications_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::perfetto::protos::GpuRenderStageEvent_Specifications& GpuRenderStageEvent::specifications() const {
  const ::perfetto::protos::GpuRenderStageEvent_Specifications* p = specifications_;
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.specifications)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::GpuRenderStageEvent_Specifications*>(
      &::perfetto::protos::_GpuRenderStageEvent_Specifications_default_instance_);
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications* GpuRenderStageEvent::release_specifications() {
  // @@protoc_insertion_point(field_release:perfetto.protos.GpuRenderStageEvent.specifications)
  _has_bits_[0] &= ~0x00000001u;
  ::perfetto::protos::GpuRenderStageEvent_Specifications* temp = specifications_;
  specifications_ = nullptr;
  return temp;
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications* GpuRenderStageEvent::mutable_specifications() {
  _has_bits_[0] |= 0x00000001u;
  if (specifications_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent_Specifications>(GetArenaNoVirtual());
    specifications_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.specifications)
  return specifications_;
}
inline void GpuRenderStageEvent::set_allocated_specifications(::perfetto::protos::GpuRenderStageEvent_Specifications* specifications) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete specifications_;
  }
  if (specifications) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      specifications = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, specifications, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  specifications_ = specifications;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.GpuRenderStageEvent.specifications)
}

// optional int32 hw_queue_id = 3 [deprecated = true];
inline bool GpuRenderStageEvent::has_hw_queue_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GpuRenderStageEvent::clear_hw_queue_id() {
  hw_queue_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GpuRenderStageEvent::hw_queue_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.hw_queue_id)
  return hw_queue_id_;
}
inline void GpuRenderStageEvent::set_hw_queue_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  hw_queue_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.hw_queue_id)
}

// optional int32 stage_id = 4 [deprecated = true];
inline bool GpuRenderStageEvent::has_stage_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GpuRenderStageEvent::clear_stage_id() {
  stage_id_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GpuRenderStageEvent::stage_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.stage_id)
  return stage_id_;
}
inline void GpuRenderStageEvent::set_stage_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  stage_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.stage_id)
}

// -------------------------------------------------------------------

// InternedGraphicsContext

// optional uint64 iid = 1;
inline bool InternedGraphicsContext::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InternedGraphicsContext::clear_iid() {
  iid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InternedGraphicsContext::iid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGraphicsContext.iid)
  return iid_;
}
inline void InternedGraphicsContext::set_iid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  iid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGraphicsContext.iid)
}

// optional int32 pid = 2;
inline bool InternedGraphicsContext::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InternedGraphicsContext::clear_pid() {
  pid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InternedGraphicsContext::pid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGraphicsContext.pid)
  return pid_;
}
inline void InternedGraphicsContext::set_pid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  pid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGraphicsContext.pid)
}

// optional .perfetto.protos.InternedGraphicsContext.Api api = 3;
inline bool InternedGraphicsContext::has_api() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InternedGraphicsContext::clear_api() {
  api_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::perfetto::protos::InternedGraphicsContext_Api InternedGraphicsContext::api() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGraphicsContext.api)
  return static_cast< ::perfetto::protos::InternedGraphicsContext_Api >(api_);
}
inline void InternedGraphicsContext::set_api(::perfetto::protos::InternedGraphicsContext_Api value) {
  assert(::perfetto::protos::InternedGraphicsContext_Api_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  api_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGraphicsContext.api)
}

// -------------------------------------------------------------------

// InternedGpuRenderStageSpecification

// optional uint64 iid = 1;
inline bool InternedGpuRenderStageSpecification::has_iid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InternedGpuRenderStageSpecification::clear_iid() {
  iid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InternedGpuRenderStageSpecification::iid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGpuRenderStageSpecification.iid)
  return iid_;
}
inline void InternedGpuRenderStageSpecification::set_iid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  iid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGpuRenderStageSpecification.iid)
}

// optional string name = 2;
inline bool InternedGpuRenderStageSpecification::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InternedGpuRenderStageSpecification::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InternedGpuRenderStageSpecification::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGpuRenderStageSpecification.name)
  return name_.GetNoArena();
}
inline void InternedGpuRenderStageSpecification::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGpuRenderStageSpecification.name)
}
inline void InternedGpuRenderStageSpecification::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.InternedGpuRenderStageSpecification.name)
}
inline void InternedGpuRenderStageSpecification::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.InternedGpuRenderStageSpecification.name)
}
inline void InternedGpuRenderStageSpecification::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.InternedGpuRenderStageSpecification.name)
}
inline std::string* InternedGpuRenderStageSpecification::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.InternedGpuRenderStageSpecification.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InternedGpuRenderStageSpecification::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.InternedGpuRenderStageSpecification.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InternedGpuRenderStageSpecification::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.InternedGpuRenderStageSpecification.name)
}

// optional string description = 3;
inline bool InternedGpuRenderStageSpecification::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InternedGpuRenderStageSpecification::clear_description() {
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& InternedGpuRenderStageSpecification::description() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGpuRenderStageSpecification.description)
  return description_.GetNoArena();
}
inline void InternedGpuRenderStageSpecification::set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGpuRenderStageSpecification.description)
}
inline void InternedGpuRenderStageSpecification::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.InternedGpuRenderStageSpecification.description)
}
inline void InternedGpuRenderStageSpecification::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.InternedGpuRenderStageSpecification.description)
}
inline void InternedGpuRenderStageSpecification::set_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.InternedGpuRenderStageSpecification.description)
}
inline std::string* InternedGpuRenderStageSpecification::mutable_description() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.InternedGpuRenderStageSpecification.description)
  return description_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InternedGpuRenderStageSpecification::release_description() {
  // @@protoc_insertion_point(field_release:perfetto.protos.InternedGpuRenderStageSpecification.description)
  if (!has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return description_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InternedGpuRenderStageSpecification::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  description_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.InternedGpuRenderStageSpecification.description)
}

// optional .perfetto.protos.InternedGpuRenderStageSpecification.RenderStageCategory category = 4;
inline bool InternedGpuRenderStageSpecification::has_category() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InternedGpuRenderStageSpecification::clear_category() {
  category_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification::category() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGpuRenderStageSpecification.category)
  return static_cast< ::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory >(category_);
}
inline void InternedGpuRenderStageSpecification::set_category(::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory value) {
  assert(::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  category_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGpuRenderStageSpecification.category)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace perfetto

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::perfetto::protos::InternedGraphicsContext_Api> : ::std::true_type {};
template <> struct is_proto_enum< ::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory> : ::std::true_type {};

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto
