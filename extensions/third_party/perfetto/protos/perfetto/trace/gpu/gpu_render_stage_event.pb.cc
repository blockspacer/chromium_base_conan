// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/gpu/gpu_render_stage_event.proto

#include "protos/perfetto/trace/gpu/gpu_render_stage_event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GpuRenderStageEvent_Specifications_ContextSpec_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
namespace perfetto {
namespace protos {
class GpuRenderStageEvent_ExtraDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GpuRenderStageEvent_ExtraData> _instance;
} _GpuRenderStageEvent_ExtraData_default_instance_;
class GpuRenderStageEvent_Specifications_ContextSpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GpuRenderStageEvent_Specifications_ContextSpec> _instance;
} _GpuRenderStageEvent_Specifications_ContextSpec_default_instance_;
class GpuRenderStageEvent_Specifications_DescriptionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GpuRenderStageEvent_Specifications_Description> _instance;
} _GpuRenderStageEvent_Specifications_Description_default_instance_;
class GpuRenderStageEvent_SpecificationsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GpuRenderStageEvent_Specifications> _instance;
} _GpuRenderStageEvent_Specifications_default_instance_;
class GpuRenderStageEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GpuRenderStageEvent> _instance;
} _GpuRenderStageEvent_default_instance_;
class InternedGraphicsContextDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InternedGraphicsContext> _instance;
} _InternedGraphicsContext_default_instance_;
class InternedGpuRenderStageSpecificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InternedGpuRenderStageSpecification> _instance;
} _InternedGpuRenderStageSpecification_default_instance_;
}  // namespace protos
}  // namespace perfetto
static void InitDefaultsscc_info_GpuRenderStageEvent_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_GpuRenderStageEvent_default_instance_;
    new (ptr) ::perfetto::protos::GpuRenderStageEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::GpuRenderStageEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GpuRenderStageEvent_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_GpuRenderStageEvent_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {
      &scc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base,
      &scc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base,}};

static void InitDefaultsscc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_GpuRenderStageEvent_ExtraData_default_instance_;
    new (ptr) ::perfetto::protos::GpuRenderStageEvent_ExtraData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::GpuRenderStageEvent_ExtraData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {}};

static void InitDefaultsscc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_GpuRenderStageEvent_Specifications_default_instance_;
    new (ptr) ::perfetto::protos::GpuRenderStageEvent_Specifications();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::GpuRenderStageEvent_Specifications::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {
      &scc_info_GpuRenderStageEvent_Specifications_ContextSpec_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base,
      &scc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base,}};

static void InitDefaultsscc_info_GpuRenderStageEvent_Specifications_ContextSpec_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_GpuRenderStageEvent_Specifications_ContextSpec_default_instance_;
    new (ptr) ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GpuRenderStageEvent_Specifications_ContextSpec_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GpuRenderStageEvent_Specifications_ContextSpec_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {}};

static void InitDefaultsscc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_GpuRenderStageEvent_Specifications_Description_default_instance_;
    new (ptr) ::perfetto::protos::GpuRenderStageEvent_Specifications_Description();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::GpuRenderStageEvent_Specifications_Description::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {}};

static void InitDefaultsscc_info_InternedGpuRenderStageSpecification_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_InternedGpuRenderStageSpecification_default_instance_;
    new (ptr) ::perfetto::protos::InternedGpuRenderStageSpecification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::InternedGpuRenderStageSpecification::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InternedGpuRenderStageSpecification_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_InternedGpuRenderStageSpecification_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {}};

static void InitDefaultsscc_info_InternedGraphicsContext_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_InternedGraphicsContext_default_instance_;
    new (ptr) ::perfetto::protos::InternedGraphicsContext();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::InternedGraphicsContext::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InternedGraphicsContext_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_InternedGraphicsContext_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {}};

namespace perfetto {
namespace protos {
bool InternedGraphicsContext_Api_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> InternedGraphicsContext_Api_strings[4] = {};

static const char InternedGraphicsContext_Api_names[] =
  "OPEN_CL"
  "OPEN_GL"
  "UNDEFINED"
  "VULKAN";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry InternedGraphicsContext_Api_entries[] = {
  { {InternedGraphicsContext_Api_names + 0, 7}, 3 },
  { {InternedGraphicsContext_Api_names + 7, 7}, 1 },
  { {InternedGraphicsContext_Api_names + 14, 9}, 0 },
  { {InternedGraphicsContext_Api_names + 23, 6}, 2 },
};

static const int InternedGraphicsContext_Api_entries_by_number[] = {
  2, // 0 -> UNDEFINED
  1, // 1 -> OPEN_GL
  3, // 2 -> VULKAN
  0, // 3 -> OPEN_CL
};

const std::string& InternedGraphicsContext_Api_Name(
    InternedGraphicsContext_Api value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          InternedGraphicsContext_Api_entries,
          InternedGraphicsContext_Api_entries_by_number,
          4, InternedGraphicsContext_Api_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      InternedGraphicsContext_Api_entries,
      InternedGraphicsContext_Api_entries_by_number,
      4, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     InternedGraphicsContext_Api_strings[idx].get();
}
bool InternedGraphicsContext_Api_Parse(
    const std::string& name, InternedGraphicsContext_Api* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      InternedGraphicsContext_Api_entries, 4, name, &int_value);
  if (success) {
    *value = static_cast<InternedGraphicsContext_Api>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr InternedGraphicsContext_Api InternedGraphicsContext::UNDEFINED;
constexpr InternedGraphicsContext_Api InternedGraphicsContext::OPEN_GL;
constexpr InternedGraphicsContext_Api InternedGraphicsContext::VULKAN;
constexpr InternedGraphicsContext_Api InternedGraphicsContext::OPEN_CL;
constexpr InternedGraphicsContext_Api InternedGraphicsContext::Api_MIN;
constexpr InternedGraphicsContext_Api InternedGraphicsContext::Api_MAX;
constexpr int InternedGraphicsContext::Api_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
bool InternedGpuRenderStageSpecification_RenderStageCategory_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> InternedGpuRenderStageSpecification_RenderStageCategory_strings[3] = {};

static const char InternedGpuRenderStageSpecification_RenderStageCategory_names[] =
  "COMPUTE"
  "GRAPHICS"
  "OTHER";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry InternedGpuRenderStageSpecification_RenderStageCategory_entries[] = {
  { {InternedGpuRenderStageSpecification_RenderStageCategory_names + 0, 7}, 2 },
  { {InternedGpuRenderStageSpecification_RenderStageCategory_names + 7, 8}, 1 },
  { {InternedGpuRenderStageSpecification_RenderStageCategory_names + 15, 5}, 0 },
};

static const int InternedGpuRenderStageSpecification_RenderStageCategory_entries_by_number[] = {
  2, // 0 -> OTHER
  1, // 1 -> GRAPHICS
  0, // 2 -> COMPUTE
};

const std::string& InternedGpuRenderStageSpecification_RenderStageCategory_Name(
    InternedGpuRenderStageSpecification_RenderStageCategory value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          InternedGpuRenderStageSpecification_RenderStageCategory_entries,
          InternedGpuRenderStageSpecification_RenderStageCategory_entries_by_number,
          3, InternedGpuRenderStageSpecification_RenderStageCategory_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      InternedGpuRenderStageSpecification_RenderStageCategory_entries,
      InternedGpuRenderStageSpecification_RenderStageCategory_entries_by_number,
      3, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     InternedGpuRenderStageSpecification_RenderStageCategory_strings[idx].get();
}
bool InternedGpuRenderStageSpecification_RenderStageCategory_Parse(
    const std::string& name, InternedGpuRenderStageSpecification_RenderStageCategory* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      InternedGpuRenderStageSpecification_RenderStageCategory_entries, 3, name, &int_value);
  if (success) {
    *value = static_cast<InternedGpuRenderStageSpecification_RenderStageCategory>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification::OTHER;
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification::GRAPHICS;
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification::COMPUTE;
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification::RenderStageCategory_MIN;
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification::RenderStageCategory_MAX;
constexpr int InternedGpuRenderStageSpecification::RenderStageCategory_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void GpuRenderStageEvent_ExtraData::InitAsDefaultInstance() {
}
class GpuRenderStageEvent_ExtraData::_Internal {
 public:
  using HasBits = decltype(std::declval<GpuRenderStageEvent_ExtraData>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GpuRenderStageEvent_ExtraData::GpuRenderStageEvent_ExtraData()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.GpuRenderStageEvent.ExtraData)
}
GpuRenderStageEvent_ExtraData::GpuRenderStageEvent_ExtraData(const GpuRenderStageEvent_ExtraData& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.GpuRenderStageEvent.ExtraData)
}

void GpuRenderStageEvent_ExtraData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GpuRenderStageEvent_ExtraData::~GpuRenderStageEvent_ExtraData() {
  // @@protoc_insertion_point(destructor:perfetto.protos.GpuRenderStageEvent.ExtraData)
  SharedDtor();
}

void GpuRenderStageEvent_ExtraData::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GpuRenderStageEvent_ExtraData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GpuRenderStageEvent_ExtraData& GpuRenderStageEvent_ExtraData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void GpuRenderStageEvent_ExtraData::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.GpuRenderStageEvent.ExtraData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GpuRenderStageEvent_ExtraData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_value(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GpuRenderStageEvent_ExtraData::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.GpuRenderStageEvent.ExtraData)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.GpuRenderStageEvent.ExtraData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.GpuRenderStageEvent.ExtraData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GpuRenderStageEvent_ExtraData::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.GpuRenderStageEvent.ExtraData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.GpuRenderStageEvent.ExtraData)
}

size_t GpuRenderStageEvent_ExtraData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.GpuRenderStageEvent.ExtraData)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpuRenderStageEvent_ExtraData::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GpuRenderStageEvent_ExtraData*>(
      &from));
}

void GpuRenderStageEvent_ExtraData::MergeFrom(const GpuRenderStageEvent_ExtraData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.GpuRenderStageEvent.ExtraData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void GpuRenderStageEvent_ExtraData::CopyFrom(const GpuRenderStageEvent_ExtraData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.GpuRenderStageEvent.ExtraData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpuRenderStageEvent_ExtraData::IsInitialized() const {
  return true;
}

void GpuRenderStageEvent_ExtraData::InternalSwap(GpuRenderStageEvent_ExtraData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

std::string GpuRenderStageEvent_ExtraData::GetTypeName() const {
  return "perfetto.protos.GpuRenderStageEvent.ExtraData";
}


// ===================================================================

void GpuRenderStageEvent_Specifications_ContextSpec::InitAsDefaultInstance() {
}
class GpuRenderStageEvent_Specifications_ContextSpec::_Internal {
 public:
  using HasBits = decltype(std::declval<GpuRenderStageEvent_Specifications_ContextSpec>()._has_bits_);
  static void set_has_context(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GpuRenderStageEvent_Specifications_ContextSpec::GpuRenderStageEvent_Specifications_ContextSpec()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
}
GpuRenderStageEvent_Specifications_ContextSpec::GpuRenderStageEvent_Specifications_ContextSpec(const GpuRenderStageEvent_Specifications_ContextSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&context_, &from.context_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&context_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
}

void GpuRenderStageEvent_Specifications_ContextSpec::SharedCtor() {
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&context_)) + sizeof(pid_));
}

GpuRenderStageEvent_Specifications_ContextSpec::~GpuRenderStageEvent_Specifications_ContextSpec() {
  // @@protoc_insertion_point(destructor:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  SharedDtor();
}

void GpuRenderStageEvent_Specifications_ContextSpec::SharedDtor() {
}

void GpuRenderStageEvent_Specifications_ContextSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GpuRenderStageEvent_Specifications_ContextSpec& GpuRenderStageEvent_Specifications_ContextSpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GpuRenderStageEvent_Specifications_ContextSpec_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void GpuRenderStageEvent_Specifications_ContextSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&context_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&context_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GpuRenderStageEvent_Specifications_ContextSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 context = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_context(&has_bits);
          context_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 pid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_pid(&has_bits);
          pid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GpuRenderStageEvent_Specifications_ContextSpec::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 context = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_context(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &context_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pid = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_pid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GpuRenderStageEvent_Specifications_ContextSpec::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 context = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(1, this->context(), output);
  }

  // optional int32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->pid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
}

size_t GpuRenderStageEvent_Specifications_ContextSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 context = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->context());
    }

    // optional int32 pid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->pid());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpuRenderStageEvent_Specifications_ContextSpec::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GpuRenderStageEvent_Specifications_ContextSpec*>(
      &from));
}

void GpuRenderStageEvent_Specifications_ContextSpec::MergeFrom(const GpuRenderStageEvent_Specifications_ContextSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      context_ = from.context_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GpuRenderStageEvent_Specifications_ContextSpec::CopyFrom(const GpuRenderStageEvent_Specifications_ContextSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpuRenderStageEvent_Specifications_ContextSpec::IsInitialized() const {
  return true;
}

void GpuRenderStageEvent_Specifications_ContextSpec::InternalSwap(GpuRenderStageEvent_Specifications_ContextSpec* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(context_, other->context_);
  swap(pid_, other->pid_);
}

std::string GpuRenderStageEvent_Specifications_ContextSpec::GetTypeName() const {
  return "perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec";
}


// ===================================================================

void GpuRenderStageEvent_Specifications_Description::InitAsDefaultInstance() {
}
class GpuRenderStageEvent_Specifications_Description::_Internal {
 public:
  using HasBits = decltype(std::declval<GpuRenderStageEvent_Specifications_Description>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GpuRenderStageEvent_Specifications_Description::GpuRenderStageEvent_Specifications_Description()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
}
GpuRenderStageEvent_Specifications_Description::GpuRenderStageEvent_Specifications_Description(const GpuRenderStageEvent_Specifications_Description& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
}

void GpuRenderStageEvent_Specifications_Description::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GpuRenderStageEvent_Specifications_Description::~GpuRenderStageEvent_Specifications_Description() {
  // @@protoc_insertion_point(destructor:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  SharedDtor();
}

void GpuRenderStageEvent_Specifications_Description::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GpuRenderStageEvent_Specifications_Description::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GpuRenderStageEvent_Specifications_Description& GpuRenderStageEvent_Specifications_Description::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void GpuRenderStageEvent_Specifications_Description::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GpuRenderStageEvent_Specifications_Description::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_description(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GpuRenderStageEvent_Specifications_Description::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GpuRenderStageEvent_Specifications_Description::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string description = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
}

size_t GpuRenderStageEvent_Specifications_Description::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string description = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->description());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpuRenderStageEvent_Specifications_Description::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GpuRenderStageEvent_Specifications_Description*>(
      &from));
}

void GpuRenderStageEvent_Specifications_Description::MergeFrom(const GpuRenderStageEvent_Specifications_Description& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
  }
}

void GpuRenderStageEvent_Specifications_Description::CopyFrom(const GpuRenderStageEvent_Specifications_Description& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpuRenderStageEvent_Specifications_Description::IsInitialized() const {
  return true;
}

void GpuRenderStageEvent_Specifications_Description::InternalSwap(GpuRenderStageEvent_Specifications_Description* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

std::string GpuRenderStageEvent_Specifications_Description::GetTypeName() const {
  return "perfetto.protos.GpuRenderStageEvent.Specifications.Description";
}


// ===================================================================

void GpuRenderStageEvent_Specifications::InitAsDefaultInstance() {
  ::perfetto::protos::_GpuRenderStageEvent_Specifications_default_instance_._instance.get_mutable()->context_spec_ = const_cast< ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec*>(
      ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec::internal_default_instance());
}
class GpuRenderStageEvent_Specifications::_Internal {
 public:
  using HasBits = decltype(std::declval<GpuRenderStageEvent_Specifications>()._has_bits_);
  static const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec& context_spec(const GpuRenderStageEvent_Specifications* msg);
  static void set_has_context_spec(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec&
GpuRenderStageEvent_Specifications::_Internal::context_spec(const GpuRenderStageEvent_Specifications* msg) {
  return *msg->context_spec_;
}
GpuRenderStageEvent_Specifications::GpuRenderStageEvent_Specifications()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.GpuRenderStageEvent.Specifications)
}
GpuRenderStageEvent_Specifications::GpuRenderStageEvent_Specifications(const GpuRenderStageEvent_Specifications& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      hw_queue_(from.hw_queue_),
      stage_(from.stage_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_context_spec()) {
    context_spec_ = new ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec(*from.context_spec_);
  } else {
    context_spec_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.GpuRenderStageEvent.Specifications)
}

void GpuRenderStageEvent_Specifications::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  context_spec_ = nullptr;
}

GpuRenderStageEvent_Specifications::~GpuRenderStageEvent_Specifications() {
  // @@protoc_insertion_point(destructor:perfetto.protos.GpuRenderStageEvent.Specifications)
  SharedDtor();
}

void GpuRenderStageEvent_Specifications::SharedDtor() {
  if (this != internal_default_instance()) delete context_spec_;
}

void GpuRenderStageEvent_Specifications::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GpuRenderStageEvent_Specifications& GpuRenderStageEvent_Specifications::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void GpuRenderStageEvent_Specifications::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.GpuRenderStageEvent.Specifications)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hw_queue_.Clear();
  stage_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(context_spec_ != nullptr);
    context_spec_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GpuRenderStageEvent_Specifications::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec context_spec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_context_spec(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description hw_queue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_hw_queue(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description stage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_stage(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GpuRenderStageEvent_Specifications::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.GpuRenderStageEvent.Specifications)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec context_spec = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_context_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description hw_queue = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_hw_queue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description stage = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_stage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.GpuRenderStageEvent.Specifications)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.GpuRenderStageEvent.Specifications)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GpuRenderStageEvent_Specifications::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.GpuRenderStageEvent.Specifications)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec context_spec = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::context_spec(this), output);
  }

  // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description hw_queue = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hw_queue_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2,
      this->hw_queue(static_cast<int>(i)),
      output);
  }

  // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description stage = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stage_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3,
      this->stage(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.GpuRenderStageEvent.Specifications)
}

size_t GpuRenderStageEvent_Specifications::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.GpuRenderStageEvent.Specifications)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description hw_queue = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->hw_queue_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->hw_queue(static_cast<int>(i)));
    }
  }

  // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description stage = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->stage_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->stage(static_cast<int>(i)));
    }
  }

  // optional .perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec context_spec = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *context_spec_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpuRenderStageEvent_Specifications::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GpuRenderStageEvent_Specifications*>(
      &from));
}

void GpuRenderStageEvent_Specifications::MergeFrom(const GpuRenderStageEvent_Specifications& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.GpuRenderStageEvent.Specifications)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hw_queue_.MergeFrom(from.hw_queue_);
  stage_.MergeFrom(from.stage_);
  if (from.has_context_spec()) {
    mutable_context_spec()->::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec::MergeFrom(from.context_spec());
  }
}

void GpuRenderStageEvent_Specifications::CopyFrom(const GpuRenderStageEvent_Specifications& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.GpuRenderStageEvent.Specifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpuRenderStageEvent_Specifications::IsInitialized() const {
  return true;
}

void GpuRenderStageEvent_Specifications::InternalSwap(GpuRenderStageEvent_Specifications* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&hw_queue_)->InternalSwap(CastToBase(&other->hw_queue_));
  CastToBase(&stage_)->InternalSwap(CastToBase(&other->stage_));
  swap(context_spec_, other->context_spec_);
}

std::string GpuRenderStageEvent_Specifications::GetTypeName() const {
  return "perfetto.protos.GpuRenderStageEvent.Specifications";
}


// ===================================================================

void GpuRenderStageEvent::InitAsDefaultInstance() {
  ::perfetto::protos::_GpuRenderStageEvent_default_instance_._instance.get_mutable()->specifications_ = const_cast< ::perfetto::protos::GpuRenderStageEvent_Specifications*>(
      ::perfetto::protos::GpuRenderStageEvent_Specifications::internal_default_instance());
}
class GpuRenderStageEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<GpuRenderStageEvent>()._has_bits_);
  static void set_has_event_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_hw_queue_iid(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_stage_iid(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_gpu_id(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_context(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_render_target_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_submission_id(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_render_pass_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_command_buffer_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::perfetto::protos::GpuRenderStageEvent_Specifications& specifications(const GpuRenderStageEvent* msg);
  static void set_has_specifications(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hw_queue_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_stage_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::perfetto::protos::GpuRenderStageEvent_Specifications&
GpuRenderStageEvent::_Internal::specifications(const GpuRenderStageEvent* msg) {
  return *msg->specifications_;
}
GpuRenderStageEvent::GpuRenderStageEvent()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.GpuRenderStageEvent)
}
GpuRenderStageEvent::GpuRenderStageEvent(const GpuRenderStageEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      extra_data_(from.extra_data_),
      render_subpass_index_mask_(from.render_subpass_index_mask_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _extensions_.MergeFrom(from._extensions_);
  if (from.has_specifications()) {
    specifications_ = new ::perfetto::protos::GpuRenderStageEvent_Specifications(*from.specifications_);
  } else {
    specifications_ = nullptr;
  }
  ::memcpy(&event_id_, &from.event_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&stage_iid_) -
    reinterpret_cast<char*>(&event_id_)) + sizeof(stage_iid_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.GpuRenderStageEvent)
}

void GpuRenderStageEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GpuRenderStageEvent_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  ::memset(&specifications_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stage_iid_) -
      reinterpret_cast<char*>(&specifications_)) + sizeof(stage_iid_));
}

GpuRenderStageEvent::~GpuRenderStageEvent() {
  // @@protoc_insertion_point(destructor:perfetto.protos.GpuRenderStageEvent)
  SharedDtor();
}

void GpuRenderStageEvent::SharedDtor() {
  if (this != internal_default_instance()) delete specifications_;
}

void GpuRenderStageEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GpuRenderStageEvent& GpuRenderStageEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GpuRenderStageEvent_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void GpuRenderStageEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.GpuRenderStageEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _extensions_.Clear();
  extra_data_.Clear();
  render_subpass_index_mask_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(specifications_ != nullptr);
    specifications_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&event_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&render_pass_handle_) -
        reinterpret_cast<char*>(&event_id_)) + sizeof(render_pass_handle_));
  }
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&submission_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stage_iid_) -
        reinterpret_cast<char*>(&submission_id_)) + sizeof(stage_iid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GpuRenderStageEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 event_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_event_id(&has_bits);
          event_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 duration = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_duration(&has_bits);
          duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 hw_queue_id = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_hw_queue_id(&has_bits);
          hw_queue_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 stage_id = 4 [deprecated = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_stage_id(&has_bits);
          stage_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 context = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_context(&has_bits);
          context_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .perfetto.protos.GpuRenderStageEvent.ExtraData extra_data = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_extra_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.GpuRenderStageEvent.Specifications specifications = 7 [deprecated = true];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_specifications(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 render_target_handle = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_render_target_handle(&has_bits);
          render_target_handle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 render_pass_handle = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_render_pass_handle(&has_bits);
          render_pass_handle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 submission_id = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_submission_id(&has_bits);
          submission_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 gpu_id = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_gpu_id(&has_bits);
          gpu_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 command_buffer_handle = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_command_buffer_handle(&has_bits);
          command_buffer_handle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 hw_queue_iid = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_hw_queue_iid(&has_bits);
          hw_queue_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 stage_iid = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_stage_iid(&has_bits);
          stage_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 render_subpass_index_mask = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          ptr -= 1;
          do {
            ptr += 1;
            add_render_subpass_index_mask(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 120);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(mutable_render_subpass_index_mask(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
      if ((800u <= tag && tag < 808u)) {
        ptr = _extensions_.ParseField(tag, ptr,
            internal_default_instance(), &_internal_metadata_, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GpuRenderStageEvent::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.GpuRenderStageEvent)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 event_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_event_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &event_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 duration = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_duration(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hw_queue_id = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_hw_queue_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &hw_queue_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 stage_id = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_stage_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 context = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_context(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &context_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.GpuRenderStageEvent.ExtraData extra_data = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_extra_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.GpuRenderStageEvent.Specifications specifications = 7 [deprecated = true];
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_specifications()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 render_target_handle = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_render_target_handle(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &render_target_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 render_pass_handle = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_render_pass_handle(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &render_pass_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 submission_id = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_submission_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &submission_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gpu_id = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          _Internal::set_has_gpu_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &gpu_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 command_buffer_handle = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          _Internal::set_has_command_buffer_handle(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &command_buffer_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 hw_queue_iid = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {
          _Internal::set_has_hw_queue_iid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hw_queue_iid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 stage_iid = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          _Internal::set_has_stage_iid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &stage_iid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 render_subpass_index_mask = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (120 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 1, 120u, input, this->mutable_render_subpass_index_mask())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (122 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_render_subpass_index_mask())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        if ((800u <= tag && tag < 808u)) {
          DO_(_extensions_.ParseField(tag, input,
              internal_default_instance(),
              &unknown_fields_stream));
          continue;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.GpuRenderStageEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.GpuRenderStageEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GpuRenderStageEvent::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.GpuRenderStageEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 event_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(1, this->event_id(), output);
  }

  // optional uint64 duration = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(2, this->duration(), output);
  }

  // optional int32 hw_queue_id = 3 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->hw_queue_id(), output);
  }

  // optional int32 stage_id = 4 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->stage_id(), output);
  }

  // optional uint64 context = 5;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(5, this->context(), output);
  }

  // repeated .perfetto.protos.GpuRenderStageEvent.ExtraData extra_data = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extra_data_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      6,
      this->extra_data(static_cast<int>(i)),
      output);
  }

  // optional .perfetto.protos.GpuRenderStageEvent.Specifications specifications = 7 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      7, _Internal::specifications(this), output);
  }

  // optional uint64 render_target_handle = 8;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(8, this->render_target_handle(), output);
  }

  // optional uint64 render_pass_handle = 9;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(9, this->render_pass_handle(), output);
  }

  // optional uint32 submission_id = 10;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(10, this->submission_id(), output);
  }

  // optional int32 gpu_id = 11;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(11, this->gpu_id(), output);
  }

  // optional uint64 command_buffer_handle = 12;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(12, this->command_buffer_handle(), output);
  }

  // optional uint64 hw_queue_iid = 13;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(13, this->hw_queue_iid(), output);
  }

  // optional uint64 stage_iid = 14;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(14, this->stage_iid(), output);
  }

  // repeated uint64 render_subpass_index_mask = 15;
  for (int i = 0, n = this->render_subpass_index_mask_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(
      15, this->render_subpass_index_mask(i), output);
  }

  // Extension range [100, 101)
  _extensions_.SerializeWithCachedSizes(100, 101, output);

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.GpuRenderStageEvent)
}

size_t GpuRenderStageEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.GpuRenderStageEvent)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .perfetto.protos.GpuRenderStageEvent.ExtraData extra_data = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->extra_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->extra_data(static_cast<int>(i)));
    }
  }

  // repeated uint64 render_subpass_index_mask = 15;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->render_subpass_index_mask_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->render_subpass_index_mask_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .perfetto.protos.GpuRenderStageEvent.Specifications specifications = 7 [deprecated = true];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *specifications_);
    }

    // optional uint64 event_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->event_id());
    }

    // optional uint64 duration = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->duration());
    }

    // optional int32 hw_queue_id = 3 [deprecated = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->hw_queue_id());
    }

    // optional int32 stage_id = 4 [deprecated = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->stage_id());
    }

    // optional uint64 context = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->context());
    }

    // optional uint64 render_target_handle = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->render_target_handle());
    }

    // optional uint64 render_pass_handle = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->render_pass_handle());
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional uint32 submission_id = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->submission_id());
    }

    // optional int32 gpu_id = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->gpu_id());
    }

    // optional uint64 command_buffer_handle = 12;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->command_buffer_handle());
    }

    // optional uint64 hw_queue_iid = 13;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->hw_queue_iid());
    }

    // optional uint64 stage_iid = 14;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->stage_iid());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpuRenderStageEvent::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GpuRenderStageEvent*>(
      &from));
}

void GpuRenderStageEvent::MergeFrom(const GpuRenderStageEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.GpuRenderStageEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extra_data_.MergeFrom(from.extra_data_);
  render_subpass_index_mask_.MergeFrom(from.render_subpass_index_mask_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_specifications()->::perfetto::protos::GpuRenderStageEvent_Specifications::MergeFrom(from.specifications());
    }
    if (cached_has_bits & 0x00000002u) {
      event_id_ = from.event_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000008u) {
      hw_queue_id_ = from.hw_queue_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      stage_id_ = from.stage_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      context_ = from.context_;
    }
    if (cached_has_bits & 0x00000040u) {
      render_target_handle_ = from.render_target_handle_;
    }
    if (cached_has_bits & 0x00000080u) {
      render_pass_handle_ = from.render_pass_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      submission_id_ = from.submission_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      gpu_id_ = from.gpu_id_;
    }
    if (cached_has_bits & 0x00000400u) {
      command_buffer_handle_ = from.command_buffer_handle_;
    }
    if (cached_has_bits & 0x00000800u) {
      hw_queue_iid_ = from.hw_queue_iid_;
    }
    if (cached_has_bits & 0x00001000u) {
      stage_iid_ = from.stage_iid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GpuRenderStageEvent::CopyFrom(const GpuRenderStageEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.GpuRenderStageEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpuRenderStageEvent::IsInitialized() const {
  if (!_extensions_.IsInitialized()) {
    return false;
  }

  return true;
}

void GpuRenderStageEvent::InternalSwap(GpuRenderStageEvent* other) {
  using std::swap;
  _extensions_.Swap(&other->_extensions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&extra_data_)->InternalSwap(CastToBase(&other->extra_data_));
  render_subpass_index_mask_.InternalSwap(&other->render_subpass_index_mask_);
  swap(specifications_, other->specifications_);
  swap(event_id_, other->event_id_);
  swap(duration_, other->duration_);
  swap(hw_queue_id_, other->hw_queue_id_);
  swap(stage_id_, other->stage_id_);
  swap(context_, other->context_);
  swap(render_target_handle_, other->render_target_handle_);
  swap(render_pass_handle_, other->render_pass_handle_);
  swap(submission_id_, other->submission_id_);
  swap(gpu_id_, other->gpu_id_);
  swap(command_buffer_handle_, other->command_buffer_handle_);
  swap(hw_queue_iid_, other->hw_queue_iid_);
  swap(stage_iid_, other->stage_iid_);
}

std::string GpuRenderStageEvent::GetTypeName() const {
  return "perfetto.protos.GpuRenderStageEvent";
}


// ===================================================================

void InternedGraphicsContext::InitAsDefaultInstance() {
}
class InternedGraphicsContext::_Internal {
 public:
  using HasBits = decltype(std::declval<InternedGraphicsContext>()._has_bits_);
  static void set_has_iid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_api(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

InternedGraphicsContext::InternedGraphicsContext()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.InternedGraphicsContext)
}
InternedGraphicsContext::InternedGraphicsContext(const InternedGraphicsContext& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&iid_, &from.iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&api_) -
    reinterpret_cast<char*>(&iid_)) + sizeof(api_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.InternedGraphicsContext)
}

void InternedGraphicsContext::SharedCtor() {
  ::memset(&iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&api_) -
      reinterpret_cast<char*>(&iid_)) + sizeof(api_));
}

InternedGraphicsContext::~InternedGraphicsContext() {
  // @@protoc_insertion_point(destructor:perfetto.protos.InternedGraphicsContext)
  SharedDtor();
}

void InternedGraphicsContext::SharedDtor() {
}

void InternedGraphicsContext::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InternedGraphicsContext& InternedGraphicsContext::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InternedGraphicsContext_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void InternedGraphicsContext::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.InternedGraphicsContext)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&iid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&api_) -
        reinterpret_cast<char*>(&iid_)) + sizeof(api_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InternedGraphicsContext::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 iid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_iid(&has_bits);
          iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 pid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_pid(&has_bits);
          pid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.InternedGraphicsContext.Api api = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::perfetto::protos::InternedGraphicsContext_Api_IsValid(val))) {
            set_api(static_cast<::perfetto::protos::InternedGraphicsContext_Api>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InternedGraphicsContext::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.InternedGraphicsContext)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 iid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_iid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &iid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pid = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_pid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.InternedGraphicsContext.Api api = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::perfetto::protos::InternedGraphicsContext_Api_IsValid(value)) {
            set_api(static_cast< ::perfetto::protos::InternedGraphicsContext_Api >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.InternedGraphicsContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.InternedGraphicsContext)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InternedGraphicsContext::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.InternedGraphicsContext)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 iid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(1, this->iid(), output);
  }

  // optional int32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->pid(), output);
  }

  // optional .perfetto.protos.InternedGraphicsContext.Api api = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      3, this->api(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.InternedGraphicsContext)
}

size_t InternedGraphicsContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.InternedGraphicsContext)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 iid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->iid());
    }

    // optional int32 pid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->pid());
    }

    // optional .perfetto.protos.InternedGraphicsContext.Api api = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->api());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InternedGraphicsContext::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const InternedGraphicsContext*>(
      &from));
}

void InternedGraphicsContext::MergeFrom(const InternedGraphicsContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.InternedGraphicsContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      iid_ = from.iid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000004u) {
      api_ = from.api_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InternedGraphicsContext::CopyFrom(const InternedGraphicsContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.InternedGraphicsContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternedGraphicsContext::IsInitialized() const {
  return true;
}

void InternedGraphicsContext::InternalSwap(InternedGraphicsContext* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(iid_, other->iid_);
  swap(pid_, other->pid_);
  swap(api_, other->api_);
}

std::string InternedGraphicsContext::GetTypeName() const {
  return "perfetto.protos.InternedGraphicsContext";
}


// ===================================================================

void InternedGpuRenderStageSpecification::InitAsDefaultInstance() {
}
class InternedGpuRenderStageSpecification::_Internal {
 public:
  using HasBits = decltype(std::declval<InternedGpuRenderStageSpecification>()._has_bits_);
  static void set_has_iid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_category(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

InternedGpuRenderStageSpecification::InternedGpuRenderStageSpecification()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.InternedGpuRenderStageSpecification)
}
InternedGpuRenderStageSpecification::InternedGpuRenderStageSpecification(const InternedGpuRenderStageSpecification& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&iid_, &from.iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&category_) -
    reinterpret_cast<char*>(&iid_)) + sizeof(category_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.InternedGpuRenderStageSpecification)
}

void InternedGpuRenderStageSpecification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InternedGpuRenderStageSpecification_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&category_) -
      reinterpret_cast<char*>(&iid_)) + sizeof(category_));
}

InternedGpuRenderStageSpecification::~InternedGpuRenderStageSpecification() {
  // @@protoc_insertion_point(destructor:perfetto.protos.InternedGpuRenderStageSpecification)
  SharedDtor();
}

void InternedGpuRenderStageSpecification::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InternedGpuRenderStageSpecification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InternedGpuRenderStageSpecification& InternedGpuRenderStageSpecification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InternedGpuRenderStageSpecification_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void InternedGpuRenderStageSpecification::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.InternedGpuRenderStageSpecification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&iid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&category_) -
        reinterpret_cast<char*>(&iid_)) + sizeof(category_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InternedGpuRenderStageSpecification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 iid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_iid(&has_bits);
          iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_description(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.InternedGpuRenderStageSpecification.RenderStageCategory category = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory_IsValid(val))) {
            set_category(static_cast<::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InternedGpuRenderStageSpecification::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.InternedGpuRenderStageSpecification)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 iid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_iid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &iid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.InternedGpuRenderStageSpecification.RenderStageCategory category = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory_IsValid(value)) {
            set_category(static_cast< ::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory >(value));
          } else {
            unknown_fields_stream.WriteVarint32(32u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.InternedGpuRenderStageSpecification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.InternedGpuRenderStageSpecification)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InternedGpuRenderStageSpecification::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.InternedGpuRenderStageSpecification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 iid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(1, this->iid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string description = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // optional .perfetto.protos.InternedGpuRenderStageSpecification.RenderStageCategory category = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      4, this->category(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.InternedGpuRenderStageSpecification)
}

size_t InternedGpuRenderStageSpecification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.InternedGpuRenderStageSpecification)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string description = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional uint64 iid = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->iid());
    }

    // optional .perfetto.protos.InternedGpuRenderStageSpecification.RenderStageCategory category = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->category());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InternedGpuRenderStageSpecification::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const InternedGpuRenderStageSpecification*>(
      &from));
}

void InternedGpuRenderStageSpecification::MergeFrom(const InternedGpuRenderStageSpecification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.InternedGpuRenderStageSpecification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000004u) {
      iid_ = from.iid_;
    }
    if (cached_has_bits & 0x00000008u) {
      category_ = from.category_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InternedGpuRenderStageSpecification::CopyFrom(const InternedGpuRenderStageSpecification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.InternedGpuRenderStageSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternedGpuRenderStageSpecification::IsInitialized() const {
  return true;
}

void InternedGpuRenderStageSpecification::InternalSwap(InternedGpuRenderStageSpecification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(iid_, other->iid_);
  swap(category_, other->category_);
}

std::string InternedGpuRenderStageSpecification::GetTypeName() const {
  return "perfetto.protos.InternedGpuRenderStageSpecification";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::GpuRenderStageEvent_ExtraData* Arena::CreateMaybeMessage< ::perfetto::protos::GpuRenderStageEvent_ExtraData >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::GpuRenderStageEvent_ExtraData >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* Arena::CreateMaybeMessage< ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* Arena::CreateMaybeMessage< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::GpuRenderStageEvent_Specifications* Arena::CreateMaybeMessage< ::perfetto::protos::GpuRenderStageEvent_Specifications >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::GpuRenderStageEvent_Specifications >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::GpuRenderStageEvent* Arena::CreateMaybeMessage< ::perfetto::protos::GpuRenderStageEvent >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::GpuRenderStageEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::InternedGraphicsContext* Arena::CreateMaybeMessage< ::perfetto::protos::InternedGraphicsContext >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::InternedGraphicsContext >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::InternedGpuRenderStageSpecification* Arena::CreateMaybeMessage< ::perfetto::protos::InternedGpuRenderStageSpecification >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::InternedGpuRenderStageSpecification >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
