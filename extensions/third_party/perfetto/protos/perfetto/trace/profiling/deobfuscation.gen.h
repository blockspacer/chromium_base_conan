// DO NOT EDIT. Autogenerated by Perfetto cppgen_plugin
#ifndef PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_PROFILING_DEOBFUSCATION_PROTO_CPP_H_
#define PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_PROFILING_DEOBFUSCATION_PROTO_CPP_H_

#include <stdint.h>
#include <bitset>
#include <vector>
#include <string>
#include <type_traits>

#include "perfetto/protozero/cpp_message_obj.h"
#include "perfetto/protozero/copyable_ptr.h"
#include "perfetto/base/export.h"

namespace perfetto {
namespace protos {
namespace gen {
class DeobfuscationMapping;
class ObfuscatedClass;
class ObfuscatedMember;
}  // namespace perfetto
}  // namespace protos
}  // namespace gen

namespace protozero {
class Message;
}  // namespace protozero

namespace perfetto {
namespace protos {
namespace gen {

class PERFETTO_EXPORT DeobfuscationMapping : public ::protozero::CppMessageObj {
 public:
  enum FieldNumbers {
    kPackageNameFieldNumber = 1,
    kVersionCodeFieldNumber = 2,
    kObfuscatedClassesFieldNumber = 3,
  };

  DeobfuscationMapping();
  ~DeobfuscationMapping() override;
  DeobfuscationMapping(DeobfuscationMapping&&) noexcept;
  DeobfuscationMapping& operator=(DeobfuscationMapping&&);
  DeobfuscationMapping(const DeobfuscationMapping&);
  DeobfuscationMapping& operator=(const DeobfuscationMapping&);
  bool operator==(const DeobfuscationMapping&) const;
  bool operator!=(const DeobfuscationMapping& other) const { return !(*this == other); }

  bool ParseFromArray(const void*, size_t) override;
  std::string SerializeAsString() const override;
  std::vector<uint8_t> SerializeAsArray() const override;
  void Serialize(::protozero::Message*) const;

  bool has_package_name() const { return _has_field_[1]; }
  const std::string& package_name() const { return package_name_; }
  void set_package_name(const std::string& value) { package_name_ = value; _has_field_.set(1); }

  bool has_version_code() const { return _has_field_[2]; }
  int64_t version_code() const { return version_code_; }
  void set_version_code(int64_t value) { version_code_ = value; _has_field_.set(2); }

  const std::vector<ObfuscatedClass>& obfuscated_classes() const { return obfuscated_classes_; }
  std::vector<ObfuscatedClass>* mutable_obfuscated_classes() { return &obfuscated_classes_; }
  int obfuscated_classes_size() const;
  void clear_obfuscated_classes();
  ObfuscatedClass* add_obfuscated_classes();

 private:
  std::string package_name_{};
  int64_t version_code_{};
  std::vector<ObfuscatedClass> obfuscated_classes_;

  // Allows to preserve unknown protobuf fields for compatibility
  // with future versions of .proto files.
  std::string unknown_fields_;

  std::bitset<4> _has_field_{};
};


class PERFETTO_EXPORT ObfuscatedClass : public ::protozero::CppMessageObj {
 public:
  enum FieldNumbers {
    kObfuscatedNameFieldNumber = 1,
    kDeobfuscatedNameFieldNumber = 2,
    kObfuscatedMembersFieldNumber = 3,
    kObfuscatedMethodsFieldNumber = 4,
  };

  ObfuscatedClass();
  ~ObfuscatedClass() override;
  ObfuscatedClass(ObfuscatedClass&&) noexcept;
  ObfuscatedClass& operator=(ObfuscatedClass&&);
  ObfuscatedClass(const ObfuscatedClass&);
  ObfuscatedClass& operator=(const ObfuscatedClass&);
  bool operator==(const ObfuscatedClass&) const;
  bool operator!=(const ObfuscatedClass& other) const { return !(*this == other); }

  bool ParseFromArray(const void*, size_t) override;
  std::string SerializeAsString() const override;
  std::vector<uint8_t> SerializeAsArray() const override;
  void Serialize(::protozero::Message*) const;

  bool has_obfuscated_name() const { return _has_field_[1]; }
  const std::string& obfuscated_name() const { return obfuscated_name_; }
  void set_obfuscated_name(const std::string& value) { obfuscated_name_ = value; _has_field_.set(1); }

  bool has_deobfuscated_name() const { return _has_field_[2]; }
  const std::string& deobfuscated_name() const { return deobfuscated_name_; }
  void set_deobfuscated_name(const std::string& value) { deobfuscated_name_ = value; _has_field_.set(2); }

  const std::vector<ObfuscatedMember>& obfuscated_members() const { return obfuscated_members_; }
  std::vector<ObfuscatedMember>* mutable_obfuscated_members() { return &obfuscated_members_; }
  int obfuscated_members_size() const;
  void clear_obfuscated_members();
  ObfuscatedMember* add_obfuscated_members();

  const std::vector<ObfuscatedMember>& obfuscated_methods() const { return obfuscated_methods_; }
  std::vector<ObfuscatedMember>* mutable_obfuscated_methods() { return &obfuscated_methods_; }
  int obfuscated_methods_size() const;
  void clear_obfuscated_methods();
  ObfuscatedMember* add_obfuscated_methods();

 private:
  std::string obfuscated_name_{};
  std::string deobfuscated_name_{};
  std::vector<ObfuscatedMember> obfuscated_members_;
  std::vector<ObfuscatedMember> obfuscated_methods_;

  // Allows to preserve unknown protobuf fields for compatibility
  // with future versions of .proto files.
  std::string unknown_fields_;

  std::bitset<5> _has_field_{};
};


class PERFETTO_EXPORT ObfuscatedMember : public ::protozero::CppMessageObj {
 public:
  enum FieldNumbers {
    kObfuscatedNameFieldNumber = 1,
    kDeobfuscatedNameFieldNumber = 2,
  };

  ObfuscatedMember();
  ~ObfuscatedMember() override;
  ObfuscatedMember(ObfuscatedMember&&) noexcept;
  ObfuscatedMember& operator=(ObfuscatedMember&&);
  ObfuscatedMember(const ObfuscatedMember&);
  ObfuscatedMember& operator=(const ObfuscatedMember&);
  bool operator==(const ObfuscatedMember&) const;
  bool operator!=(const ObfuscatedMember& other) const { return !(*this == other); }

  bool ParseFromArray(const void*, size_t) override;
  std::string SerializeAsString() const override;
  std::vector<uint8_t> SerializeAsArray() const override;
  void Serialize(::protozero::Message*) const;

  bool has_obfuscated_name() const { return _has_field_[1]; }
  const std::string& obfuscated_name() const { return obfuscated_name_; }
  void set_obfuscated_name(const std::string& value) { obfuscated_name_ = value; _has_field_.set(1); }

  bool has_deobfuscated_name() const { return _has_field_[2]; }
  const std::string& deobfuscated_name() const { return deobfuscated_name_; }
  void set_deobfuscated_name(const std::string& value) { deobfuscated_name_ = value; _has_field_.set(2); }

 private:
  std::string obfuscated_name_{};
  std::string deobfuscated_name_{};

  // Allows to preserve unknown protobuf fields for compatibility
  // with future versions of .proto files.
  std::string unknown_fields_;

  std::bitset<3> _has_field_{};
};

}  // namespace perfetto
}  // namespace protos
}  // namespace gen

#endif  // PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_PROFILING_DEOBFUSCATION_PROTO_CPP_H_
