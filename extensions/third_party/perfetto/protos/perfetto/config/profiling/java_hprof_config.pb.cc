// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/config/profiling/java_hprof_config.proto

#include "protos/perfetto/config/profiling/java_hprof_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JavaHprofConfig_ContinuousDumpConfig_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto;
namespace perfetto {
namespace protos {
class JavaHprofConfig_ContinuousDumpConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JavaHprofConfig_ContinuousDumpConfig> _instance;
} _JavaHprofConfig_ContinuousDumpConfig_default_instance_;
class JavaHprofConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JavaHprofConfig> _instance;
} _JavaHprofConfig_default_instance_;
}  // namespace protos
}  // namespace perfetto
static void InitDefaultsscc_info_JavaHprofConfig_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_JavaHprofConfig_default_instance_;
    new (ptr) ::perfetto::protos::JavaHprofConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::JavaHprofConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_JavaHprofConfig_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_JavaHprofConfig_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto}, {
      &scc_info_JavaHprofConfig_ContinuousDumpConfig_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto.base,}};

static void InitDefaultsscc_info_JavaHprofConfig_ContinuousDumpConfig_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_JavaHprofConfig_ContinuousDumpConfig_default_instance_;
    new (ptr) ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JavaHprofConfig_ContinuousDumpConfig_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_JavaHprofConfig_ContinuousDumpConfig_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto}, {}};

namespace perfetto {
namespace protos {

// ===================================================================

void JavaHprofConfig_ContinuousDumpConfig::InitAsDefaultInstance() {
}
class JavaHprofConfig_ContinuousDumpConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<JavaHprofConfig_ContinuousDumpConfig>()._has_bits_);
  static void set_has_dump_phase_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dump_interval_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

JavaHprofConfig_ContinuousDumpConfig::JavaHprofConfig_ContinuousDumpConfig()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
}
JavaHprofConfig_ContinuousDumpConfig::JavaHprofConfig_ContinuousDumpConfig(const JavaHprofConfig_ContinuousDumpConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dump_phase_ms_, &from.dump_phase_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&dump_interval_ms_) -
    reinterpret_cast<char*>(&dump_phase_ms_)) + sizeof(dump_interval_ms_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
}

void JavaHprofConfig_ContinuousDumpConfig::SharedCtor() {
  ::memset(&dump_phase_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dump_interval_ms_) -
      reinterpret_cast<char*>(&dump_phase_ms_)) + sizeof(dump_interval_ms_));
}

JavaHprofConfig_ContinuousDumpConfig::~JavaHprofConfig_ContinuousDumpConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  SharedDtor();
}

void JavaHprofConfig_ContinuousDumpConfig::SharedDtor() {
}

void JavaHprofConfig_ContinuousDumpConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JavaHprofConfig_ContinuousDumpConfig& JavaHprofConfig_ContinuousDumpConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JavaHprofConfig_ContinuousDumpConfig_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void JavaHprofConfig_ContinuousDumpConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&dump_phase_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dump_interval_ms_) -
        reinterpret_cast<char*>(&dump_phase_ms_)) + sizeof(dump_interval_ms_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* JavaHprofConfig_ContinuousDumpConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 dump_phase_ms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_dump_phase_ms(&has_bits);
          dump_phase_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 dump_interval_ms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_dump_interval_ms(&has_bits);
          dump_interval_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool JavaHprofConfig_ContinuousDumpConfig::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dump_phase_ms = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_dump_phase_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dump_phase_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 dump_interval_ms = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_dump_interval_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dump_interval_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void JavaHprofConfig_ContinuousDumpConfig::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 dump_phase_ms = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->dump_phase_ms(), output);
  }

  // optional uint32 dump_interval_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->dump_interval_ms(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
}

size_t JavaHprofConfig_ContinuousDumpConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 dump_phase_ms = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->dump_phase_ms());
    }

    // optional uint32 dump_interval_ms = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->dump_interval_ms());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JavaHprofConfig_ContinuousDumpConfig::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const JavaHprofConfig_ContinuousDumpConfig*>(
      &from));
}

void JavaHprofConfig_ContinuousDumpConfig::MergeFrom(const JavaHprofConfig_ContinuousDumpConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      dump_phase_ms_ = from.dump_phase_ms_;
    }
    if (cached_has_bits & 0x00000002u) {
      dump_interval_ms_ = from.dump_interval_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void JavaHprofConfig_ContinuousDumpConfig::CopyFrom(const JavaHprofConfig_ContinuousDumpConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JavaHprofConfig_ContinuousDumpConfig::IsInitialized() const {
  return true;
}

void JavaHprofConfig_ContinuousDumpConfig::InternalSwap(JavaHprofConfig_ContinuousDumpConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(dump_phase_ms_, other->dump_phase_ms_);
  swap(dump_interval_ms_, other->dump_interval_ms_);
}

std::string JavaHprofConfig_ContinuousDumpConfig::GetTypeName() const {
  return "perfetto.protos.JavaHprofConfig.ContinuousDumpConfig";
}


// ===================================================================

void JavaHprofConfig::InitAsDefaultInstance() {
  ::perfetto::protos::_JavaHprofConfig_default_instance_._instance.get_mutable()->continuous_dump_config_ = const_cast< ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig*>(
      ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig::internal_default_instance());
}
class JavaHprofConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<JavaHprofConfig>()._has_bits_);
  static const ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig& continuous_dump_config(const JavaHprofConfig* msg);
  static void set_has_continuous_dump_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_min_anonymous_memory_kb(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_dump_smaps(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig&
JavaHprofConfig::_Internal::continuous_dump_config(const JavaHprofConfig* msg) {
  return *msg->continuous_dump_config_;
}
JavaHprofConfig::JavaHprofConfig()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.JavaHprofConfig)
}
JavaHprofConfig::JavaHprofConfig(const JavaHprofConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      process_cmdline_(from.process_cmdline_),
      pid_(from.pid_),
      ignored_types_(from.ignored_types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_continuous_dump_config()) {
    continuous_dump_config_ = new ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig(*from.continuous_dump_config_);
  } else {
    continuous_dump_config_ = nullptr;
  }
  ::memcpy(&min_anonymous_memory_kb_, &from.min_anonymous_memory_kb_,
    static_cast<size_t>(reinterpret_cast<char*>(&dump_smaps_) -
    reinterpret_cast<char*>(&min_anonymous_memory_kb_)) + sizeof(dump_smaps_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.JavaHprofConfig)
}

void JavaHprofConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JavaHprofConfig_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto.base);
  ::memset(&continuous_dump_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dump_smaps_) -
      reinterpret_cast<char*>(&continuous_dump_config_)) + sizeof(dump_smaps_));
}

JavaHprofConfig::~JavaHprofConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.JavaHprofConfig)
  SharedDtor();
}

void JavaHprofConfig::SharedDtor() {
  if (this != internal_default_instance()) delete continuous_dump_config_;
}

void JavaHprofConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JavaHprofConfig& JavaHprofConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JavaHprofConfig_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void JavaHprofConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.JavaHprofConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  process_cmdline_.Clear();
  pid_.Clear();
  ignored_types_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(continuous_dump_config_ != nullptr);
    continuous_dump_config_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&min_anonymous_memory_kb_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dump_smaps_) -
        reinterpret_cast<char*>(&min_anonymous_memory_kb_)) + sizeof(dump_smaps_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* JavaHprofConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string process_cmdline = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(add_process_cmdline(), ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated uint64 pid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            add_pid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 16);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(mutable_pid(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.JavaHprofConfig.ContinuousDumpConfig continuous_dump_config = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_continuous_dump_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 min_anonymous_memory_kb = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_min_anonymous_memory_kb(&has_bits);
          min_anonymous_memory_kb_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool dump_smaps = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_dump_smaps(&has_bits);
          dump_smaps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string ignored_types = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(add_ignored_types(), ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool JavaHprofConfig::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.JavaHprofConfig)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string process_cmdline = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_process_cmdline()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 pid = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_pid())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_pid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.JavaHprofConfig.ContinuousDumpConfig continuous_dump_config = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_continuous_dump_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 min_anonymous_memory_kb = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_min_anonymous_memory_kb(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &min_anonymous_memory_kb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool dump_smaps = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_dump_smaps(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dump_smaps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string ignored_types = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_ignored_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.JavaHprofConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.JavaHprofConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void JavaHprofConfig::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.JavaHprofConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string process_cmdline = 1;
  for (int i = 0, n = this->process_cmdline_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      1, this->process_cmdline(i), output);
  }

  // repeated uint64 pid = 2;
  for (int i = 0, n = this->pid_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(
      2, this->pid(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .perfetto.protos.JavaHprofConfig.ContinuousDumpConfig continuous_dump_config = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3, _Internal::continuous_dump_config(this), output);
  }

  // optional uint32 min_anonymous_memory_kb = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(4, this->min_anonymous_memory_kb(), output);
  }

  // optional bool dump_smaps = 5;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->dump_smaps(), output);
  }

  // repeated string ignored_types = 6;
  for (int i = 0, n = this->ignored_types_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      6, this->ignored_types(i), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.JavaHprofConfig)
}

size_t JavaHprofConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.JavaHprofConfig)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string process_cmdline = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->process_cmdline_size());
  for (int i = 0, n = this->process_cmdline_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->process_cmdline(i));
  }

  // repeated uint64 pid = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->pid_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->pid_size());
    total_size += data_size;
  }

  // repeated string ignored_types = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->ignored_types_size());
  for (int i = 0, n = this->ignored_types_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->ignored_types(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .perfetto.protos.JavaHprofConfig.ContinuousDumpConfig continuous_dump_config = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *continuous_dump_config_);
    }

    // optional uint32 min_anonymous_memory_kb = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->min_anonymous_memory_kb());
    }

    // optional bool dump_smaps = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JavaHprofConfig::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const JavaHprofConfig*>(
      &from));
}

void JavaHprofConfig::MergeFrom(const JavaHprofConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.JavaHprofConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  process_cmdline_.MergeFrom(from.process_cmdline_);
  pid_.MergeFrom(from.pid_);
  ignored_types_.MergeFrom(from.ignored_types_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_continuous_dump_config()->::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig::MergeFrom(from.continuous_dump_config());
    }
    if (cached_has_bits & 0x00000002u) {
      min_anonymous_memory_kb_ = from.min_anonymous_memory_kb_;
    }
    if (cached_has_bits & 0x00000004u) {
      dump_smaps_ = from.dump_smaps_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void JavaHprofConfig::CopyFrom(const JavaHprofConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.JavaHprofConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JavaHprofConfig::IsInitialized() const {
  return true;
}

void JavaHprofConfig::InternalSwap(JavaHprofConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  process_cmdline_.InternalSwap(CastToBase(&other->process_cmdline_));
  pid_.InternalSwap(&other->pid_);
  ignored_types_.InternalSwap(CastToBase(&other->ignored_types_));
  swap(continuous_dump_config_, other->continuous_dump_config_);
  swap(min_anonymous_memory_kb_, other->min_anonymous_memory_kb_);
  swap(dump_smaps_, other->dump_smaps_);
}

std::string JavaHprofConfig::GetTypeName() const {
  return "perfetto.protos.JavaHprofConfig";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* Arena::CreateMaybeMessage< ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::JavaHprofConfig* Arena::CreateMaybeMessage< ::perfetto::protos::JavaHprofConfig >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::JavaHprofConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
