// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/config/data_source_config.proto

#include "protos/perfetto/config/data_source_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fandroid_2fandroid_5flog_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AndroidLogConfig_protos_2fperfetto_2fconfig_2fandroid_2fandroid_5flog_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fandroid_2fandroid_5fpolled_5fstate_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AndroidPolledStateConfig_protos_2fperfetto_2fconfig_2fandroid_2fandroid_5fpolled_5fstate_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fpower_2fandroid_5fpower_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AndroidPowerConfig_protos_2fperfetto_2fconfig_2fpower_2fandroid_5fpower_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fchrome_2fchrome_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChromeConfig_protos_2fperfetto_2fconfig_2fchrome_2fchrome_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fftrace_2fftrace_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FtraceConfig_protos_2fperfetto_2fconfig_2fftrace_2fftrace_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fgpu_2fgpu_5fcounter_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GpuCounterConfig_protos_2fperfetto_2fconfig_2fgpu_2fgpu_5fcounter_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fprofiling_2fheapprofd_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HeapprofdConfig_protos_2fperfetto_2fconfig_2fprofiling_2fheapprofd_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2finode_5ffile_2finode_5ffile_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InodeFileConfig_protos_2fperfetto_2fconfig_2finode_5ffile_2finode_5ffile_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2finterceptor_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InterceptorConfig_protos_2fperfetto_2fconfig_2finterceptor_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_JavaHprofConfig_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fandroid_2fpackages_5flist_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackagesListConfig_protos_2fperfetto_2fconfig_2fandroid_2fpackages_5flist_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fprofiling_2fperf_5fevent_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_PerfEventConfig_protos_2fperfetto_2fconfig_2fprofiling_2fperf_5fevent_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fprocess_5fstats_2fprocess_5fstats_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcessStatsConfig_protos_2fperfetto_2fconfig_2fprocess_5fstats_2fprocess_5fstats_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fsys_5fstats_2fsys_5fstats_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SysStatsConfig_protos_2fperfetto_2fconfig_2fsys_5fstats_2fsys_5fstats_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2ftest_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TestConfig_protos_2fperfetto_2fconfig_2ftest_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2ftrack_5fevent_2ftrack_5fevent_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TrackEventConfig_protos_2fperfetto_2fconfig_2ftrack_5fevent_2ftrack_5fevent_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fgpu_2fvulkan_5fmemory_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VulkanMemoryConfig_protos_2fperfetto_2fconfig_2fgpu_2fvulkan_5fmemory_5fconfig_2eproto;
namespace perfetto {
namespace protos {
class DataSourceConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataSourceConfig> _instance;
} _DataSourceConfig_default_instance_;
}  // namespace protos
}  // namespace perfetto
static void InitDefaultsscc_info_DataSourceConfig_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_DataSourceConfig_default_instance_;
    new (ptr) ::perfetto::protos::DataSourceConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::DataSourceConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<17> scc_info_DataSourceConfig_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 17, InitDefaultsscc_info_DataSourceConfig_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto}, {
      &scc_info_FtraceConfig_protos_2fperfetto_2fconfig_2fftrace_2fftrace_5fconfig_2eproto.base,
      &scc_info_InodeFileConfig_protos_2fperfetto_2fconfig_2finode_5ffile_2finode_5ffile_5fconfig_2eproto.base,
      &scc_info_ProcessStatsConfig_protos_2fperfetto_2fconfig_2fprocess_5fstats_2fprocess_5fstats_5fconfig_2eproto.base,
      &scc_info_SysStatsConfig_protos_2fperfetto_2fconfig_2fsys_5fstats_2fsys_5fstats_5fconfig_2eproto.base,
      &scc_info_HeapprofdConfig_protos_2fperfetto_2fconfig_2fprofiling_2fheapprofd_5fconfig_2eproto.base,
      &scc_info_JavaHprofConfig_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto.base,
      &scc_info_AndroidPowerConfig_protos_2fperfetto_2fconfig_2fpower_2fandroid_5fpower_5fconfig_2eproto.base,
      &scc_info_AndroidLogConfig_protos_2fperfetto_2fconfig_2fandroid_2fandroid_5flog_5fconfig_2eproto.base,
      &scc_info_GpuCounterConfig_protos_2fperfetto_2fconfig_2fgpu_2fgpu_5fcounter_5fconfig_2eproto.base,
      &scc_info_PackagesListConfig_protos_2fperfetto_2fconfig_2fandroid_2fpackages_5flist_5fconfig_2eproto.base,
      &scc_info_PerfEventConfig_protos_2fperfetto_2fconfig_2fprofiling_2fperf_5fevent_5fconfig_2eproto.base,
      &scc_info_VulkanMemoryConfig_protos_2fperfetto_2fconfig_2fgpu_2fvulkan_5fmemory_5fconfig_2eproto.base,
      &scc_info_TrackEventConfig_protos_2fperfetto_2fconfig_2ftrack_5fevent_2ftrack_5fevent_5fconfig_2eproto.base,
      &scc_info_AndroidPolledStateConfig_protos_2fperfetto_2fconfig_2fandroid_2fandroid_5fpolled_5fstate_5fconfig_2eproto.base,
      &scc_info_ChromeConfig_protos_2fperfetto_2fconfig_2fchrome_2fchrome_5fconfig_2eproto.base,
      &scc_info_InterceptorConfig_protos_2fperfetto_2fconfig_2finterceptor_5fconfig_2eproto.base,
      &scc_info_TestConfig_protos_2fperfetto_2fconfig_2ftest_5fconfig_2eproto.base,}};

namespace perfetto {
namespace protos {

// ===================================================================

void DataSourceConfig::InitAsDefaultInstance() {
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->ftrace_config_ = const_cast< ::perfetto::protos::FtraceConfig*>(
      ::perfetto::protos::FtraceConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->inode_file_config_ = const_cast< ::perfetto::protos::InodeFileConfig*>(
      ::perfetto::protos::InodeFileConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->process_stats_config_ = const_cast< ::perfetto::protos::ProcessStatsConfig*>(
      ::perfetto::protos::ProcessStatsConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->sys_stats_config_ = const_cast< ::perfetto::protos::SysStatsConfig*>(
      ::perfetto::protos::SysStatsConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->heapprofd_config_ = const_cast< ::perfetto::protos::HeapprofdConfig*>(
      ::perfetto::protos::HeapprofdConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->java_hprof_config_ = const_cast< ::perfetto::protos::JavaHprofConfig*>(
      ::perfetto::protos::JavaHprofConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->android_power_config_ = const_cast< ::perfetto::protos::AndroidPowerConfig*>(
      ::perfetto::protos::AndroidPowerConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->android_log_config_ = const_cast< ::perfetto::protos::AndroidLogConfig*>(
      ::perfetto::protos::AndroidLogConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->gpu_counter_config_ = const_cast< ::perfetto::protos::GpuCounterConfig*>(
      ::perfetto::protos::GpuCounterConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->packages_list_config_ = const_cast< ::perfetto::protos::PackagesListConfig*>(
      ::perfetto::protos::PackagesListConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->perf_event_config_ = const_cast< ::perfetto::protos::PerfEventConfig*>(
      ::perfetto::protos::PerfEventConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->vulkan_memory_config_ = const_cast< ::perfetto::protos::VulkanMemoryConfig*>(
      ::perfetto::protos::VulkanMemoryConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->track_event_config_ = const_cast< ::perfetto::protos::TrackEventConfig*>(
      ::perfetto::protos::TrackEventConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->android_polled_state_config_ = const_cast< ::perfetto::protos::AndroidPolledStateConfig*>(
      ::perfetto::protos::AndroidPolledStateConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->chrome_config_ = const_cast< ::perfetto::protos::ChromeConfig*>(
      ::perfetto::protos::ChromeConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->interceptor_config_ = const_cast< ::perfetto::protos::InterceptorConfig*>(
      ::perfetto::protos::InterceptorConfig::internal_default_instance());
  ::perfetto::protos::_DataSourceConfig_default_instance_._instance.get_mutable()->for_testing_ = const_cast< ::perfetto::protos::TestConfig*>(
      ::perfetto::protos::TestConfig::internal_default_instance());
}
class DataSourceConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<DataSourceConfig>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_buffer(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_trace_duration_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_stop_timeout_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_enable_extra_guardrails(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_tracing_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static const ::perfetto::protos::FtraceConfig& ftrace_config(const DataSourceConfig* msg);
  static void set_has_ftrace_config(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::perfetto::protos::InodeFileConfig& inode_file_config(const DataSourceConfig* msg);
  static void set_has_inode_file_config(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::perfetto::protos::ProcessStatsConfig& process_stats_config(const DataSourceConfig* msg);
  static void set_has_process_stats_config(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::perfetto::protos::SysStatsConfig& sys_stats_config(const DataSourceConfig* msg);
  static void set_has_sys_stats_config(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::perfetto::protos::HeapprofdConfig& heapprofd_config(const DataSourceConfig* msg);
  static void set_has_heapprofd_config(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::perfetto::protos::JavaHprofConfig& java_hprof_config(const DataSourceConfig* msg);
  static void set_has_java_hprof_config(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::perfetto::protos::AndroidPowerConfig& android_power_config(const DataSourceConfig* msg);
  static void set_has_android_power_config(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::perfetto::protos::AndroidLogConfig& android_log_config(const DataSourceConfig* msg);
  static void set_has_android_log_config(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::perfetto::protos::GpuCounterConfig& gpu_counter_config(const DataSourceConfig* msg);
  static void set_has_gpu_counter_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::perfetto::protos::PackagesListConfig& packages_list_config(const DataSourceConfig* msg);
  static void set_has_packages_list_config(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::perfetto::protos::PerfEventConfig& perf_event_config(const DataSourceConfig* msg);
  static void set_has_perf_event_config(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::perfetto::protos::VulkanMemoryConfig& vulkan_memory_config(const DataSourceConfig* msg);
  static void set_has_vulkan_memory_config(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::perfetto::protos::TrackEventConfig& track_event_config(const DataSourceConfig* msg);
  static void set_has_track_event_config(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::perfetto::protos::AndroidPolledStateConfig& android_polled_state_config(const DataSourceConfig* msg);
  static void set_has_android_polled_state_config(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::perfetto::protos::ChromeConfig& chrome_config(const DataSourceConfig* msg);
  static void set_has_chrome_config(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::perfetto::protos::InterceptorConfig& interceptor_config(const DataSourceConfig* msg);
  static void set_has_interceptor_config(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_legacy_config(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::perfetto::protos::TestConfig& for_testing(const DataSourceConfig* msg);
  static void set_has_for_testing(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
};

const ::perfetto::protos::FtraceConfig&
DataSourceConfig::_Internal::ftrace_config(const DataSourceConfig* msg) {
  return *msg->ftrace_config_;
}
const ::perfetto::protos::InodeFileConfig&
DataSourceConfig::_Internal::inode_file_config(const DataSourceConfig* msg) {
  return *msg->inode_file_config_;
}
const ::perfetto::protos::ProcessStatsConfig&
DataSourceConfig::_Internal::process_stats_config(const DataSourceConfig* msg) {
  return *msg->process_stats_config_;
}
const ::perfetto::protos::SysStatsConfig&
DataSourceConfig::_Internal::sys_stats_config(const DataSourceConfig* msg) {
  return *msg->sys_stats_config_;
}
const ::perfetto::protos::HeapprofdConfig&
DataSourceConfig::_Internal::heapprofd_config(const DataSourceConfig* msg) {
  return *msg->heapprofd_config_;
}
const ::perfetto::protos::JavaHprofConfig&
DataSourceConfig::_Internal::java_hprof_config(const DataSourceConfig* msg) {
  return *msg->java_hprof_config_;
}
const ::perfetto::protos::AndroidPowerConfig&
DataSourceConfig::_Internal::android_power_config(const DataSourceConfig* msg) {
  return *msg->android_power_config_;
}
const ::perfetto::protos::AndroidLogConfig&
DataSourceConfig::_Internal::android_log_config(const DataSourceConfig* msg) {
  return *msg->android_log_config_;
}
const ::perfetto::protos::GpuCounterConfig&
DataSourceConfig::_Internal::gpu_counter_config(const DataSourceConfig* msg) {
  return *msg->gpu_counter_config_;
}
const ::perfetto::protos::PackagesListConfig&
DataSourceConfig::_Internal::packages_list_config(const DataSourceConfig* msg) {
  return *msg->packages_list_config_;
}
const ::perfetto::protos::PerfEventConfig&
DataSourceConfig::_Internal::perf_event_config(const DataSourceConfig* msg) {
  return *msg->perf_event_config_;
}
const ::perfetto::protos::VulkanMemoryConfig&
DataSourceConfig::_Internal::vulkan_memory_config(const DataSourceConfig* msg) {
  return *msg->vulkan_memory_config_;
}
const ::perfetto::protos::TrackEventConfig&
DataSourceConfig::_Internal::track_event_config(const DataSourceConfig* msg) {
  return *msg->track_event_config_;
}
const ::perfetto::protos::AndroidPolledStateConfig&
DataSourceConfig::_Internal::android_polled_state_config(const DataSourceConfig* msg) {
  return *msg->android_polled_state_config_;
}
const ::perfetto::protos::ChromeConfig&
DataSourceConfig::_Internal::chrome_config(const DataSourceConfig* msg) {
  return *msg->chrome_config_;
}
const ::perfetto::protos::InterceptorConfig&
DataSourceConfig::_Internal::interceptor_config(const DataSourceConfig* msg) {
  return *msg->interceptor_config_;
}
const ::perfetto::protos::TestConfig&
DataSourceConfig::_Internal::for_testing(const DataSourceConfig* msg) {
  return *msg->for_testing_;
}
void DataSourceConfig::clear_ftrace_config() {
  if (ftrace_config_ != nullptr) ftrace_config_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void DataSourceConfig::clear_inode_file_config() {
  if (inode_file_config_ != nullptr) inode_file_config_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void DataSourceConfig::clear_process_stats_config() {
  if (process_stats_config_ != nullptr) process_stats_config_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
void DataSourceConfig::clear_sys_stats_config() {
  if (sys_stats_config_ != nullptr) sys_stats_config_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
void DataSourceConfig::clear_heapprofd_config() {
  if (heapprofd_config_ != nullptr) heapprofd_config_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
void DataSourceConfig::clear_java_hprof_config() {
  if (java_hprof_config_ != nullptr) java_hprof_config_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
void DataSourceConfig::clear_android_power_config() {
  if (android_power_config_ != nullptr) android_power_config_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
void DataSourceConfig::clear_android_log_config() {
  if (android_log_config_ != nullptr) android_log_config_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
void DataSourceConfig::clear_gpu_counter_config() {
  if (gpu_counter_config_ != nullptr) gpu_counter_config_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
void DataSourceConfig::clear_packages_list_config() {
  if (packages_list_config_ != nullptr) packages_list_config_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
void DataSourceConfig::clear_perf_event_config() {
  if (perf_event_config_ != nullptr) perf_event_config_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
void DataSourceConfig::clear_vulkan_memory_config() {
  if (vulkan_memory_config_ != nullptr) vulkan_memory_config_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
void DataSourceConfig::clear_track_event_config() {
  if (track_event_config_ != nullptr) track_event_config_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
void DataSourceConfig::clear_android_polled_state_config() {
  if (android_polled_state_config_ != nullptr) android_polled_state_config_->Clear();
  _has_bits_[0] &= ~0x00010000u;
}
void DataSourceConfig::clear_chrome_config() {
  if (chrome_config_ != nullptr) chrome_config_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void DataSourceConfig::clear_interceptor_config() {
  if (interceptor_config_ != nullptr) interceptor_config_->Clear();
  _has_bits_[0] &= ~0x00020000u;
}
void DataSourceConfig::clear_for_testing() {
  if (for_testing_ != nullptr) for_testing_->Clear();
  _has_bits_[0] &= ~0x00040000u;
}
DataSourceConfig::DataSourceConfig()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.DataSourceConfig)
}
DataSourceConfig::DataSourceConfig(const DataSourceConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  legacy_config_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_legacy_config()) {
    legacy_config_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.legacy_config_);
  }
  if (from.has_ftrace_config()) {
    ftrace_config_ = new ::perfetto::protos::FtraceConfig(*from.ftrace_config_);
  } else {
    ftrace_config_ = nullptr;
  }
  if (from.has_chrome_config()) {
    chrome_config_ = new ::perfetto::protos::ChromeConfig(*from.chrome_config_);
  } else {
    chrome_config_ = nullptr;
  }
  if (from.has_inode_file_config()) {
    inode_file_config_ = new ::perfetto::protos::InodeFileConfig(*from.inode_file_config_);
  } else {
    inode_file_config_ = nullptr;
  }
  if (from.has_process_stats_config()) {
    process_stats_config_ = new ::perfetto::protos::ProcessStatsConfig(*from.process_stats_config_);
  } else {
    process_stats_config_ = nullptr;
  }
  if (from.has_sys_stats_config()) {
    sys_stats_config_ = new ::perfetto::protos::SysStatsConfig(*from.sys_stats_config_);
  } else {
    sys_stats_config_ = nullptr;
  }
  if (from.has_heapprofd_config()) {
    heapprofd_config_ = new ::perfetto::protos::HeapprofdConfig(*from.heapprofd_config_);
  } else {
    heapprofd_config_ = nullptr;
  }
  if (from.has_android_power_config()) {
    android_power_config_ = new ::perfetto::protos::AndroidPowerConfig(*from.android_power_config_);
  } else {
    android_power_config_ = nullptr;
  }
  if (from.has_android_log_config()) {
    android_log_config_ = new ::perfetto::protos::AndroidLogConfig(*from.android_log_config_);
  } else {
    android_log_config_ = nullptr;
  }
  if (from.has_gpu_counter_config()) {
    gpu_counter_config_ = new ::perfetto::protos::GpuCounterConfig(*from.gpu_counter_config_);
  } else {
    gpu_counter_config_ = nullptr;
  }
  if (from.has_packages_list_config()) {
    packages_list_config_ = new ::perfetto::protos::PackagesListConfig(*from.packages_list_config_);
  } else {
    packages_list_config_ = nullptr;
  }
  if (from.has_java_hprof_config()) {
    java_hprof_config_ = new ::perfetto::protos::JavaHprofConfig(*from.java_hprof_config_);
  } else {
    java_hprof_config_ = nullptr;
  }
  if (from.has_perf_event_config()) {
    perf_event_config_ = new ::perfetto::protos::PerfEventConfig(*from.perf_event_config_);
  } else {
    perf_event_config_ = nullptr;
  }
  if (from.has_vulkan_memory_config()) {
    vulkan_memory_config_ = new ::perfetto::protos::VulkanMemoryConfig(*from.vulkan_memory_config_);
  } else {
    vulkan_memory_config_ = nullptr;
  }
  if (from.has_track_event_config()) {
    track_event_config_ = new ::perfetto::protos::TrackEventConfig(*from.track_event_config_);
  } else {
    track_event_config_ = nullptr;
  }
  if (from.has_android_polled_state_config()) {
    android_polled_state_config_ = new ::perfetto::protos::AndroidPolledStateConfig(*from.android_polled_state_config_);
  } else {
    android_polled_state_config_ = nullptr;
  }
  if (from.has_interceptor_config()) {
    interceptor_config_ = new ::perfetto::protos::InterceptorConfig(*from.interceptor_config_);
  } else {
    interceptor_config_ = nullptr;
  }
  if (from.has_for_testing()) {
    for_testing_ = new ::perfetto::protos::TestConfig(*from.for_testing_);
  } else {
    for_testing_ = nullptr;
  }
  ::memcpy(&target_buffer_, &from.target_buffer_,
    static_cast<size_t>(reinterpret_cast<char*>(&stop_timeout_ms_) -
    reinterpret_cast<char*>(&target_buffer_)) + sizeof(stop_timeout_ms_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.DataSourceConfig)
}

void DataSourceConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataSourceConfig_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  legacy_config_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&ftrace_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stop_timeout_ms_) -
      reinterpret_cast<char*>(&ftrace_config_)) + sizeof(stop_timeout_ms_));
}

DataSourceConfig::~DataSourceConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.DataSourceConfig)
  SharedDtor();
}

void DataSourceConfig::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  legacy_config_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ftrace_config_;
  if (this != internal_default_instance()) delete chrome_config_;
  if (this != internal_default_instance()) delete inode_file_config_;
  if (this != internal_default_instance()) delete process_stats_config_;
  if (this != internal_default_instance()) delete sys_stats_config_;
  if (this != internal_default_instance()) delete heapprofd_config_;
  if (this != internal_default_instance()) delete android_power_config_;
  if (this != internal_default_instance()) delete android_log_config_;
  if (this != internal_default_instance()) delete gpu_counter_config_;
  if (this != internal_default_instance()) delete packages_list_config_;
  if (this != internal_default_instance()) delete java_hprof_config_;
  if (this != internal_default_instance()) delete perf_event_config_;
  if (this != internal_default_instance()) delete vulkan_memory_config_;
  if (this != internal_default_instance()) delete track_event_config_;
  if (this != internal_default_instance()) delete android_polled_state_config_;
  if (this != internal_default_instance()) delete interceptor_config_;
  if (this != internal_default_instance()) delete for_testing_;
}

void DataSourceConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataSourceConfig& DataSourceConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataSourceConfig_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void DataSourceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.DataSourceConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      legacy_config_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(ftrace_config_ != nullptr);
      ftrace_config_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(chrome_config_ != nullptr);
      chrome_config_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(inode_file_config_ != nullptr);
      inode_file_config_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(process_stats_config_ != nullptr);
      process_stats_config_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(sys_stats_config_ != nullptr);
      sys_stats_config_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(heapprofd_config_ != nullptr);
      heapprofd_config_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(android_power_config_ != nullptr);
      android_power_config_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(android_log_config_ != nullptr);
      android_log_config_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(gpu_counter_config_ != nullptr);
      gpu_counter_config_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(packages_list_config_ != nullptr);
      packages_list_config_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(java_hprof_config_ != nullptr);
      java_hprof_config_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(perf_event_config_ != nullptr);
      perf_event_config_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(vulkan_memory_config_ != nullptr);
      vulkan_memory_config_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(track_event_config_ != nullptr);
      track_event_config_->Clear();
    }
  }
  if (cached_has_bits & 0x00070000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(android_polled_state_config_ != nullptr);
      android_polled_state_config_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(interceptor_config_ != nullptr);
      interceptor_config_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(for_testing_ != nullptr);
      for_testing_->Clear();
    }
  }
  if (cached_has_bits & 0x00f80000u) {
    ::memset(&target_buffer_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stop_timeout_ms_) -
        reinterpret_cast<char*>(&target_buffer_)) + sizeof(stop_timeout_ms_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DataSourceConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 target_buffer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_target_buffer(&has_bits);
          target_buffer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 trace_duration_ms = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_trace_duration_ms(&has_bits);
          trace_duration_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 tracing_session_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_tracing_session_id(&has_bits);
          tracing_session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool enable_extra_guardrails = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_enable_extra_guardrails(&has_bits);
          enable_extra_guardrails_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 stop_timeout_ms = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_stop_timeout_ms(&has_bits);
          stop_timeout_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.FtraceConfig ftrace_config = 100 [lazy = true];
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_ftrace_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.ChromeConfig chrome_config = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_chrome_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.InodeFileConfig inode_file_config = 102 [lazy = true];
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_inode_file_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103 [lazy = true];
      case 103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_process_stats_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.SysStatsConfig sys_stats_config = 104 [lazy = true];
      case 104:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_sys_stats_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.HeapprofdConfig heapprofd_config = 105 [lazy = true];
      case 105:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_heapprofd_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.AndroidPowerConfig android_power_config = 106 [lazy = true];
      case 106:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_android_power_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.AndroidLogConfig android_log_config = 107 [lazy = true];
      case 107:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(mutable_android_log_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.GpuCounterConfig gpu_counter_config = 108 [lazy = true];
      case 108:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(mutable_gpu_counter_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.PackagesListConfig packages_list_config = 109 [lazy = true];
      case 109:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(mutable_packages_list_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.JavaHprofConfig java_hprof_config = 110 [lazy = true];
      case 110:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(mutable_java_hprof_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.PerfEventConfig perf_event_config = 111 [lazy = true];
      case 111:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(mutable_perf_event_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.VulkanMemoryConfig vulkan_memory_config = 112 [lazy = true];
      case 112:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(mutable_vulkan_memory_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.TrackEventConfig track_event_config = 113 [lazy = true];
      case 113:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(mutable_track_event_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.AndroidPolledStateConfig android_polled_state_config = 114 [lazy = true];
      case 114:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(mutable_android_polled_state_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.InterceptorConfig interceptor_config = 115;
      case 115:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(mutable_interceptor_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string legacy_config = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_legacy_config(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.TestConfig for_testing = 1001;
      case 1001:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_for_testing(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DataSourceConfig::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.DataSourceConfig)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_buffer = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_target_buffer(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_buffer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 trace_duration_ms = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_trace_duration_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trace_duration_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 tracing_session_id = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_tracing_session_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tracing_session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_extra_guardrails = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_enable_extra_guardrails(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_extra_guardrails_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stop_timeout_ms = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_stop_timeout_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stop_timeout_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.FtraceConfig ftrace_config = 100 [lazy = true];
      case 100: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (802 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_ftrace_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.ChromeConfig chrome_config = 101;
      case 101: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (810 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_chrome_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.InodeFileConfig inode_file_config = 102 [lazy = true];
      case 102: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (818 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_inode_file_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103 [lazy = true];
      case 103: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (826 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_process_stats_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.SysStatsConfig sys_stats_config = 104 [lazy = true];
      case 104: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (834 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_sys_stats_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.HeapprofdConfig heapprofd_config = 105 [lazy = true];
      case 105: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (842 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_heapprofd_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.AndroidPowerConfig android_power_config = 106 [lazy = true];
      case 106: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (850 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_android_power_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.AndroidLogConfig android_log_config = 107 [lazy = true];
      case 107: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (858 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_android_log_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.GpuCounterConfig gpu_counter_config = 108 [lazy = true];
      case 108: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (866 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_gpu_counter_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.PackagesListConfig packages_list_config = 109 [lazy = true];
      case 109: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (874 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_packages_list_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.JavaHprofConfig java_hprof_config = 110 [lazy = true];
      case 110: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (882 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_java_hprof_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.PerfEventConfig perf_event_config = 111 [lazy = true];
      case 111: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (890 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_perf_event_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.VulkanMemoryConfig vulkan_memory_config = 112 [lazy = true];
      case 112: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (898 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_vulkan_memory_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TrackEventConfig track_event_config = 113 [lazy = true];
      case 113: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (906 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_track_event_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.AndroidPolledStateConfig android_polled_state_config = 114 [lazy = true];
      case 114: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (914 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_android_polled_state_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.InterceptorConfig interceptor_config = 115;
      case 115: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (922 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_interceptor_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string legacy_config = 1000;
      case 1000: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8002 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_legacy_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .perfetto.protos.TestConfig for_testing = 1001;
      case 1001: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8010 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_for_testing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.DataSourceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.DataSourceConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DataSourceConfig::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.DataSourceConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 target_buffer = 2;
  if (cached_has_bits & 0x00080000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->target_buffer(), output);
  }

  // optional uint32 trace_duration_ms = 3;
  if (cached_has_bits & 0x00100000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(3, this->trace_duration_ms(), output);
  }

  // optional uint64 tracing_session_id = 4;
  if (cached_has_bits & 0x00200000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(4, this->tracing_session_id(), output);
  }

  // optional bool enable_extra_guardrails = 6;
  if (cached_has_bits & 0x00400000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->enable_extra_guardrails(), output);
  }

  // optional uint32 stop_timeout_ms = 7;
  if (cached_has_bits & 0x00800000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(7, this->stop_timeout_ms(), output);
  }

  // optional .perfetto.protos.FtraceConfig ftrace_config = 100 [lazy = true];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      100, _Internal::ftrace_config(this), output);
  }

  // optional .perfetto.protos.ChromeConfig chrome_config = 101;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      101, _Internal::chrome_config(this), output);
  }

  // optional .perfetto.protos.InodeFileConfig inode_file_config = 102 [lazy = true];
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      102, _Internal::inode_file_config(this), output);
  }

  // optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103 [lazy = true];
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      103, _Internal::process_stats_config(this), output);
  }

  // optional .perfetto.protos.SysStatsConfig sys_stats_config = 104 [lazy = true];
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      104, _Internal::sys_stats_config(this), output);
  }

  // optional .perfetto.protos.HeapprofdConfig heapprofd_config = 105 [lazy = true];
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      105, _Internal::heapprofd_config(this), output);
  }

  // optional .perfetto.protos.AndroidPowerConfig android_power_config = 106 [lazy = true];
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      106, _Internal::android_power_config(this), output);
  }

  // optional .perfetto.protos.AndroidLogConfig android_log_config = 107 [lazy = true];
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      107, _Internal::android_log_config(this), output);
  }

  // optional .perfetto.protos.GpuCounterConfig gpu_counter_config = 108 [lazy = true];
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      108, _Internal::gpu_counter_config(this), output);
  }

  // optional .perfetto.protos.PackagesListConfig packages_list_config = 109 [lazy = true];
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      109, _Internal::packages_list_config(this), output);
  }

  // optional .perfetto.protos.JavaHprofConfig java_hprof_config = 110 [lazy = true];
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      110, _Internal::java_hprof_config(this), output);
  }

  // optional .perfetto.protos.PerfEventConfig perf_event_config = 111 [lazy = true];
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      111, _Internal::perf_event_config(this), output);
  }

  // optional .perfetto.protos.VulkanMemoryConfig vulkan_memory_config = 112 [lazy = true];
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      112, _Internal::vulkan_memory_config(this), output);
  }

  // optional .perfetto.protos.TrackEventConfig track_event_config = 113 [lazy = true];
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      113, _Internal::track_event_config(this), output);
  }

  // optional .perfetto.protos.AndroidPolledStateConfig android_polled_state_config = 114 [lazy = true];
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      114, _Internal::android_polled_state_config(this), output);
  }

  // optional .perfetto.protos.InterceptorConfig interceptor_config = 115;
  if (cached_has_bits & 0x00020000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      115, _Internal::interceptor_config(this), output);
  }

  // optional string legacy_config = 1000;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1000, this->legacy_config(), output);
  }

  // optional .perfetto.protos.TestConfig for_testing = 1001;
  if (cached_has_bits & 0x00040000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1001, _Internal::for_testing(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.DataSourceConfig)
}

size_t DataSourceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.DataSourceConfig)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string legacy_config = 1000;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->legacy_config());
    }

    // optional .perfetto.protos.FtraceConfig ftrace_config = 100 [lazy = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ftrace_config_);
    }

    // optional .perfetto.protos.ChromeConfig chrome_config = 101;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *chrome_config_);
    }

    // optional .perfetto.protos.InodeFileConfig inode_file_config = 102 [lazy = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *inode_file_config_);
    }

    // optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103 [lazy = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *process_stats_config_);
    }

    // optional .perfetto.protos.SysStatsConfig sys_stats_config = 104 [lazy = true];
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sys_stats_config_);
    }

    // optional .perfetto.protos.HeapprofdConfig heapprofd_config = 105 [lazy = true];
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *heapprofd_config_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .perfetto.protos.AndroidPowerConfig android_power_config = 106 [lazy = true];
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *android_power_config_);
    }

    // optional .perfetto.protos.AndroidLogConfig android_log_config = 107 [lazy = true];
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *android_log_config_);
    }

    // optional .perfetto.protos.GpuCounterConfig gpu_counter_config = 108 [lazy = true];
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *gpu_counter_config_);
    }

    // optional .perfetto.protos.PackagesListConfig packages_list_config = 109 [lazy = true];
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *packages_list_config_);
    }

    // optional .perfetto.protos.JavaHprofConfig java_hprof_config = 110 [lazy = true];
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *java_hprof_config_);
    }

    // optional .perfetto.protos.PerfEventConfig perf_event_config = 111 [lazy = true];
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *perf_event_config_);
    }

    // optional .perfetto.protos.VulkanMemoryConfig vulkan_memory_config = 112 [lazy = true];
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *vulkan_memory_config_);
    }

    // optional .perfetto.protos.TrackEventConfig track_event_config = 113 [lazy = true];
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *track_event_config_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .perfetto.protos.AndroidPolledStateConfig android_polled_state_config = 114 [lazy = true];
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *android_polled_state_config_);
    }

    // optional .perfetto.protos.InterceptorConfig interceptor_config = 115;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *interceptor_config_);
    }

    // optional .perfetto.protos.TestConfig for_testing = 1001;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *for_testing_);
    }

    // optional uint32 target_buffer = 2;
    if (cached_has_bits & 0x00080000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->target_buffer());
    }

    // optional uint32 trace_duration_ms = 3;
    if (cached_has_bits & 0x00100000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->trace_duration_ms());
    }

    // optional uint64 tracing_session_id = 4;
    if (cached_has_bits & 0x00200000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->tracing_session_id());
    }

    // optional bool enable_extra_guardrails = 6;
    if (cached_has_bits & 0x00400000u) {
      total_size += 1 + 1;
    }

    // optional uint32 stop_timeout_ms = 7;
    if (cached_has_bits & 0x00800000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->stop_timeout_ms());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataSourceConfig::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const DataSourceConfig*>(
      &from));
}

void DataSourceConfig::MergeFrom(const DataSourceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.DataSourceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      legacy_config_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.legacy_config_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_ftrace_config()->::perfetto::protos::FtraceConfig::MergeFrom(from.ftrace_config());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_chrome_config()->::perfetto::protos::ChromeConfig::MergeFrom(from.chrome_config());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_inode_file_config()->::perfetto::protos::InodeFileConfig::MergeFrom(from.inode_file_config());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_process_stats_config()->::perfetto::protos::ProcessStatsConfig::MergeFrom(from.process_stats_config());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_sys_stats_config()->::perfetto::protos::SysStatsConfig::MergeFrom(from.sys_stats_config());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_heapprofd_config()->::perfetto::protos::HeapprofdConfig::MergeFrom(from.heapprofd_config());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_android_power_config()->::perfetto::protos::AndroidPowerConfig::MergeFrom(from.android_power_config());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_android_log_config()->::perfetto::protos::AndroidLogConfig::MergeFrom(from.android_log_config());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_gpu_counter_config()->::perfetto::protos::GpuCounterConfig::MergeFrom(from.gpu_counter_config());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_packages_list_config()->::perfetto::protos::PackagesListConfig::MergeFrom(from.packages_list_config());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_java_hprof_config()->::perfetto::protos::JavaHprofConfig::MergeFrom(from.java_hprof_config());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_perf_event_config()->::perfetto::protos::PerfEventConfig::MergeFrom(from.perf_event_config());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_vulkan_memory_config()->::perfetto::protos::VulkanMemoryConfig::MergeFrom(from.vulkan_memory_config());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_track_event_config()->::perfetto::protos::TrackEventConfig::MergeFrom(from.track_event_config());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_android_polled_state_config()->::perfetto::protos::AndroidPolledStateConfig::MergeFrom(from.android_polled_state_config());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_interceptor_config()->::perfetto::protos::InterceptorConfig::MergeFrom(from.interceptor_config());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable_for_testing()->::perfetto::protos::TestConfig::MergeFrom(from.for_testing());
    }
    if (cached_has_bits & 0x00080000u) {
      target_buffer_ = from.target_buffer_;
    }
    if (cached_has_bits & 0x00100000u) {
      trace_duration_ms_ = from.trace_duration_ms_;
    }
    if (cached_has_bits & 0x00200000u) {
      tracing_session_id_ = from.tracing_session_id_;
    }
    if (cached_has_bits & 0x00400000u) {
      enable_extra_guardrails_ = from.enable_extra_guardrails_;
    }
    if (cached_has_bits & 0x00800000u) {
      stop_timeout_ms_ = from.stop_timeout_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DataSourceConfig::CopyFrom(const DataSourceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.DataSourceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataSourceConfig::IsInitialized() const {
  return true;
}

void DataSourceConfig::InternalSwap(DataSourceConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  legacy_config_.Swap(&other->legacy_config_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ftrace_config_, other->ftrace_config_);
  swap(chrome_config_, other->chrome_config_);
  swap(inode_file_config_, other->inode_file_config_);
  swap(process_stats_config_, other->process_stats_config_);
  swap(sys_stats_config_, other->sys_stats_config_);
  swap(heapprofd_config_, other->heapprofd_config_);
  swap(android_power_config_, other->android_power_config_);
  swap(android_log_config_, other->android_log_config_);
  swap(gpu_counter_config_, other->gpu_counter_config_);
  swap(packages_list_config_, other->packages_list_config_);
  swap(java_hprof_config_, other->java_hprof_config_);
  swap(perf_event_config_, other->perf_event_config_);
  swap(vulkan_memory_config_, other->vulkan_memory_config_);
  swap(track_event_config_, other->track_event_config_);
  swap(android_polled_state_config_, other->android_polled_state_config_);
  swap(interceptor_config_, other->interceptor_config_);
  swap(for_testing_, other->for_testing_);
  swap(target_buffer_, other->target_buffer_);
  swap(trace_duration_ms_, other->trace_duration_ms_);
  swap(tracing_session_id_, other->tracing_session_id_);
  swap(enable_extra_guardrails_, other->enable_extra_guardrails_);
  swap(stop_timeout_ms_, other->stop_timeout_ms_);
}

std::string DataSourceConfig::GetTypeName() const {
  return "perfetto.protos.DataSourceConfig";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::DataSourceConfig* Arena::CreateMaybeMessage< ::perfetto::protos::DataSourceConfig >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::DataSourceConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
