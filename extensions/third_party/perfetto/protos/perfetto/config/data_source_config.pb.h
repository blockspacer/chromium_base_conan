// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/config/data_source_config.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "protos/perfetto/config/android/android_log_config.pb.h"
#include "protos/perfetto/config/android/android_polled_state_config.pb.h"
#include "protos/perfetto/config/android/packages_list_config.pb.h"
#include "protos/perfetto/config/chrome/chrome_config.pb.h"
#include "protos/perfetto/config/ftrace/ftrace_config.pb.h"
#include "protos/perfetto/config/gpu/gpu_counter_config.pb.h"
#include "protos/perfetto/config/gpu/vulkan_memory_config.pb.h"
#include "protos/perfetto/config/inode_file/inode_file_config.pb.h"
#include "protos/perfetto/config/interceptor_config.pb.h"
#include "protos/perfetto/config/power/android_power_config.pb.h"
#include "protos/perfetto/config/process_stats/process_stats_config.pb.h"
#include "protos/perfetto/config/profiling/heapprofd_config.pb.h"
#include "protos/perfetto/config/profiling/java_hprof_config.pb.h"
#include "protos/perfetto/config/profiling/perf_event_config.pb.h"
#include "protos/perfetto/config/sys_stats/sys_stats_config.pb.h"
#include "protos/perfetto/config/test_config.pb.h"
#include "protos/perfetto/config/track_event/track_event_config.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace perfetto {
namespace protos {
class DataSourceConfig;
class DataSourceConfigDefaultTypeInternal;
extern DataSourceConfigDefaultTypeInternal _DataSourceConfig_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> ::perfetto::protos::DataSourceConfig* Arena::CreateMaybeMessage<::perfetto::protos::DataSourceConfig>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace perfetto {
namespace protos {

// ===================================================================

class DataSourceConfig :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.DataSourceConfig) */ {
 public:
  DataSourceConfig();
  virtual ~DataSourceConfig();

  DataSourceConfig(const DataSourceConfig& from);
  DataSourceConfig(DataSourceConfig&& from) noexcept
    : DataSourceConfig() {
    *this = ::std::move(from);
  }

  inline DataSourceConfig& operator=(const DataSourceConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataSourceConfig& operator=(DataSourceConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DataSourceConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataSourceConfig* internal_default_instance() {
    return reinterpret_cast<const DataSourceConfig*>(
               &_DataSourceConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DataSourceConfig& a, DataSourceConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(DataSourceConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataSourceConfig* New() const final {
    return CreateMaybeMessage<DataSourceConfig>(nullptr);
  }

  DataSourceConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataSourceConfig>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const DataSourceConfig& from);
  void MergeFrom(const DataSourceConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DataSourceConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.DataSourceConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kLegacyConfigFieldNumber = 1000,
    kFtraceConfigFieldNumber = 100,
    kChromeConfigFieldNumber = 101,
    kInodeFileConfigFieldNumber = 102,
    kProcessStatsConfigFieldNumber = 103,
    kSysStatsConfigFieldNumber = 104,
    kHeapprofdConfigFieldNumber = 105,
    kAndroidPowerConfigFieldNumber = 106,
    kAndroidLogConfigFieldNumber = 107,
    kGpuCounterConfigFieldNumber = 108,
    kPackagesListConfigFieldNumber = 109,
    kJavaHprofConfigFieldNumber = 110,
    kPerfEventConfigFieldNumber = 111,
    kVulkanMemoryConfigFieldNumber = 112,
    kTrackEventConfigFieldNumber = 113,
    kAndroidPolledStateConfigFieldNumber = 114,
    kInterceptorConfigFieldNumber = 115,
    kForTestingFieldNumber = 1001,
    kTargetBufferFieldNumber = 2,
    kTraceDurationMsFieldNumber = 3,
    kTracingSessionIdFieldNumber = 4,
    kEnableExtraGuardrailsFieldNumber = 6,
    kStopTimeoutMsFieldNumber = 7,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional string legacy_config = 1000;
  bool has_legacy_config() const;
  void clear_legacy_config();
  const std::string& legacy_config() const;
  void set_legacy_config(const std::string& value);
  void set_legacy_config(std::string&& value);
  void set_legacy_config(const char* value);
  void set_legacy_config(const char* value, size_t size);
  std::string* mutable_legacy_config();
  std::string* release_legacy_config();
  void set_allocated_legacy_config(std::string* legacy_config);

  // optional .perfetto.protos.FtraceConfig ftrace_config = 100 [lazy = true];
  bool has_ftrace_config() const;
  void clear_ftrace_config();
  const ::perfetto::protos::FtraceConfig& ftrace_config() const;
  ::perfetto::protos::FtraceConfig* release_ftrace_config();
  ::perfetto::protos::FtraceConfig* mutable_ftrace_config();
  void set_allocated_ftrace_config(::perfetto::protos::FtraceConfig* ftrace_config);

  // optional .perfetto.protos.ChromeConfig chrome_config = 101;
  bool has_chrome_config() const;
  void clear_chrome_config();
  const ::perfetto::protos::ChromeConfig& chrome_config() const;
  ::perfetto::protos::ChromeConfig* release_chrome_config();
  ::perfetto::protos::ChromeConfig* mutable_chrome_config();
  void set_allocated_chrome_config(::perfetto::protos::ChromeConfig* chrome_config);

  // optional .perfetto.protos.InodeFileConfig inode_file_config = 102 [lazy = true];
  bool has_inode_file_config() const;
  void clear_inode_file_config();
  const ::perfetto::protos::InodeFileConfig& inode_file_config() const;
  ::perfetto::protos::InodeFileConfig* release_inode_file_config();
  ::perfetto::protos::InodeFileConfig* mutable_inode_file_config();
  void set_allocated_inode_file_config(::perfetto::protos::InodeFileConfig* inode_file_config);

  // optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103 [lazy = true];
  bool has_process_stats_config() const;
  void clear_process_stats_config();
  const ::perfetto::protos::ProcessStatsConfig& process_stats_config() const;
  ::perfetto::protos::ProcessStatsConfig* release_process_stats_config();
  ::perfetto::protos::ProcessStatsConfig* mutable_process_stats_config();
  void set_allocated_process_stats_config(::perfetto::protos::ProcessStatsConfig* process_stats_config);

  // optional .perfetto.protos.SysStatsConfig sys_stats_config = 104 [lazy = true];
  bool has_sys_stats_config() const;
  void clear_sys_stats_config();
  const ::perfetto::protos::SysStatsConfig& sys_stats_config() const;
  ::perfetto::protos::SysStatsConfig* release_sys_stats_config();
  ::perfetto::protos::SysStatsConfig* mutable_sys_stats_config();
  void set_allocated_sys_stats_config(::perfetto::protos::SysStatsConfig* sys_stats_config);

  // optional .perfetto.protos.HeapprofdConfig heapprofd_config = 105 [lazy = true];
  bool has_heapprofd_config() const;
  void clear_heapprofd_config();
  const ::perfetto::protos::HeapprofdConfig& heapprofd_config() const;
  ::perfetto::protos::HeapprofdConfig* release_heapprofd_config();
  ::perfetto::protos::HeapprofdConfig* mutable_heapprofd_config();
  void set_allocated_heapprofd_config(::perfetto::protos::HeapprofdConfig* heapprofd_config);

  // optional .perfetto.protos.AndroidPowerConfig android_power_config = 106 [lazy = true];
  bool has_android_power_config() const;
  void clear_android_power_config();
  const ::perfetto::protos::AndroidPowerConfig& android_power_config() const;
  ::perfetto::protos::AndroidPowerConfig* release_android_power_config();
  ::perfetto::protos::AndroidPowerConfig* mutable_android_power_config();
  void set_allocated_android_power_config(::perfetto::protos::AndroidPowerConfig* android_power_config);

  // optional .perfetto.protos.AndroidLogConfig android_log_config = 107 [lazy = true];
  bool has_android_log_config() const;
  void clear_android_log_config();
  const ::perfetto::protos::AndroidLogConfig& android_log_config() const;
  ::perfetto::protos::AndroidLogConfig* release_android_log_config();
  ::perfetto::protos::AndroidLogConfig* mutable_android_log_config();
  void set_allocated_android_log_config(::perfetto::protos::AndroidLogConfig* android_log_config);

  // optional .perfetto.protos.GpuCounterConfig gpu_counter_config = 108 [lazy = true];
  bool has_gpu_counter_config() const;
  void clear_gpu_counter_config();
  const ::perfetto::protos::GpuCounterConfig& gpu_counter_config() const;
  ::perfetto::protos::GpuCounterConfig* release_gpu_counter_config();
  ::perfetto::protos::GpuCounterConfig* mutable_gpu_counter_config();
  void set_allocated_gpu_counter_config(::perfetto::protos::GpuCounterConfig* gpu_counter_config);

  // optional .perfetto.protos.PackagesListConfig packages_list_config = 109 [lazy = true];
  bool has_packages_list_config() const;
  void clear_packages_list_config();
  const ::perfetto::protos::PackagesListConfig& packages_list_config() const;
  ::perfetto::protos::PackagesListConfig* release_packages_list_config();
  ::perfetto::protos::PackagesListConfig* mutable_packages_list_config();
  void set_allocated_packages_list_config(::perfetto::protos::PackagesListConfig* packages_list_config);

  // optional .perfetto.protos.JavaHprofConfig java_hprof_config = 110 [lazy = true];
  bool has_java_hprof_config() const;
  void clear_java_hprof_config();
  const ::perfetto::protos::JavaHprofConfig& java_hprof_config() const;
  ::perfetto::protos::JavaHprofConfig* release_java_hprof_config();
  ::perfetto::protos::JavaHprofConfig* mutable_java_hprof_config();
  void set_allocated_java_hprof_config(::perfetto::protos::JavaHprofConfig* java_hprof_config);

  // optional .perfetto.protos.PerfEventConfig perf_event_config = 111 [lazy = true];
  bool has_perf_event_config() const;
  void clear_perf_event_config();
  const ::perfetto::protos::PerfEventConfig& perf_event_config() const;
  ::perfetto::protos::PerfEventConfig* release_perf_event_config();
  ::perfetto::protos::PerfEventConfig* mutable_perf_event_config();
  void set_allocated_perf_event_config(::perfetto::protos::PerfEventConfig* perf_event_config);

  // optional .perfetto.protos.VulkanMemoryConfig vulkan_memory_config = 112 [lazy = true];
  bool has_vulkan_memory_config() const;
  void clear_vulkan_memory_config();
  const ::perfetto::protos::VulkanMemoryConfig& vulkan_memory_config() const;
  ::perfetto::protos::VulkanMemoryConfig* release_vulkan_memory_config();
  ::perfetto::protos::VulkanMemoryConfig* mutable_vulkan_memory_config();
  void set_allocated_vulkan_memory_config(::perfetto::protos::VulkanMemoryConfig* vulkan_memory_config);

  // optional .perfetto.protos.TrackEventConfig track_event_config = 113 [lazy = true];
  bool has_track_event_config() const;
  void clear_track_event_config();
  const ::perfetto::protos::TrackEventConfig& track_event_config() const;
  ::perfetto::protos::TrackEventConfig* release_track_event_config();
  ::perfetto::protos::TrackEventConfig* mutable_track_event_config();
  void set_allocated_track_event_config(::perfetto::protos::TrackEventConfig* track_event_config);

  // optional .perfetto.protos.AndroidPolledStateConfig android_polled_state_config = 114 [lazy = true];
  bool has_android_polled_state_config() const;
  void clear_android_polled_state_config();
  const ::perfetto::protos::AndroidPolledStateConfig& android_polled_state_config() const;
  ::perfetto::protos::AndroidPolledStateConfig* release_android_polled_state_config();
  ::perfetto::protos::AndroidPolledStateConfig* mutable_android_polled_state_config();
  void set_allocated_android_polled_state_config(::perfetto::protos::AndroidPolledStateConfig* android_polled_state_config);

  // optional .perfetto.protos.InterceptorConfig interceptor_config = 115;
  bool has_interceptor_config() const;
  void clear_interceptor_config();
  const ::perfetto::protos::InterceptorConfig& interceptor_config() const;
  ::perfetto::protos::InterceptorConfig* release_interceptor_config();
  ::perfetto::protos::InterceptorConfig* mutable_interceptor_config();
  void set_allocated_interceptor_config(::perfetto::protos::InterceptorConfig* interceptor_config);

  // optional .perfetto.protos.TestConfig for_testing = 1001;
  bool has_for_testing() const;
  void clear_for_testing();
  const ::perfetto::protos::TestConfig& for_testing() const;
  ::perfetto::protos::TestConfig* release_for_testing();
  ::perfetto::protos::TestConfig* mutable_for_testing();
  void set_allocated_for_testing(::perfetto::protos::TestConfig* for_testing);

  // optional uint32 target_buffer = 2;
  bool has_target_buffer() const;
  void clear_target_buffer();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_buffer() const;
  void set_target_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 trace_duration_ms = 3;
  bool has_trace_duration_ms() const;
  void clear_trace_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::uint32 trace_duration_ms() const;
  void set_trace_duration_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint64 tracing_session_id = 4;
  bool has_tracing_session_id() const;
  void clear_tracing_session_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 tracing_session_id() const;
  void set_tracing_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional bool enable_extra_guardrails = 6;
  bool has_enable_extra_guardrails() const;
  void clear_enable_extra_guardrails();
  bool enable_extra_guardrails() const;
  void set_enable_extra_guardrails(bool value);

  // optional uint32 stop_timeout_ms = 7;
  bool has_stop_timeout_ms() const;
  void clear_stop_timeout_ms();
  ::PROTOBUF_NAMESPACE_ID::uint32 stop_timeout_ms() const;
  void set_stop_timeout_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.DataSourceConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr legacy_config_;
  ::perfetto::protos::FtraceConfig* ftrace_config_;
  ::perfetto::protos::ChromeConfig* chrome_config_;
  ::perfetto::protos::InodeFileConfig* inode_file_config_;
  ::perfetto::protos::ProcessStatsConfig* process_stats_config_;
  ::perfetto::protos::SysStatsConfig* sys_stats_config_;
  ::perfetto::protos::HeapprofdConfig* heapprofd_config_;
  ::perfetto::protos::AndroidPowerConfig* android_power_config_;
  ::perfetto::protos::AndroidLogConfig* android_log_config_;
  ::perfetto::protos::GpuCounterConfig* gpu_counter_config_;
  ::perfetto::protos::PackagesListConfig* packages_list_config_;
  ::perfetto::protos::JavaHprofConfig* java_hprof_config_;
  ::perfetto::protos::PerfEventConfig* perf_event_config_;
  ::perfetto::protos::VulkanMemoryConfig* vulkan_memory_config_;
  ::perfetto::protos::TrackEventConfig* track_event_config_;
  ::perfetto::protos::AndroidPolledStateConfig* android_polled_state_config_;
  ::perfetto::protos::InterceptorConfig* interceptor_config_;
  ::perfetto::protos::TestConfig* for_testing_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_buffer_;
  ::PROTOBUF_NAMESPACE_ID::uint32 trace_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tracing_session_id_;
  bool enable_extra_guardrails_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stop_timeout_ms_;
  friend struct ::TableStruct_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DataSourceConfig

// optional string name = 1;
inline bool DataSourceConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataSourceConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DataSourceConfig::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.name)
  return name_.GetNoArena();
}
inline void DataSourceConfig::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.name)
}
inline void DataSourceConfig::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.DataSourceConfig.name)
}
inline void DataSourceConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.DataSourceConfig.name)
}
inline void DataSourceConfig::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.DataSourceConfig.name)
}
inline std::string* DataSourceConfig::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DataSourceConfig::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DataSourceConfig::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.name)
}

// optional uint32 target_buffer = 2;
inline bool DataSourceConfig::has_target_buffer() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void DataSourceConfig::clear_target_buffer() {
  target_buffer_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataSourceConfig::target_buffer() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.target_buffer)
  return target_buffer_;
}
inline void DataSourceConfig::set_target_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  target_buffer_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.target_buffer)
}

// optional uint32 trace_duration_ms = 3;
inline bool DataSourceConfig::has_trace_duration_ms() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void DataSourceConfig::clear_trace_duration_ms() {
  trace_duration_ms_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataSourceConfig::trace_duration_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.trace_duration_ms)
  return trace_duration_ms_;
}
inline void DataSourceConfig::set_trace_duration_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  trace_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.trace_duration_ms)
}

// optional uint32 stop_timeout_ms = 7;
inline bool DataSourceConfig::has_stop_timeout_ms() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void DataSourceConfig::clear_stop_timeout_ms() {
  stop_timeout_ms_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DataSourceConfig::stop_timeout_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.stop_timeout_ms)
  return stop_timeout_ms_;
}
inline void DataSourceConfig::set_stop_timeout_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  stop_timeout_ms_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.stop_timeout_ms)
}

// optional bool enable_extra_guardrails = 6;
inline bool DataSourceConfig::has_enable_extra_guardrails() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void DataSourceConfig::clear_enable_extra_guardrails() {
  enable_extra_guardrails_ = false;
  _has_bits_[0] &= ~0x00400000u;
}
inline bool DataSourceConfig::enable_extra_guardrails() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.enable_extra_guardrails)
  return enable_extra_guardrails_;
}
inline void DataSourceConfig::set_enable_extra_guardrails(bool value) {
  _has_bits_[0] |= 0x00400000u;
  enable_extra_guardrails_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.enable_extra_guardrails)
}

// optional uint64 tracing_session_id = 4;
inline bool DataSourceConfig::has_tracing_session_id() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void DataSourceConfig::clear_tracing_session_id() {
  tracing_session_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DataSourceConfig::tracing_session_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.tracing_session_id)
  return tracing_session_id_;
}
inline void DataSourceConfig::set_tracing_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00200000u;
  tracing_session_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.tracing_session_id)
}

// optional .perfetto.protos.FtraceConfig ftrace_config = 100 [lazy = true];
inline bool DataSourceConfig::has_ftrace_config() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline const ::perfetto::protos::FtraceConfig& DataSourceConfig::ftrace_config() const {
  const ::perfetto::protos::FtraceConfig* p = ftrace_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.ftrace_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::FtraceConfig*>(
      &::perfetto::protos::_FtraceConfig_default_instance_);
}
inline ::perfetto::protos::FtraceConfig* DataSourceConfig::release_ftrace_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.ftrace_config)
  _has_bits_[0] &= ~0x00000004u;
  ::perfetto::protos::FtraceConfig* temp = ftrace_config_;
  ftrace_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::FtraceConfig* DataSourceConfig::mutable_ftrace_config() {
  _has_bits_[0] |= 0x00000004u;
  if (ftrace_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::FtraceConfig>(GetArenaNoVirtual());
    ftrace_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.ftrace_config)
  return ftrace_config_;
}
inline void DataSourceConfig::set_allocated_ftrace_config(::perfetto::protos::FtraceConfig* ftrace_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ftrace_config_);
  }
  if (ftrace_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ftrace_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ftrace_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  ftrace_config_ = ftrace_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.ftrace_config)
}

// optional .perfetto.protos.InodeFileConfig inode_file_config = 102 [lazy = true];
inline bool DataSourceConfig::has_inode_file_config() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline const ::perfetto::protos::InodeFileConfig& DataSourceConfig::inode_file_config() const {
  const ::perfetto::protos::InodeFileConfig* p = inode_file_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.inode_file_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::InodeFileConfig*>(
      &::perfetto::protos::_InodeFileConfig_default_instance_);
}
inline ::perfetto::protos::InodeFileConfig* DataSourceConfig::release_inode_file_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.inode_file_config)
  _has_bits_[0] &= ~0x00000010u;
  ::perfetto::protos::InodeFileConfig* temp = inode_file_config_;
  inode_file_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::InodeFileConfig* DataSourceConfig::mutable_inode_file_config() {
  _has_bits_[0] |= 0x00000010u;
  if (inode_file_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::InodeFileConfig>(GetArenaNoVirtual());
    inode_file_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.inode_file_config)
  return inode_file_config_;
}
inline void DataSourceConfig::set_allocated_inode_file_config(::perfetto::protos::InodeFileConfig* inode_file_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(inode_file_config_);
  }
  if (inode_file_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      inode_file_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, inode_file_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  inode_file_config_ = inode_file_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.inode_file_config)
}

// optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103 [lazy = true];
inline bool DataSourceConfig::has_process_stats_config() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline const ::perfetto::protos::ProcessStatsConfig& DataSourceConfig::process_stats_config() const {
  const ::perfetto::protos::ProcessStatsConfig* p = process_stats_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.process_stats_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::ProcessStatsConfig*>(
      &::perfetto::protos::_ProcessStatsConfig_default_instance_);
}
inline ::perfetto::protos::ProcessStatsConfig* DataSourceConfig::release_process_stats_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.process_stats_config)
  _has_bits_[0] &= ~0x00000020u;
  ::perfetto::protos::ProcessStatsConfig* temp = process_stats_config_;
  process_stats_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::ProcessStatsConfig* DataSourceConfig::mutable_process_stats_config() {
  _has_bits_[0] |= 0x00000020u;
  if (process_stats_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::ProcessStatsConfig>(GetArenaNoVirtual());
    process_stats_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.process_stats_config)
  return process_stats_config_;
}
inline void DataSourceConfig::set_allocated_process_stats_config(::perfetto::protos::ProcessStatsConfig* process_stats_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(process_stats_config_);
  }
  if (process_stats_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      process_stats_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, process_stats_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  process_stats_config_ = process_stats_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.process_stats_config)
}

// optional .perfetto.protos.SysStatsConfig sys_stats_config = 104 [lazy = true];
inline bool DataSourceConfig::has_sys_stats_config() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline const ::perfetto::protos::SysStatsConfig& DataSourceConfig::sys_stats_config() const {
  const ::perfetto::protos::SysStatsConfig* p = sys_stats_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.sys_stats_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::SysStatsConfig*>(
      &::perfetto::protos::_SysStatsConfig_default_instance_);
}
inline ::perfetto::protos::SysStatsConfig* DataSourceConfig::release_sys_stats_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.sys_stats_config)
  _has_bits_[0] &= ~0x00000040u;
  ::perfetto::protos::SysStatsConfig* temp = sys_stats_config_;
  sys_stats_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::SysStatsConfig* DataSourceConfig::mutable_sys_stats_config() {
  _has_bits_[0] |= 0x00000040u;
  if (sys_stats_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::SysStatsConfig>(GetArenaNoVirtual());
    sys_stats_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.sys_stats_config)
  return sys_stats_config_;
}
inline void DataSourceConfig::set_allocated_sys_stats_config(::perfetto::protos::SysStatsConfig* sys_stats_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sys_stats_config_);
  }
  if (sys_stats_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      sys_stats_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sys_stats_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  sys_stats_config_ = sys_stats_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.sys_stats_config)
}

// optional .perfetto.protos.HeapprofdConfig heapprofd_config = 105 [lazy = true];
inline bool DataSourceConfig::has_heapprofd_config() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline const ::perfetto::protos::HeapprofdConfig& DataSourceConfig::heapprofd_config() const {
  const ::perfetto::protos::HeapprofdConfig* p = heapprofd_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.heapprofd_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::HeapprofdConfig*>(
      &::perfetto::protos::_HeapprofdConfig_default_instance_);
}
inline ::perfetto::protos::HeapprofdConfig* DataSourceConfig::release_heapprofd_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.heapprofd_config)
  _has_bits_[0] &= ~0x00000080u;
  ::perfetto::protos::HeapprofdConfig* temp = heapprofd_config_;
  heapprofd_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::HeapprofdConfig* DataSourceConfig::mutable_heapprofd_config() {
  _has_bits_[0] |= 0x00000080u;
  if (heapprofd_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::HeapprofdConfig>(GetArenaNoVirtual());
    heapprofd_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.heapprofd_config)
  return heapprofd_config_;
}
inline void DataSourceConfig::set_allocated_heapprofd_config(::perfetto::protos::HeapprofdConfig* heapprofd_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(heapprofd_config_);
  }
  if (heapprofd_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      heapprofd_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, heapprofd_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  heapprofd_config_ = heapprofd_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.heapprofd_config)
}

// optional .perfetto.protos.JavaHprofConfig java_hprof_config = 110 [lazy = true];
inline bool DataSourceConfig::has_java_hprof_config() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline const ::perfetto::protos::JavaHprofConfig& DataSourceConfig::java_hprof_config() const {
  const ::perfetto::protos::JavaHprofConfig* p = java_hprof_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.java_hprof_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::JavaHprofConfig*>(
      &::perfetto::protos::_JavaHprofConfig_default_instance_);
}
inline ::perfetto::protos::JavaHprofConfig* DataSourceConfig::release_java_hprof_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.java_hprof_config)
  _has_bits_[0] &= ~0x00001000u;
  ::perfetto::protos::JavaHprofConfig* temp = java_hprof_config_;
  java_hprof_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::JavaHprofConfig* DataSourceConfig::mutable_java_hprof_config() {
  _has_bits_[0] |= 0x00001000u;
  if (java_hprof_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::JavaHprofConfig>(GetArenaNoVirtual());
    java_hprof_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.java_hprof_config)
  return java_hprof_config_;
}
inline void DataSourceConfig::set_allocated_java_hprof_config(::perfetto::protos::JavaHprofConfig* java_hprof_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(java_hprof_config_);
  }
  if (java_hprof_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      java_hprof_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, java_hprof_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  java_hprof_config_ = java_hprof_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.java_hprof_config)
}

// optional .perfetto.protos.AndroidPowerConfig android_power_config = 106 [lazy = true];
inline bool DataSourceConfig::has_android_power_config() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline const ::perfetto::protos::AndroidPowerConfig& DataSourceConfig::android_power_config() const {
  const ::perfetto::protos::AndroidPowerConfig* p = android_power_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.android_power_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::AndroidPowerConfig*>(
      &::perfetto::protos::_AndroidPowerConfig_default_instance_);
}
inline ::perfetto::protos::AndroidPowerConfig* DataSourceConfig::release_android_power_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.android_power_config)
  _has_bits_[0] &= ~0x00000100u;
  ::perfetto::protos::AndroidPowerConfig* temp = android_power_config_;
  android_power_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::AndroidPowerConfig* DataSourceConfig::mutable_android_power_config() {
  _has_bits_[0] |= 0x00000100u;
  if (android_power_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::AndroidPowerConfig>(GetArenaNoVirtual());
    android_power_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.android_power_config)
  return android_power_config_;
}
inline void DataSourceConfig::set_allocated_android_power_config(::perfetto::protos::AndroidPowerConfig* android_power_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(android_power_config_);
  }
  if (android_power_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      android_power_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, android_power_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  android_power_config_ = android_power_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.android_power_config)
}

// optional .perfetto.protos.AndroidLogConfig android_log_config = 107 [lazy = true];
inline bool DataSourceConfig::has_android_log_config() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline const ::perfetto::protos::AndroidLogConfig& DataSourceConfig::android_log_config() const {
  const ::perfetto::protos::AndroidLogConfig* p = android_log_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.android_log_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::AndroidLogConfig*>(
      &::perfetto::protos::_AndroidLogConfig_default_instance_);
}
inline ::perfetto::protos::AndroidLogConfig* DataSourceConfig::release_android_log_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.android_log_config)
  _has_bits_[0] &= ~0x00000200u;
  ::perfetto::protos::AndroidLogConfig* temp = android_log_config_;
  android_log_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::AndroidLogConfig* DataSourceConfig::mutable_android_log_config() {
  _has_bits_[0] |= 0x00000200u;
  if (android_log_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::AndroidLogConfig>(GetArenaNoVirtual());
    android_log_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.android_log_config)
  return android_log_config_;
}
inline void DataSourceConfig::set_allocated_android_log_config(::perfetto::protos::AndroidLogConfig* android_log_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(android_log_config_);
  }
  if (android_log_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      android_log_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, android_log_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  android_log_config_ = android_log_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.android_log_config)
}

// optional .perfetto.protos.GpuCounterConfig gpu_counter_config = 108 [lazy = true];
inline bool DataSourceConfig::has_gpu_counter_config() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline const ::perfetto::protos::GpuCounterConfig& DataSourceConfig::gpu_counter_config() const {
  const ::perfetto::protos::GpuCounterConfig* p = gpu_counter_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.gpu_counter_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::GpuCounterConfig*>(
      &::perfetto::protos::_GpuCounterConfig_default_instance_);
}
inline ::perfetto::protos::GpuCounterConfig* DataSourceConfig::release_gpu_counter_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.gpu_counter_config)
  _has_bits_[0] &= ~0x00000400u;
  ::perfetto::protos::GpuCounterConfig* temp = gpu_counter_config_;
  gpu_counter_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::GpuCounterConfig* DataSourceConfig::mutable_gpu_counter_config() {
  _has_bits_[0] |= 0x00000400u;
  if (gpu_counter_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::GpuCounterConfig>(GetArenaNoVirtual());
    gpu_counter_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.gpu_counter_config)
  return gpu_counter_config_;
}
inline void DataSourceConfig::set_allocated_gpu_counter_config(::perfetto::protos::GpuCounterConfig* gpu_counter_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(gpu_counter_config_);
  }
  if (gpu_counter_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      gpu_counter_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gpu_counter_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  gpu_counter_config_ = gpu_counter_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.gpu_counter_config)
}

// optional .perfetto.protos.PackagesListConfig packages_list_config = 109 [lazy = true];
inline bool DataSourceConfig::has_packages_list_config() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline const ::perfetto::protos::PackagesListConfig& DataSourceConfig::packages_list_config() const {
  const ::perfetto::protos::PackagesListConfig* p = packages_list_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.packages_list_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::PackagesListConfig*>(
      &::perfetto::protos::_PackagesListConfig_default_instance_);
}
inline ::perfetto::protos::PackagesListConfig* DataSourceConfig::release_packages_list_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.packages_list_config)
  _has_bits_[0] &= ~0x00000800u;
  ::perfetto::protos::PackagesListConfig* temp = packages_list_config_;
  packages_list_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::PackagesListConfig* DataSourceConfig::mutable_packages_list_config() {
  _has_bits_[0] |= 0x00000800u;
  if (packages_list_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::PackagesListConfig>(GetArenaNoVirtual());
    packages_list_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.packages_list_config)
  return packages_list_config_;
}
inline void DataSourceConfig::set_allocated_packages_list_config(::perfetto::protos::PackagesListConfig* packages_list_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(packages_list_config_);
  }
  if (packages_list_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      packages_list_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, packages_list_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  packages_list_config_ = packages_list_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.packages_list_config)
}

// optional .perfetto.protos.PerfEventConfig perf_event_config = 111 [lazy = true];
inline bool DataSourceConfig::has_perf_event_config() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline const ::perfetto::protos::PerfEventConfig& DataSourceConfig::perf_event_config() const {
  const ::perfetto::protos::PerfEventConfig* p = perf_event_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.perf_event_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::PerfEventConfig*>(
      &::perfetto::protos::_PerfEventConfig_default_instance_);
}
inline ::perfetto::protos::PerfEventConfig* DataSourceConfig::release_perf_event_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.perf_event_config)
  _has_bits_[0] &= ~0x00002000u;
  ::perfetto::protos::PerfEventConfig* temp = perf_event_config_;
  perf_event_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::PerfEventConfig* DataSourceConfig::mutable_perf_event_config() {
  _has_bits_[0] |= 0x00002000u;
  if (perf_event_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::PerfEventConfig>(GetArenaNoVirtual());
    perf_event_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.perf_event_config)
  return perf_event_config_;
}
inline void DataSourceConfig::set_allocated_perf_event_config(::perfetto::protos::PerfEventConfig* perf_event_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(perf_event_config_);
  }
  if (perf_event_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      perf_event_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, perf_event_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00002000u;
  } else {
    _has_bits_[0] &= ~0x00002000u;
  }
  perf_event_config_ = perf_event_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.perf_event_config)
}

// optional .perfetto.protos.VulkanMemoryConfig vulkan_memory_config = 112 [lazy = true];
inline bool DataSourceConfig::has_vulkan_memory_config() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline const ::perfetto::protos::VulkanMemoryConfig& DataSourceConfig::vulkan_memory_config() const {
  const ::perfetto::protos::VulkanMemoryConfig* p = vulkan_memory_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.vulkan_memory_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::VulkanMemoryConfig*>(
      &::perfetto::protos::_VulkanMemoryConfig_default_instance_);
}
inline ::perfetto::protos::VulkanMemoryConfig* DataSourceConfig::release_vulkan_memory_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.vulkan_memory_config)
  _has_bits_[0] &= ~0x00004000u;
  ::perfetto::protos::VulkanMemoryConfig* temp = vulkan_memory_config_;
  vulkan_memory_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::VulkanMemoryConfig* DataSourceConfig::mutable_vulkan_memory_config() {
  _has_bits_[0] |= 0x00004000u;
  if (vulkan_memory_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::VulkanMemoryConfig>(GetArenaNoVirtual());
    vulkan_memory_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.vulkan_memory_config)
  return vulkan_memory_config_;
}
inline void DataSourceConfig::set_allocated_vulkan_memory_config(::perfetto::protos::VulkanMemoryConfig* vulkan_memory_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(vulkan_memory_config_);
  }
  if (vulkan_memory_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      vulkan_memory_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vulkan_memory_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00004000u;
  } else {
    _has_bits_[0] &= ~0x00004000u;
  }
  vulkan_memory_config_ = vulkan_memory_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.vulkan_memory_config)
}

// optional .perfetto.protos.TrackEventConfig track_event_config = 113 [lazy = true];
inline bool DataSourceConfig::has_track_event_config() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline const ::perfetto::protos::TrackEventConfig& DataSourceConfig::track_event_config() const {
  const ::perfetto::protos::TrackEventConfig* p = track_event_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.track_event_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::TrackEventConfig*>(
      &::perfetto::protos::_TrackEventConfig_default_instance_);
}
inline ::perfetto::protos::TrackEventConfig* DataSourceConfig::release_track_event_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.track_event_config)
  _has_bits_[0] &= ~0x00008000u;
  ::perfetto::protos::TrackEventConfig* temp = track_event_config_;
  track_event_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::TrackEventConfig* DataSourceConfig::mutable_track_event_config() {
  _has_bits_[0] |= 0x00008000u;
  if (track_event_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::TrackEventConfig>(GetArenaNoVirtual());
    track_event_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.track_event_config)
  return track_event_config_;
}
inline void DataSourceConfig::set_allocated_track_event_config(::perfetto::protos::TrackEventConfig* track_event_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(track_event_config_);
  }
  if (track_event_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      track_event_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, track_event_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00008000u;
  } else {
    _has_bits_[0] &= ~0x00008000u;
  }
  track_event_config_ = track_event_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.track_event_config)
}

// optional .perfetto.protos.AndroidPolledStateConfig android_polled_state_config = 114 [lazy = true];
inline bool DataSourceConfig::has_android_polled_state_config() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline const ::perfetto::protos::AndroidPolledStateConfig& DataSourceConfig::android_polled_state_config() const {
  const ::perfetto::protos::AndroidPolledStateConfig* p = android_polled_state_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.android_polled_state_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::AndroidPolledStateConfig*>(
      &::perfetto::protos::_AndroidPolledStateConfig_default_instance_);
}
inline ::perfetto::protos::AndroidPolledStateConfig* DataSourceConfig::release_android_polled_state_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.android_polled_state_config)
  _has_bits_[0] &= ~0x00010000u;
  ::perfetto::protos::AndroidPolledStateConfig* temp = android_polled_state_config_;
  android_polled_state_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::AndroidPolledStateConfig* DataSourceConfig::mutable_android_polled_state_config() {
  _has_bits_[0] |= 0x00010000u;
  if (android_polled_state_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::AndroidPolledStateConfig>(GetArenaNoVirtual());
    android_polled_state_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.android_polled_state_config)
  return android_polled_state_config_;
}
inline void DataSourceConfig::set_allocated_android_polled_state_config(::perfetto::protos::AndroidPolledStateConfig* android_polled_state_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(android_polled_state_config_);
  }
  if (android_polled_state_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      android_polled_state_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, android_polled_state_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00010000u;
  } else {
    _has_bits_[0] &= ~0x00010000u;
  }
  android_polled_state_config_ = android_polled_state_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.android_polled_state_config)
}

// optional .perfetto.protos.ChromeConfig chrome_config = 101;
inline bool DataSourceConfig::has_chrome_config() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::perfetto::protos::ChromeConfig& DataSourceConfig::chrome_config() const {
  const ::perfetto::protos::ChromeConfig* p = chrome_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.chrome_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::ChromeConfig*>(
      &::perfetto::protos::_ChromeConfig_default_instance_);
}
inline ::perfetto::protos::ChromeConfig* DataSourceConfig::release_chrome_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.chrome_config)
  _has_bits_[0] &= ~0x00000008u;
  ::perfetto::protos::ChromeConfig* temp = chrome_config_;
  chrome_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::ChromeConfig* DataSourceConfig::mutable_chrome_config() {
  _has_bits_[0] |= 0x00000008u;
  if (chrome_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::ChromeConfig>(GetArenaNoVirtual());
    chrome_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.chrome_config)
  return chrome_config_;
}
inline void DataSourceConfig::set_allocated_chrome_config(::perfetto::protos::ChromeConfig* chrome_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(chrome_config_);
  }
  if (chrome_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      chrome_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chrome_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  chrome_config_ = chrome_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.chrome_config)
}

// optional .perfetto.protos.InterceptorConfig interceptor_config = 115;
inline bool DataSourceConfig::has_interceptor_config() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline const ::perfetto::protos::InterceptorConfig& DataSourceConfig::interceptor_config() const {
  const ::perfetto::protos::InterceptorConfig* p = interceptor_config_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.interceptor_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::InterceptorConfig*>(
      &::perfetto::protos::_InterceptorConfig_default_instance_);
}
inline ::perfetto::protos::InterceptorConfig* DataSourceConfig::release_interceptor_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.interceptor_config)
  _has_bits_[0] &= ~0x00020000u;
  ::perfetto::protos::InterceptorConfig* temp = interceptor_config_;
  interceptor_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::InterceptorConfig* DataSourceConfig::mutable_interceptor_config() {
  _has_bits_[0] |= 0x00020000u;
  if (interceptor_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::InterceptorConfig>(GetArenaNoVirtual());
    interceptor_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.interceptor_config)
  return interceptor_config_;
}
inline void DataSourceConfig::set_allocated_interceptor_config(::perfetto::protos::InterceptorConfig* interceptor_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(interceptor_config_);
  }
  if (interceptor_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      interceptor_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, interceptor_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00020000u;
  } else {
    _has_bits_[0] &= ~0x00020000u;
  }
  interceptor_config_ = interceptor_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.interceptor_config)
}

// optional string legacy_config = 1000;
inline bool DataSourceConfig::has_legacy_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataSourceConfig::clear_legacy_config() {
  legacy_config_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& DataSourceConfig::legacy_config() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.legacy_config)
  return legacy_config_.GetNoArena();
}
inline void DataSourceConfig::set_legacy_config(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  legacy_config_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.DataSourceConfig.legacy_config)
}
inline void DataSourceConfig::set_legacy_config(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  legacy_config_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.DataSourceConfig.legacy_config)
}
inline void DataSourceConfig::set_legacy_config(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  legacy_config_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.DataSourceConfig.legacy_config)
}
inline void DataSourceConfig::set_legacy_config(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  legacy_config_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.DataSourceConfig.legacy_config)
}
inline std::string* DataSourceConfig::mutable_legacy_config() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.legacy_config)
  return legacy_config_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DataSourceConfig::release_legacy_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.legacy_config)
  if (!has_legacy_config()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return legacy_config_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DataSourceConfig::set_allocated_legacy_config(std::string* legacy_config) {
  if (legacy_config != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  legacy_config_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), legacy_config);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.legacy_config)
}

// optional .perfetto.protos.TestConfig for_testing = 1001;
inline bool DataSourceConfig::has_for_testing() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline const ::perfetto::protos::TestConfig& DataSourceConfig::for_testing() const {
  const ::perfetto::protos::TestConfig* p = for_testing_;
  // @@protoc_insertion_point(field_get:perfetto.protos.DataSourceConfig.for_testing)
  return p != nullptr ? *p : *reinterpret_cast<const ::perfetto::protos::TestConfig*>(
      &::perfetto::protos::_TestConfig_default_instance_);
}
inline ::perfetto::protos::TestConfig* DataSourceConfig::release_for_testing() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DataSourceConfig.for_testing)
  _has_bits_[0] &= ~0x00040000u;
  ::perfetto::protos::TestConfig* temp = for_testing_;
  for_testing_ = nullptr;
  return temp;
}
inline ::perfetto::protos::TestConfig* DataSourceConfig::mutable_for_testing() {
  _has_bits_[0] |= 0x00040000u;
  if (for_testing_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::TestConfig>(GetArenaNoVirtual());
    for_testing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DataSourceConfig.for_testing)
  return for_testing_;
}
inline void DataSourceConfig::set_allocated_for_testing(::perfetto::protos::TestConfig* for_testing) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(for_testing_);
  }
  if (for_testing) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      for_testing = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, for_testing, submessage_arena);
    }
    _has_bits_[0] |= 0x00040000u;
  } else {
    _has_bits_[0] &= ~0x00040000u;
  }
  for_testing_ = for_testing;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DataSourceConfig.for_testing)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace perfetto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto
