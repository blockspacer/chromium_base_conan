// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/common/builtin_clock.proto

#include "protos/perfetto/common/builtin_clock.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace perfetto {
namespace protos {
}  // namespace protos
}  // namespace perfetto
namespace perfetto {
namespace protos {
bool BuiltinClock_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 63:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> BuiltinClock_strings[8] = {};

static const char BuiltinClock_names[] =
  "BUILTIN_CLOCK_BOOTTIME"
  "BUILTIN_CLOCK_MAX_ID"
  "BUILTIN_CLOCK_MONOTONIC"
  "BUILTIN_CLOCK_MONOTONIC_COARSE"
  "BUILTIN_CLOCK_MONOTONIC_RAW"
  "BUILTIN_CLOCK_REALTIME"
  "BUILTIN_CLOCK_REALTIME_COARSE"
  "BUILTIN_CLOCK_UNKNOWN";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry BuiltinClock_entries[] = {
  { {BuiltinClock_names + 0, 22}, 6 },
  { {BuiltinClock_names + 22, 20}, 63 },
  { {BuiltinClock_names + 42, 23}, 3 },
  { {BuiltinClock_names + 65, 30}, 4 },
  { {BuiltinClock_names + 95, 27}, 5 },
  { {BuiltinClock_names + 122, 22}, 1 },
  { {BuiltinClock_names + 144, 29}, 2 },
  { {BuiltinClock_names + 173, 21}, 0 },
};

static const int BuiltinClock_entries_by_number[] = {
  7, // 0 -> BUILTIN_CLOCK_UNKNOWN
  5, // 1 -> BUILTIN_CLOCK_REALTIME
  6, // 2 -> BUILTIN_CLOCK_REALTIME_COARSE
  2, // 3 -> BUILTIN_CLOCK_MONOTONIC
  3, // 4 -> BUILTIN_CLOCK_MONOTONIC_COARSE
  4, // 5 -> BUILTIN_CLOCK_MONOTONIC_RAW
  0, // 6 -> BUILTIN_CLOCK_BOOTTIME
  1, // 63 -> BUILTIN_CLOCK_MAX_ID
};

const std::string& BuiltinClock_Name(
    BuiltinClock value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          BuiltinClock_entries,
          BuiltinClock_entries_by_number,
          8, BuiltinClock_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      BuiltinClock_entries,
      BuiltinClock_entries_by_number,
      8, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     BuiltinClock_strings[idx].get();
}
bool BuiltinClock_Parse(
    const std::string& name, BuiltinClock* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      BuiltinClock_entries, 8, name, &int_value);
  if (success) {
    *value = static_cast<BuiltinClock>(int_value);
  }
  return success;
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
