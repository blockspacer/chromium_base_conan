// ipc/ipc_test.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef IPC_IPC_TEST_MOJOM_PARAMS_DATA_H_
#define IPC_IPC_TEST_MOJOM_PARAMS_DATA_H_

#include "base/macros.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace IPC {
namespace mojom {
namespace internal {
class  SimpleTestDriver_ExpectValue_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t value;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<SimpleTestDriver_ExpectValue_Params_Data>;

  SimpleTestDriver_ExpectValue_Params_Data();
  ~SimpleTestDriver_ExpectValue_Params_Data() = delete;
};
static_assert(sizeof(SimpleTestDriver_ExpectValue_Params_Data) == 16,
              "Bad sizeof(SimpleTestDriver_ExpectValue_Params_Data)");
class  SimpleTestDriver_GetExpectedValue_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SimpleTestDriver_GetExpectedValue_Params_Data>;

  SimpleTestDriver_GetExpectedValue_Params_Data();
  ~SimpleTestDriver_GetExpectedValue_Params_Data() = delete;
};
static_assert(sizeof(SimpleTestDriver_GetExpectedValue_Params_Data) == 8,
              "Bad sizeof(SimpleTestDriver_GetExpectedValue_Params_Data)");
class  SimpleTestDriver_GetExpectedValue_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t value;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<SimpleTestDriver_GetExpectedValue_ResponseParams_Data>;

  SimpleTestDriver_GetExpectedValue_ResponseParams_Data();
  ~SimpleTestDriver_GetExpectedValue_ResponseParams_Data() = delete;
};
static_assert(sizeof(SimpleTestDriver_GetExpectedValue_ResponseParams_Data) == 16,
              "Bad sizeof(SimpleTestDriver_GetExpectedValue_ResponseParams_Data)");
class  SimpleTestDriver_RequestValue_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SimpleTestDriver_RequestValue_Params_Data>;

  SimpleTestDriver_RequestValue_Params_Data();
  ~SimpleTestDriver_RequestValue_Params_Data() = delete;
};
static_assert(sizeof(SimpleTestDriver_RequestValue_Params_Data) == 8,
              "Bad sizeof(SimpleTestDriver_RequestValue_Params_Data)");
class  SimpleTestDriver_RequestValue_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t value;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<SimpleTestDriver_RequestValue_ResponseParams_Data>;

  SimpleTestDriver_RequestValue_ResponseParams_Data();
  ~SimpleTestDriver_RequestValue_ResponseParams_Data() = delete;
};
static_assert(sizeof(SimpleTestDriver_RequestValue_ResponseParams_Data) == 16,
              "Bad sizeof(SimpleTestDriver_RequestValue_ResponseParams_Data)");
class  SimpleTestDriver_RequestQuit_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SimpleTestDriver_RequestQuit_Params_Data>;

  SimpleTestDriver_RequestQuit_Params_Data();
  ~SimpleTestDriver_RequestQuit_Params_Data() = delete;
};
static_assert(sizeof(SimpleTestDriver_RequestQuit_Params_Data) == 8,
              "Bad sizeof(SimpleTestDriver_RequestQuit_Params_Data)");
class  SimpleTestDriver_RequestQuit_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SimpleTestDriver_RequestQuit_ResponseParams_Data>;

  SimpleTestDriver_RequestQuit_ResponseParams_Data();
  ~SimpleTestDriver_RequestQuit_ResponseParams_Data() = delete;
};
static_assert(sizeof(SimpleTestDriver_RequestQuit_ResponseParams_Data) == 8,
              "Bad sizeof(SimpleTestDriver_RequestQuit_ResponseParams_Data)");
class  SimpleTestClient_RequestValue_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SimpleTestClient_RequestValue_Params_Data>;

  SimpleTestClient_RequestValue_Params_Data();
  ~SimpleTestClient_RequestValue_Params_Data() = delete;
};
static_assert(sizeof(SimpleTestClient_RequestValue_Params_Data) == 8,
              "Bad sizeof(SimpleTestClient_RequestValue_Params_Data)");
class  SimpleTestClient_RequestValue_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t value;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<SimpleTestClient_RequestValue_ResponseParams_Data>;

  SimpleTestClient_RequestValue_ResponseParams_Data();
  ~SimpleTestClient_RequestValue_ResponseParams_Data() = delete;
};
static_assert(sizeof(SimpleTestClient_RequestValue_ResponseParams_Data) == 16,
              "Bad sizeof(SimpleTestClient_RequestValue_ResponseParams_Data)");
class  PingReceiver_Ping_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<PingReceiver_Ping_Params_Data>;

  PingReceiver_Ping_Params_Data();
  ~PingReceiver_Ping_Params_Data() = delete;
};
static_assert(sizeof(PingReceiver_Ping_Params_Data) == 8,
              "Bad sizeof(PingReceiver_Ping_Params_Data)");
class  PingReceiver_Ping_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<PingReceiver_Ping_ResponseParams_Data>;

  PingReceiver_Ping_ResponseParams_Data();
  ~PingReceiver_Ping_ResponseParams_Data() = delete;
};
static_assert(sizeof(PingReceiver_Ping_ResponseParams_Data) == 8,
              "Bad sizeof(PingReceiver_Ping_ResponseParams_Data)");
class  TestStructPasser_Pass_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::TestStruct_Data> s;

 private:
  friend class mojo::internal::MessageFragment<TestStructPasser_Pass_Params_Data>;

  TestStructPasser_Pass_Params_Data();
  ~TestStructPasser_Pass_Params_Data() = delete;
};
static_assert(sizeof(TestStructPasser_Pass_Params_Data) == 16,
              "Bad sizeof(TestStructPasser_Pass_Params_Data)");
class  IndirectTestDriver_GetPingReceiver_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::AssociatedEndpointHandle_Data receiver;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<IndirectTestDriver_GetPingReceiver_Params_Data>;

  IndirectTestDriver_GetPingReceiver_Params_Data();
  ~IndirectTestDriver_GetPingReceiver_Params_Data() = delete;
};
static_assert(sizeof(IndirectTestDriver_GetPingReceiver_Params_Data) == 16,
              "Bad sizeof(IndirectTestDriver_GetPingReceiver_Params_Data)");
class  Reflector_Ping_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> value;

 private:
  friend class mojo::internal::MessageFragment<Reflector_Ping_Params_Data>;

  Reflector_Ping_Params_Data();
  ~Reflector_Ping_Params_Data() = delete;
};
static_assert(sizeof(Reflector_Ping_Params_Data) == 16,
              "Bad sizeof(Reflector_Ping_Params_Data)");
class  Reflector_Ping_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> value;

 private:
  friend class mojo::internal::MessageFragment<Reflector_Ping_ResponseParams_Data>;

  Reflector_Ping_ResponseParams_Data();
  ~Reflector_Ping_ResponseParams_Data() = delete;
};
static_assert(sizeof(Reflector_Ping_ResponseParams_Data) == 16,
              "Bad sizeof(Reflector_Ping_ResponseParams_Data)");
class  Reflector_SyncPing_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> value;

 private:
  friend class mojo::internal::MessageFragment<Reflector_SyncPing_Params_Data>;

  Reflector_SyncPing_Params_Data();
  ~Reflector_SyncPing_Params_Data() = delete;
};
static_assert(sizeof(Reflector_SyncPing_Params_Data) == 16,
              "Bad sizeof(Reflector_SyncPing_Params_Data)");
class  Reflector_SyncPing_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> response;

 private:
  friend class mojo::internal::MessageFragment<Reflector_SyncPing_ResponseParams_Data>;

  Reflector_SyncPing_ResponseParams_Data();
  ~Reflector_SyncPing_ResponseParams_Data() = delete;
};
static_assert(sizeof(Reflector_SyncPing_ResponseParams_Data) == 16,
              "Bad sizeof(Reflector_SyncPing_ResponseParams_Data)");
class  Reflector_Quit_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<Reflector_Quit_Params_Data>;

  Reflector_Quit_Params_Data();
  ~Reflector_Quit_Params_Data() = delete;
};
static_assert(sizeof(Reflector_Quit_Params_Data) == 8,
              "Bad sizeof(Reflector_Quit_Params_Data)");
class  AssociatedInterfaceVendor_GetTestInterface_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::AssociatedEndpointHandle_Data receiver;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<AssociatedInterfaceVendor_GetTestInterface_Params_Data>;

  AssociatedInterfaceVendor_GetTestInterface_Params_Data();
  ~AssociatedInterfaceVendor_GetTestInterface_Params_Data() = delete;
};
static_assert(sizeof(AssociatedInterfaceVendor_GetTestInterface_Params_Data) == 16,
              "Bad sizeof(AssociatedInterfaceVendor_GetTestInterface_Params_Data)");
class  InterfacePassingTestDriver_Init_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<InterfacePassingTestDriver_Init_Params_Data>;

  InterfacePassingTestDriver_Init_Params_Data();
  ~InterfacePassingTestDriver_Init_Params_Data() = delete;
};
static_assert(sizeof(InterfacePassingTestDriver_Init_Params_Data) == 8,
              "Bad sizeof(InterfacePassingTestDriver_Init_Params_Data)");
class  InterfacePassingTestDriver_Init_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<InterfacePassingTestDriver_Init_ResponseParams_Data>;

  InterfacePassingTestDriver_Init_ResponseParams_Data();
  ~InterfacePassingTestDriver_Init_ResponseParams_Data() = delete;
};
static_assert(sizeof(InterfacePassingTestDriver_Init_ResponseParams_Data) == 8,
              "Bad sizeof(InterfacePassingTestDriver_Init_ResponseParams_Data)");
class  InterfacePassingTestDriver_GetPingReceiver_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Handle_Data>> receiver;

 private:
  friend class mojo::internal::MessageFragment<InterfacePassingTestDriver_GetPingReceiver_Params_Data>;

  InterfacePassingTestDriver_GetPingReceiver_Params_Data();
  ~InterfacePassingTestDriver_GetPingReceiver_Params_Data() = delete;
};
static_assert(sizeof(InterfacePassingTestDriver_GetPingReceiver_Params_Data) == 16,
              "Bad sizeof(InterfacePassingTestDriver_GetPingReceiver_Params_Data)");
class  InterfacePassingTestDriver_GetPingReceiver_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<InterfacePassingTestDriver_GetPingReceiver_ResponseParams_Data>;

  InterfacePassingTestDriver_GetPingReceiver_ResponseParams_Data();
  ~InterfacePassingTestDriver_GetPingReceiver_ResponseParams_Data() = delete;
};
static_assert(sizeof(InterfacePassingTestDriver_GetPingReceiver_ResponseParams_Data) == 8,
              "Bad sizeof(InterfacePassingTestDriver_GetPingReceiver_ResponseParams_Data)");
class  InterfacePassingTestDriver_GetAssociatedPingReceiver_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::AssociatedEndpointHandle_Data>> receiver;

 private:
  friend class mojo::internal::MessageFragment<InterfacePassingTestDriver_GetAssociatedPingReceiver_Params_Data>;

  InterfacePassingTestDriver_GetAssociatedPingReceiver_Params_Data();
  ~InterfacePassingTestDriver_GetAssociatedPingReceiver_Params_Data() = delete;
};
static_assert(sizeof(InterfacePassingTestDriver_GetAssociatedPingReceiver_Params_Data) == 16,
              "Bad sizeof(InterfacePassingTestDriver_GetAssociatedPingReceiver_Params_Data)");
class  InterfacePassingTestDriver_GetAssociatedPingReceiver_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<InterfacePassingTestDriver_GetAssociatedPingReceiver_ResponseParams_Data>;

  InterfacePassingTestDriver_GetAssociatedPingReceiver_ResponseParams_Data();
  ~InterfacePassingTestDriver_GetAssociatedPingReceiver_ResponseParams_Data() = delete;
};
static_assert(sizeof(InterfacePassingTestDriver_GetAssociatedPingReceiver_ResponseParams_Data) == 8,
              "Bad sizeof(InterfacePassingTestDriver_GetAssociatedPingReceiver_ResponseParams_Data)");
class  InterfacePassingTestDriver_Quit_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<InterfacePassingTestDriver_Quit_Params_Data>;

  InterfacePassingTestDriver_Quit_Params_Data();
  ~InterfacePassingTestDriver_Quit_Params_Data() = delete;
};
static_assert(sizeof(InterfacePassingTestDriver_Quit_Params_Data) == 8,
              "Bad sizeof(InterfacePassingTestDriver_Quit_Params_Data)");

}  // namespace internal


class SimpleTestDriver_ExpectValue_ParamsDataView {
 public:
  SimpleTestDriver_ExpectValue_ParamsDataView() {}

  SimpleTestDriver_ExpectValue_ParamsDataView(
      internal::SimpleTestDriver_ExpectValue_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t value() const {
    return data_->value;
  }
 private:
  internal::SimpleTestDriver_ExpectValue_Params_Data* data_ = nullptr;
};



class SimpleTestDriver_GetExpectedValue_ParamsDataView {
 public:
  SimpleTestDriver_GetExpectedValue_ParamsDataView() {}

  SimpleTestDriver_GetExpectedValue_ParamsDataView(
      internal::SimpleTestDriver_GetExpectedValue_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SimpleTestDriver_GetExpectedValue_Params_Data* data_ = nullptr;
};



class SimpleTestDriver_GetExpectedValue_ResponseParamsDataView {
 public:
  SimpleTestDriver_GetExpectedValue_ResponseParamsDataView() {}

  SimpleTestDriver_GetExpectedValue_ResponseParamsDataView(
      internal::SimpleTestDriver_GetExpectedValue_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t value() const {
    return data_->value;
  }
 private:
  internal::SimpleTestDriver_GetExpectedValue_ResponseParams_Data* data_ = nullptr;
};



class SimpleTestDriver_RequestValue_ParamsDataView {
 public:
  SimpleTestDriver_RequestValue_ParamsDataView() {}

  SimpleTestDriver_RequestValue_ParamsDataView(
      internal::SimpleTestDriver_RequestValue_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SimpleTestDriver_RequestValue_Params_Data* data_ = nullptr;
};



class SimpleTestDriver_RequestValue_ResponseParamsDataView {
 public:
  SimpleTestDriver_RequestValue_ResponseParamsDataView() {}

  SimpleTestDriver_RequestValue_ResponseParamsDataView(
      internal::SimpleTestDriver_RequestValue_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t value() const {
    return data_->value;
  }
 private:
  internal::SimpleTestDriver_RequestValue_ResponseParams_Data* data_ = nullptr;
};



class SimpleTestDriver_RequestQuit_ParamsDataView {
 public:
  SimpleTestDriver_RequestQuit_ParamsDataView() {}

  SimpleTestDriver_RequestQuit_ParamsDataView(
      internal::SimpleTestDriver_RequestQuit_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SimpleTestDriver_RequestQuit_Params_Data* data_ = nullptr;
};



class SimpleTestDriver_RequestQuit_ResponseParamsDataView {
 public:
  SimpleTestDriver_RequestQuit_ResponseParamsDataView() {}

  SimpleTestDriver_RequestQuit_ResponseParamsDataView(
      internal::SimpleTestDriver_RequestQuit_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SimpleTestDriver_RequestQuit_ResponseParams_Data* data_ = nullptr;
};



class SimpleTestClient_RequestValue_ParamsDataView {
 public:
  SimpleTestClient_RequestValue_ParamsDataView() {}

  SimpleTestClient_RequestValue_ParamsDataView(
      internal::SimpleTestClient_RequestValue_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SimpleTestClient_RequestValue_Params_Data* data_ = nullptr;
};



class SimpleTestClient_RequestValue_ResponseParamsDataView {
 public:
  SimpleTestClient_RequestValue_ResponseParamsDataView() {}

  SimpleTestClient_RequestValue_ResponseParamsDataView(
      internal::SimpleTestClient_RequestValue_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t value() const {
    return data_->value;
  }
 private:
  internal::SimpleTestClient_RequestValue_ResponseParams_Data* data_ = nullptr;
};



class PingReceiver_Ping_ParamsDataView {
 public:
  PingReceiver_Ping_ParamsDataView() {}

  PingReceiver_Ping_ParamsDataView(
      internal::PingReceiver_Ping_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PingReceiver_Ping_Params_Data* data_ = nullptr;
};



class PingReceiver_Ping_ResponseParamsDataView {
 public:
  PingReceiver_Ping_ResponseParamsDataView() {}

  PingReceiver_Ping_ResponseParamsDataView(
      internal::PingReceiver_Ping_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PingReceiver_Ping_ResponseParams_Data* data_ = nullptr;
};



class TestStructPasser_Pass_ParamsDataView {
 public:
  TestStructPasser_Pass_ParamsDataView() {}

  TestStructPasser_Pass_ParamsDataView(
      internal::TestStructPasser_Pass_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetSDataView(
      TestStructDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadS(UserType* output) {
    
    auto* pointer = data_->s.Get();
    return mojo::internal::Deserialize<::IPC::mojom::TestStructDataView>(
        pointer, output, message_);
  }
 private:
  internal::TestStructPasser_Pass_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class IndirectTestDriver_GetPingReceiver_ParamsDataView {
 public:
  IndirectTestDriver_GetPingReceiver_ParamsDataView() {}

  IndirectTestDriver_GetPingReceiver_ParamsDataView(
      internal::IndirectTestDriver_GetPingReceiver_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeReceiver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::IPC::mojom::PingReceiverAssociatedRequestDataView>(
            &data_->receiver, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::IndirectTestDriver_GetPingReceiver_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Reflector_Ping_ParamsDataView {
 public:
  Reflector_Ping_ParamsDataView() {}

  Reflector_Ping_ParamsDataView(
      internal::Reflector_Ping_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetValueDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadValue(UserType* output) {
    
    auto* pointer = data_->value.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::Reflector_Ping_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Reflector_Ping_ResponseParamsDataView {
 public:
  Reflector_Ping_ResponseParamsDataView() {}

  Reflector_Ping_ResponseParamsDataView(
      internal::Reflector_Ping_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetValueDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadValue(UserType* output) {
    
    auto* pointer = data_->value.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::Reflector_Ping_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Reflector_SyncPing_ParamsDataView {
 public:
  Reflector_SyncPing_ParamsDataView() {}

  Reflector_SyncPing_ParamsDataView(
      internal::Reflector_SyncPing_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetValueDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadValue(UserType* output) {
    
    auto* pointer = data_->value.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::Reflector_SyncPing_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Reflector_SyncPing_ResponseParamsDataView {
 public:
  Reflector_SyncPing_ResponseParamsDataView() {}

  Reflector_SyncPing_ResponseParamsDataView(
      internal::Reflector_SyncPing_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResponseDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadResponse(UserType* output) {
    
    auto* pointer = data_->response.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::Reflector_SyncPing_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Reflector_Quit_ParamsDataView {
 public:
  Reflector_Quit_ParamsDataView() {}

  Reflector_Quit_ParamsDataView(
      internal::Reflector_Quit_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::Reflector_Quit_Params_Data* data_ = nullptr;
};



class AssociatedInterfaceVendor_GetTestInterface_ParamsDataView {
 public:
  AssociatedInterfaceVendor_GetTestInterface_ParamsDataView() {}

  AssociatedInterfaceVendor_GetTestInterface_ParamsDataView(
      internal::AssociatedInterfaceVendor_GetTestInterface_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeReceiver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::IPC::mojom::SimpleTestDriverAssociatedRequestDataView>(
            &data_->receiver, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::AssociatedInterfaceVendor_GetTestInterface_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class InterfacePassingTestDriver_Init_ParamsDataView {
 public:
  InterfacePassingTestDriver_Init_ParamsDataView() {}

  InterfacePassingTestDriver_Init_ParamsDataView(
      internal::InterfacePassingTestDriver_Init_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterfacePassingTestDriver_Init_Params_Data* data_ = nullptr;
};



class InterfacePassingTestDriver_Init_ResponseParamsDataView {
 public:
  InterfacePassingTestDriver_Init_ResponseParamsDataView() {}

  InterfacePassingTestDriver_Init_ResponseParamsDataView(
      internal::InterfacePassingTestDriver_Init_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterfacePassingTestDriver_Init_ResponseParams_Data* data_ = nullptr;
};



class InterfacePassingTestDriver_GetPingReceiver_ParamsDataView {
 public:
  InterfacePassingTestDriver_GetPingReceiver_ParamsDataView() {}

  InterfacePassingTestDriver_GetPingReceiver_ParamsDataView(
      internal::InterfacePassingTestDriver_GetPingReceiver_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetReceiverDataView(
      mojo::ArrayDataView<mojo::InterfaceRequestDataView<PingReceiverInterfaceBase>>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadReceiver(UserType* output) {
    
    auto* pointer = data_->receiver.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<mojo::InterfaceRequestDataView<::IPC::mojom::PingReceiverInterfaceBase>>>(
        pointer, output, message_);
  }
 private:
  internal::InterfacePassingTestDriver_GetPingReceiver_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class InterfacePassingTestDriver_GetPingReceiver_ResponseParamsDataView {
 public:
  InterfacePassingTestDriver_GetPingReceiver_ResponseParamsDataView() {}

  InterfacePassingTestDriver_GetPingReceiver_ResponseParamsDataView(
      internal::InterfacePassingTestDriver_GetPingReceiver_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterfacePassingTestDriver_GetPingReceiver_ResponseParams_Data* data_ = nullptr;
};



class InterfacePassingTestDriver_GetAssociatedPingReceiver_ParamsDataView {
 public:
  InterfacePassingTestDriver_GetAssociatedPingReceiver_ParamsDataView() {}

  InterfacePassingTestDriver_GetAssociatedPingReceiver_ParamsDataView(
      internal::InterfacePassingTestDriver_GetAssociatedPingReceiver_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetReceiverDataView(
      mojo::ArrayDataView<PingReceiverAssociatedRequestDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadReceiver(UserType* output) {
    
    auto* pointer = data_->receiver.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::IPC::mojom::PingReceiverAssociatedRequestDataView>>(
        pointer, output, message_);
  }
 private:
  internal::InterfacePassingTestDriver_GetAssociatedPingReceiver_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class InterfacePassingTestDriver_GetAssociatedPingReceiver_ResponseParamsDataView {
 public:
  InterfacePassingTestDriver_GetAssociatedPingReceiver_ResponseParamsDataView() {}

  InterfacePassingTestDriver_GetAssociatedPingReceiver_ResponseParamsDataView(
      internal::InterfacePassingTestDriver_GetAssociatedPingReceiver_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterfacePassingTestDriver_GetAssociatedPingReceiver_ResponseParams_Data* data_ = nullptr;
};



class InterfacePassingTestDriver_Quit_ParamsDataView {
 public:
  InterfacePassingTestDriver_Quit_ParamsDataView() {}

  InterfacePassingTestDriver_Quit_ParamsDataView(
      internal::InterfacePassingTestDriver_Quit_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterfacePassingTestDriver_Quit_Params_Data* data_ = nullptr;
};
























inline void TestStructPasser_Pass_ParamsDataView::GetSDataView(
    TestStructDataView* output) {
  auto pointer = data_->s.Get();
  *output = TestStructDataView(pointer, message_);
}




inline void Reflector_Ping_ParamsDataView::GetValueDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->value.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Reflector_Ping_ResponseParamsDataView::GetValueDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->value.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Reflector_SyncPing_ParamsDataView::GetValueDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->value.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Reflector_SyncPing_ResponseParamsDataView::GetResponseDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->response.Get();
  *output = mojo::StringDataView(pointer, message_);
}










inline void InterfacePassingTestDriver_GetPingReceiver_ParamsDataView::GetReceiverDataView(
    mojo::ArrayDataView<mojo::InterfaceRequestDataView<PingReceiverInterfaceBase>>* output) {
  auto pointer = data_->receiver.Get();
  *output = mojo::ArrayDataView<mojo::InterfaceRequestDataView<PingReceiverInterfaceBase>>(pointer, message_);
}




inline void InterfacePassingTestDriver_GetAssociatedPingReceiver_ParamsDataView::GetReceiverDataView(
    mojo::ArrayDataView<PingReceiverAssociatedRequestDataView>* output) {
  auto pointer = data_->receiver.Get();
  *output = mojo::ArrayDataView<PingReceiverAssociatedRequestDataView>(pointer, message_);
}





}  // namespace mojom
}  // namespace IPC

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // IPC_IPC_TEST_MOJOM_PARAMS_DATA_H_