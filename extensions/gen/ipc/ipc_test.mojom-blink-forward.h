// ipc/ipc_test.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef IPC_IPC_TEST_MOJOM_BLINK_FORWARD_H_
#define IPC_IPC_TEST_MOJOM_BLINK_FORWARD_H_



#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif


namespace IPC {
namespace mojom {
class SimpleTestDriverInterfaceBase;
class SimpleTestClientInterfaceBase;
class PingReceiverInterfaceBase;
class TestStructPasserInterfaceBase;
class IndirectTestDriverInterfaceBase;
class ReflectorInterfaceBase;
class AssociatedInterfaceVendorInterfaceBase;
class InterfacePassingTestDriverInterfaceBase;
}  // namespace IPC
}  // namespace mojom


namespace IPC {
namespace mojom {
namespace blink {
// Aliases for definition in the parent namespace.
using SimpleTestDriverInterfaceBase = SimpleTestDriverInterfaceBase;
using SimpleTestClientInterfaceBase = SimpleTestClientInterfaceBase;
using PingReceiverInterfaceBase = PingReceiverInterfaceBase;
using TestStructPasserInterfaceBase = TestStructPasserInterfaceBase;
using IndirectTestDriverInterfaceBase = IndirectTestDriverInterfaceBase;
using ReflectorInterfaceBase = ReflectorInterfaceBase;
using AssociatedInterfaceVendorInterfaceBase = AssociatedInterfaceVendorInterfaceBase;
using InterfacePassingTestDriverInterfaceBase = InterfacePassingTestDriverInterfaceBase;
class TestStruct;
using TestStructPtr = mojo::InlinedStructPtr<TestStruct>;

class SimpleTestDriver;

// @generated_from: IPC.mojom.SimpleTestDriver
using SimpleTestDriverPtr = mojo::InterfacePtr<SimpleTestDriver>;
using SimpleTestDriverPtrInfo = mojo::InterfacePtrInfo<SimpleTestDriver>;

// @generated_from: IPC.mojom.SimpleTestDriver
using SimpleTestDriverRequest = mojo::InterfaceRequest<SimpleTestDriver>;
using SimpleTestDriverAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<SimpleTestDriver>;

// @generated_from: IPC.mojom.SimpleTestDriver
using SimpleTestDriverAssociatedRequest =
    mojo::AssociatedInterfaceRequest<SimpleTestDriver>;

class SimpleTestClient;

// @generated_from: IPC.mojom.SimpleTestClient
using SimpleTestClientPtr = mojo::InterfacePtr<SimpleTestClient>;
using SimpleTestClientPtrInfo = mojo::InterfacePtrInfo<SimpleTestClient>;

// @generated_from: IPC.mojom.SimpleTestClient
using SimpleTestClientRequest = mojo::InterfaceRequest<SimpleTestClient>;
using SimpleTestClientAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<SimpleTestClient>;

// @generated_from: IPC.mojom.SimpleTestClient
using SimpleTestClientAssociatedRequest =
    mojo::AssociatedInterfaceRequest<SimpleTestClient>;

class PingReceiver;

// @generated_from: IPC.mojom.PingReceiver
using PingReceiverPtr = mojo::InterfacePtr<PingReceiver>;
using PingReceiverPtrInfo = mojo::InterfacePtrInfo<PingReceiver>;

// @generated_from: IPC.mojom.PingReceiver
using PingReceiverRequest = mojo::InterfaceRequest<PingReceiver>;
using PingReceiverAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PingReceiver>;

// @generated_from: IPC.mojom.PingReceiver
using PingReceiverAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PingReceiver>;

class TestStructPasser;

// @generated_from: IPC.mojom.TestStructPasser
using TestStructPasserPtr = mojo::InterfacePtr<TestStructPasser>;
using TestStructPasserPtrInfo = mojo::InterfacePtrInfo<TestStructPasser>;

// @generated_from: IPC.mojom.TestStructPasser
using TestStructPasserRequest = mojo::InterfaceRequest<TestStructPasser>;
using TestStructPasserAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<TestStructPasser>;

// @generated_from: IPC.mojom.TestStructPasser
using TestStructPasserAssociatedRequest =
    mojo::AssociatedInterfaceRequest<TestStructPasser>;

class IndirectTestDriver;

// @generated_from: IPC.mojom.IndirectTestDriver
using IndirectTestDriverPtr = mojo::InterfacePtr<IndirectTestDriver>;
using IndirectTestDriverPtrInfo = mojo::InterfacePtrInfo<IndirectTestDriver>;

// @generated_from: IPC.mojom.IndirectTestDriver
using IndirectTestDriverRequest = mojo::InterfaceRequest<IndirectTestDriver>;
using IndirectTestDriverAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<IndirectTestDriver>;

// @generated_from: IPC.mojom.IndirectTestDriver
using IndirectTestDriverAssociatedRequest =
    mojo::AssociatedInterfaceRequest<IndirectTestDriver>;

class Reflector;

// @generated_from: IPC.mojom.Reflector
using ReflectorPtr = mojo::InterfacePtr<Reflector>;
using ReflectorPtrInfo = mojo::InterfacePtrInfo<Reflector>;

// @generated_from: IPC.mojom.Reflector
using ReflectorRequest = mojo::InterfaceRequest<Reflector>;
using ReflectorAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<Reflector>;

// @generated_from: IPC.mojom.Reflector
using ReflectorAssociatedRequest =
    mojo::AssociatedInterfaceRequest<Reflector>;

class AssociatedInterfaceVendor;

// @generated_from: IPC.mojom.AssociatedInterfaceVendor
using AssociatedInterfaceVendorPtr = mojo::InterfacePtr<AssociatedInterfaceVendor>;
using AssociatedInterfaceVendorPtrInfo = mojo::InterfacePtrInfo<AssociatedInterfaceVendor>;

// @generated_from: IPC.mojom.AssociatedInterfaceVendor
using AssociatedInterfaceVendorRequest = mojo::InterfaceRequest<AssociatedInterfaceVendor>;
using AssociatedInterfaceVendorAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<AssociatedInterfaceVendor>;

// @generated_from: IPC.mojom.AssociatedInterfaceVendor
using AssociatedInterfaceVendorAssociatedRequest =
    mojo::AssociatedInterfaceRequest<AssociatedInterfaceVendor>;

class InterfacePassingTestDriver;

// @generated_from: IPC.mojom.InterfacePassingTestDriver
using InterfacePassingTestDriverPtr = mojo::InterfacePtr<InterfacePassingTestDriver>;
using InterfacePassingTestDriverPtrInfo = mojo::InterfacePtrInfo<InterfacePassingTestDriver>;

// @generated_from: IPC.mojom.InterfacePassingTestDriver
using InterfacePassingTestDriverRequest = mojo::InterfaceRequest<InterfacePassingTestDriver>;
using InterfacePassingTestDriverAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<InterfacePassingTestDriver>;

// @generated_from: IPC.mojom.InterfacePassingTestDriver
using InterfacePassingTestDriverAssociatedRequest =
    mojo::AssociatedInterfaceRequest<InterfacePassingTestDriver>;




}  // namespace blink
}  // namespace mojom
}  // namespace IPC

#endif  // IPC_IPC_TEST_MOJOM_BLINK_FORWARD_H_