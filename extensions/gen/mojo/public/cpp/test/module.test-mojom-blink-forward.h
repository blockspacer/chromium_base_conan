// mojo/public/cpp/test/module.test-mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_CPP_TEST_MODULE_TEST_MOJOM_BLINK_FORWARD_H_
#define MOJO_PUBLIC_CPP_TEST_MODULE_TEST_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif


namespace test_module {

enum class GlobalEnum : int32_t;

enum class Struct_StructEnum : int32_t;

enum class Interface_InterfaceEnum : int32_t;
class InterfaceInterfaceBase;
}  // namespace test_module


namespace test_module {
namespace blink {
// Aliases for definition in the parent namespace.
using GlobalEnum = GlobalEnum;
using InterfaceInterfaceBase = InterfaceInterfaceBase;

// @generated_from: test_module.GlobalConst
extern const char GlobalConst[];
class Struct;
using StructPtr = mojo::InlinedStructPtr<Struct>;

class Union;

typedef mojo::InlinedStructPtr<Union> UnionPtr;

class Interface;

// @generated_from: test_module.Interface
using InterfacePtr = mojo::InterfacePtr<Interface>;
using InterfacePtrInfo = mojo::InterfacePtrInfo<Interface>;

// @generated_from: test_module.Interface
using InterfaceRequest = mojo::InterfaceRequest<Interface>;
using InterfaceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<Interface>;

// @generated_from: test_module.Interface
using InterfaceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<Interface>;




}  // namespace blink
}  // namespace test_module

#endif  // MOJO_PUBLIC_CPP_TEST_MODULE_TEST_MOJOM_BLINK_FORWARD_H_