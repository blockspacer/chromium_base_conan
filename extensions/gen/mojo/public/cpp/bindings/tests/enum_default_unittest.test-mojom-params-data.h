// mojo/public/cpp/bindings/tests/enum_default_unittest.test-mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_CPP_BINDINGS_TESTS_ENUM_DEFAULT_UNITTEST_TEST_MOJOM_PARAMS_DATA_H_
#define MOJO_PUBLIC_CPP_BINDINGS_TESTS_ENUM_DEFAULT_UNITTEST_TEST_MOJOM_PARAMS_DATA_H_

#include "base/macros.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace mojo {
namespace test {
namespace enum_default_unittest {
namespace mojom {
namespace internal {
class  TestInterface_EchoWithDefault_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t in;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<TestInterface_EchoWithDefault_Params_Data>;

  TestInterface_EchoWithDefault_Params_Data();
  ~TestInterface_EchoWithDefault_Params_Data() = delete;
};
static_assert(sizeof(TestInterface_EchoWithDefault_Params_Data) == 16,
              "Bad sizeof(TestInterface_EchoWithDefault_Params_Data)");
class  TestInterface_EchoWithDefault_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t out;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<TestInterface_EchoWithDefault_ResponseParams_Data>;

  TestInterface_EchoWithDefault_ResponseParams_Data();
  ~TestInterface_EchoWithDefault_ResponseParams_Data() = delete;
};
static_assert(sizeof(TestInterface_EchoWithDefault_ResponseParams_Data) == 16,
              "Bad sizeof(TestInterface_EchoWithDefault_ResponseParams_Data)");
class  TestInterface_EchoWithoutDefault_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t in;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<TestInterface_EchoWithoutDefault_Params_Data>;

  TestInterface_EchoWithoutDefault_Params_Data();
  ~TestInterface_EchoWithoutDefault_Params_Data() = delete;
};
static_assert(sizeof(TestInterface_EchoWithoutDefault_Params_Data) == 16,
              "Bad sizeof(TestInterface_EchoWithoutDefault_Params_Data)");
class  TestInterface_EchoWithoutDefault_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t out;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<TestInterface_EchoWithoutDefault_ResponseParams_Data>;

  TestInterface_EchoWithoutDefault_ResponseParams_Data();
  ~TestInterface_EchoWithoutDefault_ResponseParams_Data() = delete;
};
static_assert(sizeof(TestInterface_EchoWithoutDefault_ResponseParams_Data) == 16,
              "Bad sizeof(TestInterface_EchoWithoutDefault_ResponseParams_Data)");
class  TestInterface_EchoStructWithDefault_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::StructWithExtensibleEnumWithDefault_Data> in;

 private:
  friend class mojo::internal::MessageFragment<TestInterface_EchoStructWithDefault_Params_Data>;

  TestInterface_EchoStructWithDefault_Params_Data();
  ~TestInterface_EchoStructWithDefault_Params_Data() = delete;
};
static_assert(sizeof(TestInterface_EchoStructWithDefault_Params_Data) == 16,
              "Bad sizeof(TestInterface_EchoStructWithDefault_Params_Data)");
class  TestInterface_EchoStructWithDefault_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::StructWithExtensibleEnumWithDefault_Data> out;

 private:
  friend class mojo::internal::MessageFragment<TestInterface_EchoStructWithDefault_ResponseParams_Data>;

  TestInterface_EchoStructWithDefault_ResponseParams_Data();
  ~TestInterface_EchoStructWithDefault_ResponseParams_Data() = delete;
};
static_assert(sizeof(TestInterface_EchoStructWithDefault_ResponseParams_Data) == 16,
              "Bad sizeof(TestInterface_EchoStructWithDefault_ResponseParams_Data)");
class  TestInterface_EchoStructWithoutDefault_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::StructWithExtensibleEnumWithoutDefault_Data> in;

 private:
  friend class mojo::internal::MessageFragment<TestInterface_EchoStructWithoutDefault_Params_Data>;

  TestInterface_EchoStructWithoutDefault_Params_Data();
  ~TestInterface_EchoStructWithoutDefault_Params_Data() = delete;
};
static_assert(sizeof(TestInterface_EchoStructWithoutDefault_Params_Data) == 16,
              "Bad sizeof(TestInterface_EchoStructWithoutDefault_Params_Data)");
class  TestInterface_EchoStructWithoutDefault_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::StructWithExtensibleEnumWithoutDefault_Data> out;

 private:
  friend class mojo::internal::MessageFragment<TestInterface_EchoStructWithoutDefault_ResponseParams_Data>;

  TestInterface_EchoStructWithoutDefault_ResponseParams_Data();
  ~TestInterface_EchoStructWithoutDefault_ResponseParams_Data() = delete;
};
static_assert(sizeof(TestInterface_EchoStructWithoutDefault_ResponseParams_Data) == 16,
              "Bad sizeof(TestInterface_EchoStructWithoutDefault_ResponseParams_Data)");
class  TestInterface_EchoUnionWithDefault_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  internal::UnionWithExtensibleEnumWithDefault_Data in;

 private:
  friend class mojo::internal::MessageFragment<TestInterface_EchoUnionWithDefault_Params_Data>;

  TestInterface_EchoUnionWithDefault_Params_Data();
  ~TestInterface_EchoUnionWithDefault_Params_Data() = delete;
};
static_assert(sizeof(TestInterface_EchoUnionWithDefault_Params_Data) == 24,
              "Bad sizeof(TestInterface_EchoUnionWithDefault_Params_Data)");
class  TestInterface_EchoUnionWithDefault_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  internal::UnionWithExtensibleEnumWithDefault_Data out;

 private:
  friend class mojo::internal::MessageFragment<TestInterface_EchoUnionWithDefault_ResponseParams_Data>;

  TestInterface_EchoUnionWithDefault_ResponseParams_Data();
  ~TestInterface_EchoUnionWithDefault_ResponseParams_Data() = delete;
};
static_assert(sizeof(TestInterface_EchoUnionWithDefault_ResponseParams_Data) == 24,
              "Bad sizeof(TestInterface_EchoUnionWithDefault_ResponseParams_Data)");
class  TestInterface_EchoUnionWithoutDefault_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  internal::UnionWithExtensibleEnumWithoutDefault_Data in;

 private:
  friend class mojo::internal::MessageFragment<TestInterface_EchoUnionWithoutDefault_Params_Data>;

  TestInterface_EchoUnionWithoutDefault_Params_Data();
  ~TestInterface_EchoUnionWithoutDefault_Params_Data() = delete;
};
static_assert(sizeof(TestInterface_EchoUnionWithoutDefault_Params_Data) == 24,
              "Bad sizeof(TestInterface_EchoUnionWithoutDefault_Params_Data)");
class  TestInterface_EchoUnionWithoutDefault_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  internal::UnionWithExtensibleEnumWithoutDefault_Data out;

 private:
  friend class mojo::internal::MessageFragment<TestInterface_EchoUnionWithoutDefault_ResponseParams_Data>;

  TestInterface_EchoUnionWithoutDefault_ResponseParams_Data();
  ~TestInterface_EchoUnionWithoutDefault_ResponseParams_Data() = delete;
};
static_assert(sizeof(TestInterface_EchoUnionWithoutDefault_ResponseParams_Data) == 24,
              "Bad sizeof(TestInterface_EchoUnionWithoutDefault_ResponseParams_Data)");

}  // namespace internal


class TestInterface_EchoWithDefault_ParamsDataView {
 public:
  TestInterface_EchoWithDefault_ParamsDataView() {}

  TestInterface_EchoWithDefault_ParamsDataView(
      internal::TestInterface_EchoWithDefault_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadIn(UserType* output) const {
    auto data_value = data_->in;
    return mojo::internal::Deserialize<::mojo::test::enum_default_unittest::mojom::ExtensibleEnumWithDefault>(
        data_value, output);
  }
  ExtensibleEnumWithDefault in() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::mojo::test::enum_default_unittest::mojom::ExtensibleEnumWithDefault>(data_->in));
  }
 private:
  internal::TestInterface_EchoWithDefault_Params_Data* data_ = nullptr;
};



class TestInterface_EchoWithDefault_ResponseParamsDataView {
 public:
  TestInterface_EchoWithDefault_ResponseParamsDataView() {}

  TestInterface_EchoWithDefault_ResponseParamsDataView(
      internal::TestInterface_EchoWithDefault_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadOut(UserType* output) const {
    auto data_value = data_->out;
    return mojo::internal::Deserialize<::mojo::test::enum_default_unittest::mojom::ExtensibleEnumWithDefault>(
        data_value, output);
  }
  ExtensibleEnumWithDefault out() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::mojo::test::enum_default_unittest::mojom::ExtensibleEnumWithDefault>(data_->out));
  }
 private:
  internal::TestInterface_EchoWithDefault_ResponseParams_Data* data_ = nullptr;
};



class TestInterface_EchoWithoutDefault_ParamsDataView {
 public:
  TestInterface_EchoWithoutDefault_ParamsDataView() {}

  TestInterface_EchoWithoutDefault_ParamsDataView(
      internal::TestInterface_EchoWithoutDefault_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadIn(UserType* output) const {
    auto data_value = data_->in;
    return mojo::internal::Deserialize<::mojo::test::enum_default_unittest::mojom::ExtensibleEnumWithoutDefault>(
        data_value, output);
  }
  ExtensibleEnumWithoutDefault in() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::mojo::test::enum_default_unittest::mojom::ExtensibleEnumWithoutDefault>(data_->in));
  }
 private:
  internal::TestInterface_EchoWithoutDefault_Params_Data* data_ = nullptr;
};



class TestInterface_EchoWithoutDefault_ResponseParamsDataView {
 public:
  TestInterface_EchoWithoutDefault_ResponseParamsDataView() {}

  TestInterface_EchoWithoutDefault_ResponseParamsDataView(
      internal::TestInterface_EchoWithoutDefault_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadOut(UserType* output) const {
    auto data_value = data_->out;
    return mojo::internal::Deserialize<::mojo::test::enum_default_unittest::mojom::ExtensibleEnumWithoutDefault>(
        data_value, output);
  }
  ExtensibleEnumWithoutDefault out() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::mojo::test::enum_default_unittest::mojom::ExtensibleEnumWithoutDefault>(data_->out));
  }
 private:
  internal::TestInterface_EchoWithoutDefault_ResponseParams_Data* data_ = nullptr;
};



class TestInterface_EchoStructWithDefault_ParamsDataView {
 public:
  TestInterface_EchoStructWithDefault_ParamsDataView() {}

  TestInterface_EchoStructWithDefault_ParamsDataView(
      internal::TestInterface_EchoStructWithDefault_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetInDataView(
      StructWithExtensibleEnumWithDefaultDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadIn(UserType* output) {
    
    auto* pointer = data_->in.Get();
    return mojo::internal::Deserialize<::mojo::test::enum_default_unittest::mojom::StructWithExtensibleEnumWithDefaultDataView>(
        pointer, output, message_);
  }
 private:
  internal::TestInterface_EchoStructWithDefault_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class TestInterface_EchoStructWithDefault_ResponseParamsDataView {
 public:
  TestInterface_EchoStructWithDefault_ResponseParamsDataView() {}

  TestInterface_EchoStructWithDefault_ResponseParamsDataView(
      internal::TestInterface_EchoStructWithDefault_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetOutDataView(
      StructWithExtensibleEnumWithDefaultDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadOut(UserType* output) {
    
    auto* pointer = data_->out.Get();
    return mojo::internal::Deserialize<::mojo::test::enum_default_unittest::mojom::StructWithExtensibleEnumWithDefaultDataView>(
        pointer, output, message_);
  }
 private:
  internal::TestInterface_EchoStructWithDefault_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class TestInterface_EchoStructWithoutDefault_ParamsDataView {
 public:
  TestInterface_EchoStructWithoutDefault_ParamsDataView() {}

  TestInterface_EchoStructWithoutDefault_ParamsDataView(
      internal::TestInterface_EchoStructWithoutDefault_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetInDataView(
      StructWithExtensibleEnumWithoutDefaultDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadIn(UserType* output) {
    
    auto* pointer = data_->in.Get();
    return mojo::internal::Deserialize<::mojo::test::enum_default_unittest::mojom::StructWithExtensibleEnumWithoutDefaultDataView>(
        pointer, output, message_);
  }
 private:
  internal::TestInterface_EchoStructWithoutDefault_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class TestInterface_EchoStructWithoutDefault_ResponseParamsDataView {
 public:
  TestInterface_EchoStructWithoutDefault_ResponseParamsDataView() {}

  TestInterface_EchoStructWithoutDefault_ResponseParamsDataView(
      internal::TestInterface_EchoStructWithoutDefault_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetOutDataView(
      StructWithExtensibleEnumWithoutDefaultDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadOut(UserType* output) {
    
    auto* pointer = data_->out.Get();
    return mojo::internal::Deserialize<::mojo::test::enum_default_unittest::mojom::StructWithExtensibleEnumWithoutDefaultDataView>(
        pointer, output, message_);
  }
 private:
  internal::TestInterface_EchoStructWithoutDefault_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class TestInterface_EchoUnionWithDefault_ParamsDataView {
 public:
  TestInterface_EchoUnionWithDefault_ParamsDataView() {}

  TestInterface_EchoUnionWithDefault_ParamsDataView(
      internal::TestInterface_EchoUnionWithDefault_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetInDataView(
      UnionWithExtensibleEnumWithDefaultDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadIn(UserType* output) {
    
    auto* pointer = !data_->in.is_null() ? &data_->in : nullptr;
    return mojo::internal::Deserialize<::mojo::test::enum_default_unittest::mojom::UnionWithExtensibleEnumWithDefaultDataView>(
        pointer, output, message_);
  }
 private:
  internal::TestInterface_EchoUnionWithDefault_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class TestInterface_EchoUnionWithDefault_ResponseParamsDataView {
 public:
  TestInterface_EchoUnionWithDefault_ResponseParamsDataView() {}

  TestInterface_EchoUnionWithDefault_ResponseParamsDataView(
      internal::TestInterface_EchoUnionWithDefault_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetOutDataView(
      UnionWithExtensibleEnumWithDefaultDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadOut(UserType* output) {
    
    auto* pointer = !data_->out.is_null() ? &data_->out : nullptr;
    return mojo::internal::Deserialize<::mojo::test::enum_default_unittest::mojom::UnionWithExtensibleEnumWithDefaultDataView>(
        pointer, output, message_);
  }
 private:
  internal::TestInterface_EchoUnionWithDefault_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class TestInterface_EchoUnionWithoutDefault_ParamsDataView {
 public:
  TestInterface_EchoUnionWithoutDefault_ParamsDataView() {}

  TestInterface_EchoUnionWithoutDefault_ParamsDataView(
      internal::TestInterface_EchoUnionWithoutDefault_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetInDataView(
      UnionWithExtensibleEnumWithoutDefaultDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadIn(UserType* output) {
    
    auto* pointer = !data_->in.is_null() ? &data_->in : nullptr;
    return mojo::internal::Deserialize<::mojo::test::enum_default_unittest::mojom::UnionWithExtensibleEnumWithoutDefaultDataView>(
        pointer, output, message_);
  }
 private:
  internal::TestInterface_EchoUnionWithoutDefault_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class TestInterface_EchoUnionWithoutDefault_ResponseParamsDataView {
 public:
  TestInterface_EchoUnionWithoutDefault_ResponseParamsDataView() {}

  TestInterface_EchoUnionWithoutDefault_ResponseParamsDataView(
      internal::TestInterface_EchoUnionWithoutDefault_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetOutDataView(
      UnionWithExtensibleEnumWithoutDefaultDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadOut(UserType* output) {
    
    auto* pointer = !data_->out.is_null() ? &data_->out : nullptr;
    return mojo::internal::Deserialize<::mojo::test::enum_default_unittest::mojom::UnionWithExtensibleEnumWithoutDefaultDataView>(
        pointer, output, message_);
  }
 private:
  internal::TestInterface_EchoUnionWithoutDefault_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};










inline void TestInterface_EchoStructWithDefault_ParamsDataView::GetInDataView(
    StructWithExtensibleEnumWithDefaultDataView* output) {
  auto pointer = data_->in.Get();
  *output = StructWithExtensibleEnumWithDefaultDataView(pointer, message_);
}


inline void TestInterface_EchoStructWithDefault_ResponseParamsDataView::GetOutDataView(
    StructWithExtensibleEnumWithDefaultDataView* output) {
  auto pointer = data_->out.Get();
  *output = StructWithExtensibleEnumWithDefaultDataView(pointer, message_);
}


inline void TestInterface_EchoStructWithoutDefault_ParamsDataView::GetInDataView(
    StructWithExtensibleEnumWithoutDefaultDataView* output) {
  auto pointer = data_->in.Get();
  *output = StructWithExtensibleEnumWithoutDefaultDataView(pointer, message_);
}


inline void TestInterface_EchoStructWithoutDefault_ResponseParamsDataView::GetOutDataView(
    StructWithExtensibleEnumWithoutDefaultDataView* output) {
  auto pointer = data_->out.Get();
  *output = StructWithExtensibleEnumWithoutDefaultDataView(pointer, message_);
}


inline void TestInterface_EchoUnionWithDefault_ParamsDataView::GetInDataView(
    UnionWithExtensibleEnumWithDefaultDataView* output) {
  auto pointer = &data_->in;
  *output = UnionWithExtensibleEnumWithDefaultDataView(pointer, message_);
}


inline void TestInterface_EchoUnionWithDefault_ResponseParamsDataView::GetOutDataView(
    UnionWithExtensibleEnumWithDefaultDataView* output) {
  auto pointer = &data_->out;
  *output = UnionWithExtensibleEnumWithDefaultDataView(pointer, message_);
}


inline void TestInterface_EchoUnionWithoutDefault_ParamsDataView::GetInDataView(
    UnionWithExtensibleEnumWithoutDefaultDataView* output) {
  auto pointer = &data_->in;
  *output = UnionWithExtensibleEnumWithoutDefaultDataView(pointer, message_);
}


inline void TestInterface_EchoUnionWithoutDefault_ResponseParamsDataView::GetOutDataView(
    UnionWithExtensibleEnumWithoutDefaultDataView* output) {
  auto pointer = &data_->out;
  *output = UnionWithExtensibleEnumWithoutDefaultDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace enum_default_unittest
}  // namespace test
}  // namespace mojo

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // MOJO_PUBLIC_CPP_BINDINGS_TESTS_ENUM_DEFAULT_UNITTEST_TEST_MOJOM_PARAMS_DATA_H_