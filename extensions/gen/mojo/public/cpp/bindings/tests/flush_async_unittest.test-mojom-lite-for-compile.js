// mojo/public/cpp/bindings/tests/flush_async_unittest.test-mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');







goog.provide('mojo.test.flushAsyncUnittest.mojom.Writer');
goog.provide('mojo.test.flushAsyncUnittest.mojom.WriterReceiver');
goog.provide('mojo.test.flushAsyncUnittest.mojom.WriterCallbackRouter');
goog.provide('mojo.test.flushAsyncUnittest.mojom.WriterInterface');
goog.provide('mojo.test.flushAsyncUnittest.mojom.WriterRemote');
goog.provide('mojo.test.flushAsyncUnittest.mojom.WriterPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.WriterPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        mojo.test.flushAsyncUnittest.mojom.Writer.$interfaceName,
        scope);
  }
};

/** @interface */
mojo.test.flushAsyncUnittest.mojom.WriterInterface = class {
  
  /**
   * @param { !string } key
   * @param { !string } value
   */

  put(key, value) {}
};

/**
 * @export
 * @implements { mojo.test.flushAsyncUnittest.mojom.WriterInterface }
 */
mojo.test.flushAsyncUnittest.mojom.WriterRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!mojo.test.flushAsyncUnittest.mojom.WriterPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          mojo.test.flushAsyncUnittest.mojom.WriterPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!mojo.test.flushAsyncUnittest.mojom.WriterPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !string } key
   * @param { !string } value
   */

  put(
      key,
      value) {
    this.proxy.sendMessage(
        763846348,
        mojo.test.flushAsyncUnittest.mojom.Writer_Put_ParamsSpec.$,
        null,
        [
          key,
          value
        ]);
  }
};

/**
 * An object which receives request messages for the Writer
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.WriterReceiver = class {
  /**
   * @param {!mojo.test.flushAsyncUnittest.mojom.WriterInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!mojo.test.flushAsyncUnittest.mojom.WriterRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        mojo.test.flushAsyncUnittest.mojom.WriterRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.flushAsyncUnittest.mojom.WriterRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        763846348,
        mojo.test.flushAsyncUnittest.mojom.Writer_Put_ParamsSpec.$,
        null,
        impl.put.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
mojo.test.flushAsyncUnittest.mojom.Writer = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "mojo.test.flush_async_unittest.mojom.Writer";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!mojo.test.flushAsyncUnittest.mojom.WriterRemote}
   * @export
   */
  static getRemote() {
    let remote = new mojo.test.flushAsyncUnittest.mojom.WriterRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the Writer
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.WriterCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      mojo.test.flushAsyncUnittest.mojom.WriterRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.flushAsyncUnittest.mojom.WriterRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.put =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        763846348,
        mojo.test.flushAsyncUnittest.mojom.Writer_Put_ParamsSpec.$,
        null,
        this.put.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClient');
goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientReceiver');
goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientCallbackRouter');
goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientInterface');
goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientRemote');
goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClient.$interfaceName,
        scope);
  }
};

/** @interface */
mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientInterface = class {
  
  /**
   */

  onSnapshotTaken() {}
};

/**
 * @export
 * @implements { mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientInterface }
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   */

  onSnapshotTaken() {
    this.proxy.sendMessage(
        726138006,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClient_OnSnapshotTaken_ParamsSpec.$,
        null,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the KeyValueStoreClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientReceiver = class {
  /**
   * @param {!mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        726138006,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClient_OnSnapshotTaken_ParamsSpec.$,
        null,
        impl.onSnapshotTaken.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "mojo.test.flush_async_unittest.mojom.KeyValueStoreClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the KeyValueStoreClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onSnapshotTaken =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        726138006,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClient_OnSnapshotTaken_ParamsSpec.$,
        null,
        this.onSnapshotTaken.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStore');
goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStoreReceiver');
goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStoreCallbackRouter');
goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStoreInterface');
goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStoreRemote');
goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStorePendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStorePendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStore.$interfaceName,
        scope);
  }
};

/** @interface */
mojo.test.flushAsyncUnittest.mojom.KeyValueStoreInterface = class {
  
  /**
   * @param { !mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientRemote } client
   */

  setClient(client) {}
  
  /**
   * @param { !mojo.test.flushAsyncUnittest.mojom.WriterPendingReceiver } receiver
   */

  bindWriter(receiver) {}
  
  /**
   * @return {!Promise<{
        entries: !Object<!string, !string>,
   *  }>}
   */

  getSnapshot() {}
};

/**
 * @export
 * @implements { mojo.test.flushAsyncUnittest.mojom.KeyValueStoreInterface }
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStoreRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!mojo.test.flushAsyncUnittest.mojom.KeyValueStorePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          mojo.test.flushAsyncUnittest.mojom.KeyValueStorePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!mojo.test.flushAsyncUnittest.mojom.KeyValueStorePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientRemote } client
   */

  setClient(
      client) {
    this.proxy.sendMessage(
        688579046,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStore_SetClient_ParamsSpec.$,
        null,
        [
          client
        ]);
  }

  
  /**
   * @param { !mojo.test.flushAsyncUnittest.mojom.WriterPendingReceiver } receiver
   */

  bindWriter(
      receiver) {
    this.proxy.sendMessage(
        1549126462,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStore_BindWriter_ParamsSpec.$,
        null,
        [
          receiver
        ]);
  }

  
  /**
   * @return {!Promise<{
        entries: !Object<!string, !string>,
   *  }>}
   */

  getSnapshot() {
    return this.proxy.sendMessage(
        671282423,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ParamsSpec.$,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ResponseParamsSpec.$,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the KeyValueStore
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStoreReceiver = class {
  /**
   * @param {!mojo.test.flushAsyncUnittest.mojom.KeyValueStoreInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!mojo.test.flushAsyncUnittest.mojom.KeyValueStoreRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        mojo.test.flushAsyncUnittest.mojom.KeyValueStoreRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.flushAsyncUnittest.mojom.KeyValueStoreRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        688579046,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStore_SetClient_ParamsSpec.$,
        null,
        impl.setClient.bind(impl));
    this.helper_internal_.registerHandler(
        1549126462,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStore_BindWriter_ParamsSpec.$,
        null,
        impl.bindWriter.bind(impl));
    this.helper_internal_.registerHandler(
        671282423,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ParamsSpec.$,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ResponseParamsSpec.$,
        impl.getSnapshot.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStore = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "mojo.test.flush_async_unittest.mojom.KeyValueStore";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!mojo.test.flushAsyncUnittest.mojom.KeyValueStoreRemote}
   * @export
   */
  static getRemote() {
    let remote = new mojo.test.flushAsyncUnittest.mojom.KeyValueStoreRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the KeyValueStore
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStoreCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      mojo.test.flushAsyncUnittest.mojom.KeyValueStoreRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.flushAsyncUnittest.mojom.KeyValueStoreRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setClient =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        688579046,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStore_SetClient_ParamsSpec.$,
        null,
        this.setClient.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.bindWriter =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1549126462,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStore_BindWriter_ParamsSpec.$,
        null,
        this.bindWriter.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getSnapshot =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        671282423,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ParamsSpec.$,
        mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ResponseParamsSpec.$,
        this.getSnapshot.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('mojo.test.flushAsyncUnittest.mojom.Pinger');
goog.provide('mojo.test.flushAsyncUnittest.mojom.PingerReceiver');
goog.provide('mojo.test.flushAsyncUnittest.mojom.PingerCallbackRouter');
goog.provide('mojo.test.flushAsyncUnittest.mojom.PingerInterface');
goog.provide('mojo.test.flushAsyncUnittest.mojom.PingerRemote');
goog.provide('mojo.test.flushAsyncUnittest.mojom.PingerPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.PingerPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        mojo.test.flushAsyncUnittest.mojom.Pinger.$interfaceName,
        scope);
  }
};

/** @interface */
mojo.test.flushAsyncUnittest.mojom.PingerInterface = class {
  
  /**
   * @return {!Promise}
   */

  ping() {}
};

/**
 * @export
 * @implements { mojo.test.flushAsyncUnittest.mojom.PingerInterface }
 */
mojo.test.flushAsyncUnittest.mojom.PingerRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!mojo.test.flushAsyncUnittest.mojom.PingerPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          mojo.test.flushAsyncUnittest.mojom.PingerPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!mojo.test.flushAsyncUnittest.mojom.PingerPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise}
   */

  ping() {
    return this.proxy.sendMessage(
        773139529,
        mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ParamsSpec.$,
        mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ResponseParamsSpec.$,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the Pinger
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.PingerReceiver = class {
  /**
   * @param {!mojo.test.flushAsyncUnittest.mojom.PingerInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!mojo.test.flushAsyncUnittest.mojom.PingerRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        mojo.test.flushAsyncUnittest.mojom.PingerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.flushAsyncUnittest.mojom.PingerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        773139529,
        mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ParamsSpec.$,
        mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ResponseParamsSpec.$,
        impl.ping.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
mojo.test.flushAsyncUnittest.mojom.Pinger = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "mojo.test.flush_async_unittest.mojom.Pinger";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!mojo.test.flushAsyncUnittest.mojom.PingerRemote}
   * @export
   */
  static getRemote() {
    let remote = new mojo.test.flushAsyncUnittest.mojom.PingerRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the Pinger
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.PingerCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      mojo.test.flushAsyncUnittest.mojom.PingerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.flushAsyncUnittest.mojom.PingerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.ping =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        773139529,
        mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ParamsSpec.$,
        mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ResponseParamsSpec.$,
        this.ping.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('mojo.test.flushAsyncUnittest.mojom.Writer_Put_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.Writer_Put_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClient_OnSnapshotTaken_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClient_OnSnapshotTaken_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStore_SetClient_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStore_SetClient_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStore_BindWriter_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStore_BindWriter_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    mojo.test.flushAsyncUnittest.mojom.Writer_Put_ParamsSpec.$,
    'Writer_Put_Params',
    [
      mojo.internal.StructField(
        'key', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'value', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('mojo.test.flushAsyncUnittest.mojom.Writer_Put_Params');

/** @record */
mojo.test.flushAsyncUnittest.mojom.Writer_Put_Params = class {
  constructor() {
    /** @export { !string } */
    this.key;
    /** @export { !string } */
    this.value;
  }
};




mojo.internal.Struct(
    mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClient_OnSnapshotTaken_ParamsSpec.$,
    'KeyValueStoreClient_OnSnapshotTaken_Params',
    [
    ],
    [[0, 8],]);



goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClient_OnSnapshotTaken_Params');

/** @record */
mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClient_OnSnapshotTaken_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mojo.test.flushAsyncUnittest.mojom.KeyValueStore_SetClient_ParamsSpec.$,
    'KeyValueStore_SetClient_Params',
    [
      mojo.internal.StructField(
        'client', 0,
        0,
        mojo.internal.InterfaceProxy(mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientRemote),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStore_SetClient_Params');

/** @record */
mojo.test.flushAsyncUnittest.mojom.KeyValueStore_SetClient_Params = class {
  constructor() {
    /** @export { !mojo.test.flushAsyncUnittest.mojom.KeyValueStoreClientRemote } */
    this.client;
  }
};




mojo.internal.Struct(
    mojo.test.flushAsyncUnittest.mojom.KeyValueStore_BindWriter_ParamsSpec.$,
    'KeyValueStore_BindWriter_Params',
    [
      mojo.internal.StructField(
        'receiver', 0,
        0,
        mojo.internal.InterfaceRequest(mojo.test.flushAsyncUnittest.mojom.WriterPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStore_BindWriter_Params');

/** @record */
mojo.test.flushAsyncUnittest.mojom.KeyValueStore_BindWriter_Params = class {
  constructor() {
    /** @export { !mojo.test.flushAsyncUnittest.mojom.WriterPendingReceiver } */
    this.receiver;
  }
};




mojo.internal.Struct(
    mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ParamsSpec.$,
    'KeyValueStore_GetSnapshot_Params',
    [
    ],
    [[0, 8],]);



goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_Params');

/** @record */
mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ResponseParamsSpec.$,
    'KeyValueStore_GetSnapshot_ResponseParams',
    [
      mojo.internal.StructField(
        'entries', 0,
        0,
        mojo.internal.Map(mojo.internal.String, mojo.internal.String, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ResponseParams');

/** @record */
mojo.test.flushAsyncUnittest.mojom.KeyValueStore_GetSnapshot_ResponseParams = class {
  constructor() {
    /** @export { !Object<!string, !string> } */
    this.entries;
  }
};




mojo.internal.Struct(
    mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ParamsSpec.$,
    'Pinger_Ping_Params',
    [
    ],
    [[0, 8],]);



goog.provide('mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_Params');

/** @record */
mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ResponseParamsSpec.$,
    'Pinger_Ping_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ResponseParams');

/** @record */
mojo.test.flushAsyncUnittest.mojom.Pinger_Ping_ResponseParams = class {
  constructor() {
  }
};


