// mojo/public/cpp/bindings/tests/idle_tracking_unittest.test-mojom-blink-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_CPP_BINDINGS_TESTS_IDLE_TRACKING_UNITTEST_TEST_MOJOM_BLINK_TEST_UTILS_H_
#define MOJO_PUBLIC_CPP_BINDINGS_TESTS_IDLE_TRACKING_UNITTEST_TEST_MOJOM_BLINK_TEST_UTILS_H_

#include "mojo/public/cpp/bindings/tests/idle_tracking_unittest.test-mojom-blink.h"


namespace mojo {
namespace test {
namespace idle_tracking_unittest {
namespace mojom {
namespace blink {


class  TestServiceInterceptorForTesting : public TestService {
  virtual TestService* GetForwardingInterface() = 0;
  void Ping() override;
  void PingPong(PingPongCallback callback) override;
  void BindKeepAlive(::mojo::PendingReceiver<KeepAlive> receiver) override;
};
class  TestServiceAsyncWaiter {
 public:
  explicit TestServiceAsyncWaiter(TestService* proxy);
  ~TestServiceAsyncWaiter();
  void PingPong(
      );

 private:
  TestService* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(TestServiceAsyncWaiter);
};


class  KeepAliveInterceptorForTesting : public KeepAlive {
  virtual KeepAlive* GetForwardingInterface() = 0;
};
class  KeepAliveAsyncWaiter {
 public:
  explicit KeepAliveAsyncWaiter(KeepAlive* proxy);
  ~KeepAliveAsyncWaiter();

 private:
  KeepAlive* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(KeepAliveAsyncWaiter);
};




}  // namespace blink
}  // namespace mojom
}  // namespace idle_tracking_unittest
}  // namespace test
}  // namespace mojo

#endif  // MOJO_PUBLIC_CPP_BINDINGS_TESTS_IDLE_TRACKING_UNITTEST_TEST_MOJOM_BLINK_TEST_UTILS_H_