// mojo/public/cpp/bindings/tests/module_to_downgrade.test-mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_CPP_BINDINGS_TESTS_MODULE_TO_DOWNGRADE_TEST_MOJOM_TEST_UTILS_H_
#define MOJO_PUBLIC_CPP_BINDINGS_TESTS_MODULE_TO_DOWNGRADE_TEST_MOJOM_TEST_UTILS_H_

#include "mojo/public/cpp/bindings/tests/module_to_downgrade.test-mojom.h"


namespace mojo {
namespace test {
namespace mojom_types_downgrader_unittest {
namespace mojom {


class  FooInterceptorForTesting : public Foo {
  virtual Foo* GetForwardingInterface() = 0;
  void DummyMethod() override;
};
class  FooAsyncWaiter {
 public:
  explicit FooAsyncWaiter(Foo* proxy);
  ~FooAsyncWaiter();

 private:
  Foo* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(FooAsyncWaiter);
};


class  DowngradedTestInterfaceInterceptorForTesting : public DowngradedTestInterface {
  virtual DowngradedTestInterface* GetForwardingInterface() = 0;
  void InterfaceRequest(FooRequest request) override;
  void InterfacePtr(FooPtr ptr) override;
  void AssociatedInterfacePtrInfo(FooAssociatedPtrInfo associated_ptr_info) override;
  void AssociatedInterfaceRequest(FooAssociatedRequest associated_request) override;
  void PendingReceiver(FooRequest receiver) override;
  void PendingRemote(FooPtr remote) override;
  void PendingAssociatedReceiver(FooAssociatedRequest associated_remote) override;
  void PendingAssociatedRemote(FooAssociatedPtrInfo associated_receiver) override;
  void MultipleParams2(FooPtr remote, FooRequest receiver) override;
  void MultipleParams3(FooPtr remote, FooRequest receiver, FooAssociatedPtrInfo associated_remote) override;
  void MultipleParams4(FooPtr remote, FooRequest receiver, FooAssociatedPtrInfo associated_remote, FooAssociatedRequest associated_receiver) override;
  void MethodWithResponseCallbackOneLine(FooPtr data, MethodWithResponseCallbackOneLineCallback callback) override;
  void MethodWithResponseCallbackTwoLines(FooPtr data, MethodWithResponseCallbackTwoLinesCallback callback) override;
  void OddSpaces(FooPtr remote, FooRequest receiver) override;
  void OddSpacesAndLineBreak(FooPtr remote, FooRequest receiver) override;
};
class  DowngradedTestInterfaceAsyncWaiter {
 public:
  explicit DowngradedTestInterfaceAsyncWaiter(DowngradedTestInterface* proxy);
  ~DowngradedTestInterfaceAsyncWaiter();
  void MethodWithResponseCallbackOneLine(
      FooPtr data);
  void MethodWithResponseCallbackTwoLines(
      FooPtr data, FooRequest* out_receiver);

 private:
  DowngradedTestInterface* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(DowngradedTestInterfaceAsyncWaiter);
};




}  // namespace mojom
}  // namespace mojom_types_downgrader_unittest
}  // namespace test
}  // namespace mojo

#endif  // MOJO_PUBLIC_CPP_BINDINGS_TESTS_MODULE_TO_DOWNGRADE_TEST_MOJOM_TEST_UTILS_H_