// mojo/public/cpp/bindings/tests/module_to_downgrade.test-mojom-shared.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "mojo/public/cpp/bindings/tests/module_to_downgrade.test-mojom-shared.h"

#include <utility>

#include "base/stl_util.h"  // for base::size()
#include "base/strings/stringprintf.h"
#include "mojo/public/cpp/bindings/lib/validate_params.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"
#include "mojo/public/cpp/bindings/lib/validation_errors.h"
#include "mojo/public/cpp/bindings/lib/validation_util.h"
#include "third_party/perfetto/include/perfetto/tracing/traced_value.h"

#include "mojo/public/cpp/bindings/tests/module_to_downgrade.test-mojom-params-data.h"
namespace mojo {
namespace test {
namespace mojom_types_downgrader_unittest {
namespace mojom {

namespace internal {


// static
bool Foo_DummyMethod_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const Foo_DummyMethod_Params_Data* object = static_cast<const Foo_DummyMethod_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  return true;
}

Foo_DummyMethod_Params_Data::Foo_DummyMethod_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_InterfaceRequest_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_InterfaceRequest_Params_Data* object = static_cast<const DowngradedTestInterface_InterfaceRequest_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->request, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->request,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_InterfaceRequest_Params_Data::DowngradedTestInterface_InterfaceRequest_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_InterfacePtr_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_InterfacePtr_Params_Data* object = static_cast<const DowngradedTestInterface_InterfacePtr_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->ptr, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->ptr,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_InterfacePtr_Params_Data::DowngradedTestInterface_InterfacePtr_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_AssociatedInterfacePtrInfo_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_AssociatedInterfacePtrInfo_Params_Data* object = static_cast<const DowngradedTestInterface_AssociatedInterfacePtrInfo_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->associated_ptr_info, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->associated_ptr_info,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_AssociatedInterfacePtrInfo_Params_Data::DowngradedTestInterface_AssociatedInterfacePtrInfo_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_AssociatedInterfaceRequest_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_AssociatedInterfaceRequest_Params_Data* object = static_cast<const DowngradedTestInterface_AssociatedInterfaceRequest_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->associated_request, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->associated_request,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_AssociatedInterfaceRequest_Params_Data::DowngradedTestInterface_AssociatedInterfaceRequest_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_PendingReceiver_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_PendingReceiver_Params_Data* object = static_cast<const DowngradedTestInterface_PendingReceiver_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->receiver, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->receiver,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_PendingReceiver_Params_Data::DowngradedTestInterface_PendingReceiver_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_PendingRemote_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_PendingRemote_Params_Data* object = static_cast<const DowngradedTestInterface_PendingRemote_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->remote, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->remote,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_PendingRemote_Params_Data::DowngradedTestInterface_PendingRemote_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_PendingAssociatedReceiver_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_PendingAssociatedReceiver_Params_Data* object = static_cast<const DowngradedTestInterface_PendingAssociatedReceiver_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->associated_remote, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->associated_remote,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_PendingAssociatedReceiver_Params_Data::DowngradedTestInterface_PendingAssociatedReceiver_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_PendingAssociatedRemote_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_PendingAssociatedRemote_Params_Data* object = static_cast<const DowngradedTestInterface_PendingAssociatedRemote_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->associated_receiver, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->associated_receiver,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_PendingAssociatedRemote_Params_Data::DowngradedTestInterface_PendingAssociatedRemote_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_MultipleParams2_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_MultipleParams2_Params_Data* object = static_cast<const DowngradedTestInterface_MultipleParams2_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->remote, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->remote,
                                                 validation_context)) {
    return false;
  }

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->receiver, 2, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->receiver,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_MultipleParams2_Params_Data::DowngradedTestInterface_MultipleParams2_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_MultipleParams3_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 32, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_MultipleParams3_Params_Data* object = static_cast<const DowngradedTestInterface_MultipleParams3_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->remote, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->remote,
                                                 validation_context)) {
    return false;
  }

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->receiver, 2, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->receiver,
                                                 validation_context)) {
    return false;
  }

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->associated_remote, 3, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->associated_remote,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_MultipleParams3_Params_Data::DowngradedTestInterface_MultipleParams3_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_MultipleParams4_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 32, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_MultipleParams4_Params_Data* object = static_cast<const DowngradedTestInterface_MultipleParams4_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->remote, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->remote,
                                                 validation_context)) {
    return false;
  }

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->receiver, 2, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->receiver,
                                                 validation_context)) {
    return false;
  }

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->associated_remote, 3, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->associated_remote,
                                                 validation_context)) {
    return false;
  }

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->associated_receiver, 4, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->associated_receiver,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_MultipleParams4_Params_Data::DowngradedTestInterface_MultipleParams4_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_MethodWithResponseCallbackOneLine_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_MethodWithResponseCallbackOneLine_Params_Data* object = static_cast<const DowngradedTestInterface_MethodWithResponseCallbackOneLine_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->data, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->data,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_MethodWithResponseCallbackOneLine_Params_Data::DowngradedTestInterface_MethodWithResponseCallbackOneLine_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_MethodWithResponseCallbackOneLine_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_MethodWithResponseCallbackOneLine_ResponseParams_Data* object = static_cast<const DowngradedTestInterface_MethodWithResponseCallbackOneLine_ResponseParams_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  return true;
}

DowngradedTestInterface_MethodWithResponseCallbackOneLine_ResponseParams_Data::DowngradedTestInterface_MethodWithResponseCallbackOneLine_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_MethodWithResponseCallbackTwoLines_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_MethodWithResponseCallbackTwoLines_Params_Data* object = static_cast<const DowngradedTestInterface_MethodWithResponseCallbackTwoLines_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->data, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->data,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_MethodWithResponseCallbackTwoLines_Params_Data::DowngradedTestInterface_MethodWithResponseCallbackTwoLines_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_MethodWithResponseCallbackTwoLines_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_MethodWithResponseCallbackTwoLines_ResponseParams_Data* object = static_cast<const DowngradedTestInterface_MethodWithResponseCallbackTwoLines_ResponseParams_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->receiver, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->receiver,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_MethodWithResponseCallbackTwoLines_ResponseParams_Data::DowngradedTestInterface_MethodWithResponseCallbackTwoLines_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_OddSpaces_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_OddSpaces_Params_Data* object = static_cast<const DowngradedTestInterface_OddSpaces_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->remote, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->remote,
                                                 validation_context)) {
    return false;
  }

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->receiver, 2, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->receiver,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_OddSpaces_Params_Data::DowngradedTestInterface_OddSpaces_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DowngradedTestInterface_OddSpacesAndLineBreak_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const DowngradedTestInterface_OddSpacesAndLineBreak_Params_Data* object = static_cast<const DowngradedTestInterface_OddSpacesAndLineBreak_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->remote, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->remote,
                                                 validation_context)) {
    return false;
  }

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->receiver, 2, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->receiver,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DowngradedTestInterface_OddSpacesAndLineBreak_Params_Data::DowngradedTestInterface_OddSpacesAndLineBreak_Params_Data()
    : header_({sizeof(*this), 0}) {}

}  // namespace internal
}  // namespace mojom
}  // namespace mojom_types_downgrader_unittest
}  // namespace test
}  // namespace mojo
