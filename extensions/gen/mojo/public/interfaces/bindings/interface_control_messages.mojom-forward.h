// mojo/public/interfaces/bindings/interface_control_messages.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_INTERFACE_CONTROL_MESSAGES_MOJOM_FORWARD_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_INTERFACE_CONTROL_MESSAGES_MOJOM_FORWARD_H_



#include "mojo/public/cpp/bindings/struct_forward.h"




#include "base/component_export.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif




namespace mojo {
namespace interface_control {
class RunMessageParamsDataView;

class RunResponseMessageParamsDataView;

class QueryVersionDataView;

class QueryVersionResultDataView;

class FlushForTestingDataView;

class RunOrClosePipeMessageParamsDataView;

class RequireVersionDataView;

class EnableIdleTrackingDataView;

class MessageAckDataView;

class NotifyIdleDataView;

class RunInputDataView;
class RunOutputDataView;
class RunOrClosePipeInputDataView;

// @generated_from: mojo.interface_control.kRunMessageId
constexpr uint32_t kRunMessageId = 0xFFFFFFFFU;

// @generated_from: mojo.interface_control.kRunOrClosePipeMessageId
constexpr uint32_t kRunOrClosePipeMessageId = 0xFFFFFFFEU;
class RunMessageParams;
using RunMessageParamsPtr = mojo::StructPtr<RunMessageParams>;

class RunResponseMessageParams;
using RunResponseMessageParamsPtr = mojo::StructPtr<RunResponseMessageParams>;

class QueryVersion;
using QueryVersionPtr = mojo::InlinedStructPtr<QueryVersion>;

class QueryVersionResult;
using QueryVersionResultPtr = mojo::InlinedStructPtr<QueryVersionResult>;

class FlushForTesting;
using FlushForTestingPtr = mojo::InlinedStructPtr<FlushForTesting>;

class RunOrClosePipeMessageParams;
using RunOrClosePipeMessageParamsPtr = mojo::StructPtr<RunOrClosePipeMessageParams>;

class RequireVersion;
using RequireVersionPtr = mojo::InlinedStructPtr<RequireVersion>;

class EnableIdleTracking;
using EnableIdleTrackingPtr = mojo::InlinedStructPtr<EnableIdleTracking>;

class MessageAck;
using MessageAckPtr = mojo::InlinedStructPtr<MessageAck>;

class NotifyIdle;
using NotifyIdlePtr = mojo::InlinedStructPtr<NotifyIdle>;

class RunInput;

typedef mojo::StructPtr<RunInput> RunInputPtr;

class RunOutput;

typedef mojo::StructPtr<RunOutput> RunOutputPtr;

class RunOrClosePipeInput;

typedef mojo::StructPtr<RunOrClosePipeInput> RunOrClosePipeInputPtr;




}  // namespace interface_control
}  // namespace mojo

#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_INTERFACE_CONTROL_MESSAGES_MOJOM_FORWARD_H_

/* Metadata comment
eyJtZXRhIjogW3siZW5kIjogMTIxMCwgImJlZ2luIjogMTE5NywgImVkZ2UiOiAiJS9reXRoZS9l
ZGdlL2dlbmVyYXRlcyIsICJ0eXBlIjogImFuY2hvcl9kZWZpbmVzIiwgInZuYW1lIjogeyJjb3Jw
dXMiOiAiY2hyb21pdW0uZ29vZ2xlc291cmNlLmNvbS9jaHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2Ui
OiAibW9qb20iLCAic2lnbmF0dXJlIjogIm1vam8uaW50ZXJmYWNlX2NvbnRyb2wua1J1bk1lc3Nh
Z2VJZCJ9fSwgeyJlbmQiOiAxMzM4LCAiYmVnaW4iOiAxMzE0LCAiZWRnZSI6ICIlL2t5dGhlL2Vk
Z2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2RlZmluZXMiLCAidm5hbWUiOiB7ImNvcnB1
cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2Nocm9taXVtL3NyYyIsICJsYW5ndWFnZSI6
ICJtb2pvbSIsICJzaWduYXR1cmUiOiAibW9qby5pbnRlcmZhY2VfY29udHJvbC5rUnVuT3JDbG9z
ZVBpcGVNZXNzYWdlSWQifX1dLCAidHlwZSI6ICJreXRoZTAifQ==
*/