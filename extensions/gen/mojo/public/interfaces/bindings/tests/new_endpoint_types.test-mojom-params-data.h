// mojo/public/interfaces/bindings/tests/new_endpoint_types.test-mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_NEW_ENDPOINT_TYPES_TEST_MOJOM_PARAMS_DATA_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_NEW_ENDPOINT_TYPES_TEST_MOJOM_PARAMS_DATA_H_

#include "base/macros.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace mojo {
namespace test {
namespace new_endpoint_types {
namespace mojom {
namespace internal {
class  WidgetObserver_OnClick_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WidgetObserver_OnClick_Params_Data>;

  WidgetObserver_OnClick_Params_Data();
  ~WidgetObserver_OnClick_Params_Data() = delete;
};
static_assert(sizeof(WidgetObserver_OnClick_Params_Data) == 8,
              "Bad sizeof(WidgetObserver_OnClick_Params_Data)");
class  Widget_Click_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<Widget_Click_Params_Data>;

  Widget_Click_Params_Data();
  ~Widget_Click_Params_Data() = delete;
};
static_assert(sizeof(Widget_Click_Params_Data) == 8,
              "Bad sizeof(Widget_Click_Params_Data)");
class  Widget_AddObserver_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data observer;

 private:
  friend class mojo::internal::MessageFragment<Widget_AddObserver_Params_Data>;

  Widget_AddObserver_Params_Data();
  ~Widget_AddObserver_Params_Data() = delete;
};
static_assert(sizeof(Widget_AddObserver_Params_Data) == 16,
              "Bad sizeof(Widget_AddObserver_Params_Data)");
class  WidgetClient_OnInitialized_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WidgetClient_OnInitialized_Params_Data>;

  WidgetClient_OnInitialized_Params_Data();
  ~WidgetClient_OnInitialized_Params_Data() = delete;
};
static_assert(sizeof(WidgetClient_OnInitialized_Params_Data) == 8,
              "Bad sizeof(WidgetClient_OnInitialized_Params_Data)");
class  WidgetFactory_CreateWidget_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Handle_Data receiver;
  mojo::internal::Interface_Data client;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<WidgetFactory_CreateWidget_Params_Data>;

  WidgetFactory_CreateWidget_Params_Data();
  ~WidgetFactory_CreateWidget_Params_Data() = delete;
};
static_assert(sizeof(WidgetFactory_CreateWidget_Params_Data) == 24,
              "Bad sizeof(WidgetFactory_CreateWidget_Params_Data)");
class  Pinger_Ping_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<Pinger_Ping_Params_Data>;

  Pinger_Ping_Params_Data();
  ~Pinger_Ping_Params_Data() = delete;
};
static_assert(sizeof(Pinger_Ping_Params_Data) == 8,
              "Bad sizeof(Pinger_Ping_Params_Data)");
class  Pinger_Ping_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<Pinger_Ping_ResponseParams_Data>;

  Pinger_Ping_ResponseParams_Data();
  ~Pinger_Ping_ResponseParams_Data() = delete;
};
static_assert(sizeof(Pinger_Ping_ResponseParams_Data) == 8,
              "Bad sizeof(Pinger_Ping_ResponseParams_Data)");
class  AssociatedPingerHost_AddEndpoints_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::AssociatedEndpointHandle_Data receiver;
  mojo::internal::AssociatedInterface_Data remote;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<AssociatedPingerHost_AddEndpoints_Params_Data>;

  AssociatedPingerHost_AddEndpoints_Params_Data();
  ~AssociatedPingerHost_AddEndpoints_Params_Data() = delete;
};
static_assert(sizeof(AssociatedPingerHost_AddEndpoints_Params_Data) == 24,
              "Bad sizeof(AssociatedPingerHost_AddEndpoints_Params_Data)");

}  // namespace internal


class WidgetObserver_OnClick_ParamsDataView {
 public:
  WidgetObserver_OnClick_ParamsDataView() {}

  WidgetObserver_OnClick_ParamsDataView(
      internal::WidgetObserver_OnClick_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WidgetObserver_OnClick_Params_Data* data_ = nullptr;
};



class Widget_Click_ParamsDataView {
 public:
  Widget_Click_ParamsDataView() {}

  Widget_Click_ParamsDataView(
      internal::Widget_Click_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::Widget_Click_Params_Data* data_ = nullptr;
};



class Widget_AddObserver_ParamsDataView {
 public:
  Widget_AddObserver_ParamsDataView() {}

  Widget_AddObserver_ParamsDataView(
      internal::Widget_AddObserver_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeObserver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::mojo::test::new_endpoint_types::mojom::WidgetObserverInterfaceBase>>(
            &data_->observer, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::Widget_AddObserver_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class WidgetClient_OnInitialized_ParamsDataView {
 public:
  WidgetClient_OnInitialized_ParamsDataView() {}

  WidgetClient_OnInitialized_ParamsDataView(
      internal::WidgetClient_OnInitialized_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WidgetClient_OnInitialized_Params_Data* data_ = nullptr;
};



class WidgetFactory_CreateWidget_ParamsDataView {
 public:
  WidgetFactory_CreateWidget_ParamsDataView() {}

  WidgetFactory_CreateWidget_ParamsDataView(
      internal::WidgetFactory_CreateWidget_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeReceiver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::mojo::test::new_endpoint_types::mojom::WidgetInterfaceBase>>(
            &data_->receiver, &result, message_);
    DCHECK(ret);
    return result;
  }
  template <typename UserType>
  UserType TakeClient() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::mojo::test::new_endpoint_types::mojom::WidgetClientInterfaceBase>>(
            &data_->client, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::WidgetFactory_CreateWidget_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Pinger_Ping_ParamsDataView {
 public:
  Pinger_Ping_ParamsDataView() {}

  Pinger_Ping_ParamsDataView(
      internal::Pinger_Ping_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::Pinger_Ping_Params_Data* data_ = nullptr;
};



class Pinger_Ping_ResponseParamsDataView {
 public:
  Pinger_Ping_ResponseParamsDataView() {}

  Pinger_Ping_ResponseParamsDataView(
      internal::Pinger_Ping_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::Pinger_Ping_ResponseParams_Data* data_ = nullptr;
};



class AssociatedPingerHost_AddEndpoints_ParamsDataView {
 public:
  AssociatedPingerHost_AddEndpoints_ParamsDataView() {}

  AssociatedPingerHost_AddEndpoints_ParamsDataView(
      internal::AssociatedPingerHost_AddEndpoints_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeReceiver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::mojo::test::new_endpoint_types::mojom::PingerAssociatedRequestDataView>(
            &data_->receiver, &result, message_);
    DCHECK(ret);
    return result;
  }
  template <typename UserType>
  UserType TakeRemote() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::mojo::test::new_endpoint_types::mojom::PingerAssociatedPtrInfoDataView>(
            &data_->remote, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::AssociatedPingerHost_AddEndpoints_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};

















}  // namespace mojom
}  // namespace new_endpoint_types
}  // namespace test
}  // namespace mojo

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_NEW_ENDPOINT_TYPES_TEST_MOJOM_PARAMS_DATA_H_