// mojo/public/interfaces/bindings/tests/test_wtf_types.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_WTF_TYPES_MOJOM_FORWARD_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_WTF_TYPES_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif




namespace mojo {
namespace test {
class TestWTFCodeGenerationDataView;

class TestWTFStructDataView;

class TestWTFStructWrapperDataView;

class TestWTFCodeGeneration2DataView;

enum class TopLevelEnum : int32_t;

enum class TestWTFStruct_NestedEnum : int32_t;

enum class TestWTF_NestedEnum : int32_t;
class TestWTFCodeGeneration;
using TestWTFCodeGenerationPtr = mojo::StructPtr<TestWTFCodeGeneration>;

class TestWTFStruct;
using TestWTFStructPtr = mojo::InlinedStructPtr<TestWTFStruct>;

class TestWTFStructWrapper;
using TestWTFStructWrapperPtr = mojo::StructPtr<TestWTFStructWrapper>;

class TestWTFCodeGeneration2;

typedef mojo::StructPtr<TestWTFCodeGeneration2> TestWTFCodeGeneration2Ptr;

class TestWTF;

// @generated_from: mojo.test.TestWTF
using TestWTFPtr = mojo::InterfacePtr<TestWTF>;
using TestWTFPtrInfo = mojo::InterfacePtrInfo<TestWTF>;

// @generated_from: mojo.test.TestWTF
using TestWTFRequest = mojo::InterfaceRequest<TestWTF>;
using TestWTFAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<TestWTF>;

// @generated_from: mojo.test.TestWTF
using TestWTFAssociatedRequest =
    mojo::AssociatedInterfaceRequest<TestWTF>;




}  // namespace test
}  // namespace mojo

#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_WTF_TYPES_MOJOM_FORWARD_H_

/* Metadata comment
eyJtZXRhIjogW3siZW5kIjogMTUzNSwgImJlZ2luIjogMTUyNSwgImVkZ2UiOiAiJS9reXRoZS9l
ZGdlL2dlbmVyYXRlcyIsICJ0eXBlIjogImFuY2hvcl9kZWZpbmVzIiwgInZuYW1lIjogeyJjb3Jw
dXMiOiAiY2hyb21pdW0uZ29vZ2xlc291cmNlLmNvbS9jaHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2Ui
OiAibW9qb20iLCAic2lnbmF0dXJlIjogIm1vam8udGVzdC5UZXN0V1RGIn19LCB7ImVuZCI6IDE3
MTUsICJiZWdpbiI6IDE3MDgsICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMiLCAidHlw
ZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVtLmdvb2ds
ZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNpZ25hdHVy
ZSI6ICJtb2pvLnRlc3QuVGVzdFdURiJ9fV0sICJ0eXBlIjogImt5dGhlMCJ9
*/