// mojo/public/interfaces/bindings/tests/test_name_generator.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'mojo/public/interfaces/bindings/tests/test_name_generator.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('sample');


  var PAD_RSA_PKCS1_1_5_SIGN = 1;
  var DIGEST_SHA1 = 1;
  var E2E_INTEGRATION = 1;
  var M3_TEST = 1;
  var URL_LOADER_FACTORY = 1;
  var IPV6_ADDRESS = 1;
  var NUMB3R5_IN_TH3_MIDDL3 = 1;
  var NAME_WITH_UNDERSCORE = 1;
  var SINGLETON = 1;
  var SupportedCases = {};
  SupportedCases.lowerCamelCase = 0;
  SupportedCases.UpperCamelCase = 1;
  SupportedCases.snake_case = 2;
  SupportedCases.MACRO_CASE = 3;
  SupportedCases.kHungarianNotation = 4;
  SupportedCases.upperACRONYMCase = 5;
  SupportedCases.MIN_VALUE = 0;
  SupportedCases.MAX_VALUE = 5;

  SupportedCases.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    }
    return false;
  };

  SupportedCases.toKnownEnumValue = function(value) {
    return value;
  };

  SupportedCases.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  exports.PAD_RSA_PKCS1_1_5_SIGN = PAD_RSA_PKCS1_1_5_SIGN;
  exports.DIGEST_SHA1 = DIGEST_SHA1;
  exports.E2E_INTEGRATION = E2E_INTEGRATION;
  exports.M3_TEST = M3_TEST;
  exports.URL_LOADER_FACTORY = URL_LOADER_FACTORY;
  exports.IPV6_ADDRESS = IPV6_ADDRESS;
  exports.NUMB3R5_IN_TH3_MIDDL3 = NUMB3R5_IN_TH3_MIDDL3;
  exports.NAME_WITH_UNDERSCORE = NAME_WITH_UNDERSCORE;
  exports.SINGLETON = SINGLETON;
  exports.SupportedCases = SupportedCases;
})();