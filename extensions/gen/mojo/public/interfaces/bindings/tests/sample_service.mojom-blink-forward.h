// mojo/public/interfaces/bindings/tests/sample_service.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_SERVICE_MOJOM_BLINK_FORWARD_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_SERVICE_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif


namespace sample {

enum class Bar_Type : int32_t;

enum class Service_BazOptions : int32_t;
class DefaultsSenderInterfaceBase;
class ServiceInterfaceBase;
class PortInterfaceBase;
}  // namespace sample


namespace sample {
namespace blink {
// Aliases for definition in the parent namespace.
using DefaultsSenderInterfaceBase = DefaultsSenderInterfaceBase;
using ServiceInterfaceBase = ServiceInterfaceBase;
using PortInterfaceBase = PortInterfaceBase;

// @generated_from: sample.kTwelve
constexpr uint8_t kTwelve = 12U;
class Bar;
using BarPtr = mojo::InlinedStructPtr<Bar>;

class Foo;
using FooPtr = mojo::StructPtr<Foo>;

class DefaultsTest;
using DefaultsTestPtr = mojo::StructPtr<DefaultsTest>;

class StructWithHoleV1;
using StructWithHoleV1Ptr = mojo::InlinedStructPtr<StructWithHoleV1>;

class StructWithHoleV2;
using StructWithHoleV2Ptr = mojo::InlinedStructPtr<StructWithHoleV2>;

class DefaultsSender;

// @generated_from: sample.DefaultsSender
using DefaultsSenderPtr = mojo::InterfacePtr<DefaultsSender>;
using DefaultsSenderPtrInfo = mojo::InterfacePtrInfo<DefaultsSender>;

// @generated_from: sample.DefaultsSender
using DefaultsSenderRequest = mojo::InterfaceRequest<DefaultsSender>;
using DefaultsSenderAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<DefaultsSender>;

// @generated_from: sample.DefaultsSender
using DefaultsSenderAssociatedRequest =
    mojo::AssociatedInterfaceRequest<DefaultsSender>;

class Service;

// @generated_from: sample.Service
using ServicePtr = mojo::InterfacePtr<Service>;
using ServicePtrInfo = mojo::InterfacePtrInfo<Service>;

// @generated_from: sample.Service
using ServiceRequest = mojo::InterfaceRequest<Service>;
using ServiceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<Service>;

// @generated_from: sample.Service
using ServiceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<Service>;

class Port;

// @generated_from: sample.Port
using PortPtr = mojo::InterfacePtr<Port>;
using PortPtrInfo = mojo::InterfacePtrInfo<Port>;

// @generated_from: sample.Port
using PortRequest = mojo::InterfaceRequest<Port>;
using PortAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<Port>;

// @generated_from: sample.Port
using PortAssociatedRequest =
    mojo::AssociatedInterfaceRequest<Port>;




}  // namespace blink
}  // namespace sample

#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_SERVICE_MOJOM_BLINK_FORWARD_H_