// mojo/public/interfaces/bindings/tests/regression_tests.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_REGRESSION_TESTS_MOJOM_BLINK_FORWARD_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_REGRESSION_TESTS_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif


namespace regression_tests {

enum class EnumWithReference : int32_t;

enum class EnumWithLowercase : int32_t;

enum class EnumWithNumbers : int32_t;

enum class EnumWithK : int32_t;
class CheckMethodWithEmptyResponseInterfaceBase;
class CheckNameCollisionInterfaceBase;
class HandlesNameCollisionInterfaceInterfaceBase;
}  // namespace regression_tests


namespace regression_tests {
namespace blink {
// Aliases for definition in the parent namespace.
using EnumWithReference = EnumWithReference;
using EnumWithLowercase = EnumWithLowercase;
using EnumWithNumbers = EnumWithNumbers;
using EnumWithK = EnumWithK;
using CheckMethodWithEmptyResponseInterfaceBase = CheckMethodWithEmptyResponseInterfaceBase;
using CheckNameCollisionInterfaceBase = CheckNameCollisionInterfaceBase;
using HandlesNameCollisionInterfaceInterfaceBase = HandlesNameCollisionInterfaceInterfaceBase;
class Edge;
using EdgePtr = mojo::StructPtr<Edge>;

class Vertex;
using VertexPtr = mojo::StructPtr<Vertex>;

class EmptyStruct;
using EmptyStructPtr = mojo::InlinedStructPtr<EmptyStruct>;

class A;
using APtr = mojo::StructPtr<A>;

class B;
using BPtr = mojo::StructPtr<B>;

class HandlesNameCollisionStruct;
using HandlesNameCollisionStructPtr = mojo::StructPtr<HandlesNameCollisionStruct>;

class HandlesHandleNameCollisionStruct;
using HandlesHandleNameCollisionStructPtr = mojo::StructPtr<HandlesHandleNameCollisionStruct>;

class HandlesUnionNameCollisionStruct;
using HandlesUnionNameCollisionStructPtr = mojo::StructPtr<HandlesUnionNameCollisionStruct>;

class HandlesNameCollisionUnion;

typedef mojo::InlinedStructPtr<HandlesNameCollisionUnion> HandlesNameCollisionUnionPtr;

class CheckMethodWithEmptyResponse;

// @generated_from: regression_tests.CheckMethodWithEmptyResponse
using CheckMethodWithEmptyResponsePtr = mojo::InterfacePtr<CheckMethodWithEmptyResponse>;
using CheckMethodWithEmptyResponsePtrInfo = mojo::InterfacePtrInfo<CheckMethodWithEmptyResponse>;

// @generated_from: regression_tests.CheckMethodWithEmptyResponse
using CheckMethodWithEmptyResponseRequest = mojo::InterfaceRequest<CheckMethodWithEmptyResponse>;
using CheckMethodWithEmptyResponseAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<CheckMethodWithEmptyResponse>;

// @generated_from: regression_tests.CheckMethodWithEmptyResponse
using CheckMethodWithEmptyResponseAssociatedRequest =
    mojo::AssociatedInterfaceRequest<CheckMethodWithEmptyResponse>;

class CheckNameCollision;

// @generated_from: regression_tests.CheckNameCollision
using CheckNameCollisionPtr = mojo::InterfacePtr<CheckNameCollision>;
using CheckNameCollisionPtrInfo = mojo::InterfacePtrInfo<CheckNameCollision>;

// @generated_from: regression_tests.CheckNameCollision
using CheckNameCollisionRequest = mojo::InterfaceRequest<CheckNameCollision>;
using CheckNameCollisionAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<CheckNameCollision>;

// @generated_from: regression_tests.CheckNameCollision
using CheckNameCollisionAssociatedRequest =
    mojo::AssociatedInterfaceRequest<CheckNameCollision>;

class HandlesNameCollisionInterface;

// @generated_from: regression_tests.HandlesNameCollisionInterface
using HandlesNameCollisionInterfacePtr = mojo::InterfacePtr<HandlesNameCollisionInterface>;
using HandlesNameCollisionInterfacePtrInfo = mojo::InterfacePtrInfo<HandlesNameCollisionInterface>;

// @generated_from: regression_tests.HandlesNameCollisionInterface
using HandlesNameCollisionInterfaceRequest = mojo::InterfaceRequest<HandlesNameCollisionInterface>;
using HandlesNameCollisionInterfaceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<HandlesNameCollisionInterface>;

// @generated_from: regression_tests.HandlesNameCollisionInterface
using HandlesNameCollisionInterfaceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<HandlesNameCollisionInterface>;




}  // namespace blink
}  // namespace regression_tests

#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_REGRESSION_TESTS_MOJOM_BLINK_FORWARD_H_