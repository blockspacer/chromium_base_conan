// mojo/public/interfaces/bindings/tests/sample_factory.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_FACTORY_MOJOM_BLINK_FORWARD_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_FACTORY_MOJOM_BLINK_FORWARD_H_



#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif


namespace sample {
class NamedObjectInterfaceBase;
class FactoryInterfaceBase;
}  // namespace sample


namespace sample {
namespace blink {
// Aliases for definition in the parent namespace.
using NamedObjectInterfaceBase = NamedObjectInterfaceBase;
using FactoryInterfaceBase = FactoryInterfaceBase;
class Request;
using RequestPtr = mojo::StructPtr<Request>;

class Response;
using ResponsePtr = mojo::StructPtr<Response>;

class NamedObject;

// @generated_from: sample.NamedObject
using NamedObjectPtr = mojo::InterfacePtr<NamedObject>;
using NamedObjectPtrInfo = mojo::InterfacePtrInfo<NamedObject>;

// @generated_from: sample.NamedObject
using NamedObjectRequest = mojo::InterfaceRequest<NamedObject>;
using NamedObjectAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<NamedObject>;

// @generated_from: sample.NamedObject
using NamedObjectAssociatedRequest =
    mojo::AssociatedInterfaceRequest<NamedObject>;

class Factory;

// @generated_from: sample.Factory
using FactoryPtr = mojo::InterfacePtr<Factory>;
using FactoryPtrInfo = mojo::InterfacePtrInfo<Factory>;

// @generated_from: sample.Factory
using FactoryRequest = mojo::InterfaceRequest<Factory>;
using FactoryAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<Factory>;

// @generated_from: sample.Factory
using FactoryAssociatedRequest =
    mojo::AssociatedInterfaceRequest<Factory>;




}  // namespace blink
}  // namespace sample

#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_FACTORY_MOJOM_BLINK_FORWARD_H_