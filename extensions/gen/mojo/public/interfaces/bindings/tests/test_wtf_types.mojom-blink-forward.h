// mojo/public/interfaces/bindings/tests/test_wtf_types.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_WTF_TYPES_MOJOM_BLINK_FORWARD_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_WTF_TYPES_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif


namespace mojo {
namespace test {

enum class TopLevelEnum : int32_t;

enum class TestWTFStruct_NestedEnum : int32_t;

enum class TestWTF_NestedEnum : int32_t;
class TestWTFInterfaceBase;
}  // namespace mojo
}  // namespace test


namespace mojo {
namespace test {
namespace blink {
// Aliases for definition in the parent namespace.
using TopLevelEnum = TopLevelEnum;
using TestWTFInterfaceBase = TestWTFInterfaceBase;
class TestWTFCodeGeneration;
using TestWTFCodeGenerationPtr = mojo::StructPtr<TestWTFCodeGeneration>;

class TestWTFStruct;
using TestWTFStructPtr = mojo::InlinedStructPtr<TestWTFStruct>;

class TestWTFStructWrapper;
using TestWTFStructWrapperPtr = mojo::StructPtr<TestWTFStructWrapper>;

class TestWTFCodeGeneration2;

typedef mojo::StructPtr<TestWTFCodeGeneration2> TestWTFCodeGeneration2Ptr;

class TestWTF;

// @generated_from: mojo.test.TestWTF
using TestWTFPtr = mojo::InterfacePtr<TestWTF>;
using TestWTFPtrInfo = mojo::InterfacePtrInfo<TestWTF>;

// @generated_from: mojo.test.TestWTF
using TestWTFRequest = mojo::InterfaceRequest<TestWTF>;
using TestWTFAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<TestWTF>;

// @generated_from: mojo.test.TestWTF
using TestWTFAssociatedRequest =
    mojo::AssociatedInterfaceRequest<TestWTF>;




}  // namespace blink
}  // namespace test
}  // namespace mojo

#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_WTF_TYPES_MOJOM_BLINK_FORWARD_H_