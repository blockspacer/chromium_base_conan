// mojo/public/interfaces/bindings/tests/validation_test_interfaces.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_VALIDATION_TEST_INTERFACES_MOJOM_FORWARD_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_VALIDATION_TEST_INTERFACES_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif




namespace mojo {
namespace test {
class StructADataView;

class StructBDataView;

class StructCDataView;

class StructDDataView;

class StructEDataView;

class StructFDataView;

class StructGDataView;

class BasicStructDataView;

class StructWithEnumDataView;

class RecursiveDataView;

class UnionADataView;

enum class EnumA : int32_t;

enum class EnumB : int32_t;

enum class EmptyEnum : int32_t;

enum class ExtensibleEmptyEnum : int32_t;

enum class BasicEnum : int32_t;

enum class StructWithEnum_EnumWithin : int32_t;
class StructA;
using StructAPtr = mojo::InlinedStructPtr<StructA>;

class StructB;
using StructBPtr = mojo::StructPtr<StructB>;

class StructC;
using StructCPtr = mojo::StructPtr<StructC>;

class StructD;
using StructDPtr = mojo::StructPtr<StructD>;

class StructE;
using StructEPtr = mojo::StructPtr<StructE>;

class StructF;
using StructFPtr = mojo::StructPtr<StructF>;

class StructG;
using StructGPtr = mojo::StructPtr<StructG>;

class BasicStruct;
using BasicStructPtr = mojo::InlinedStructPtr<BasicStruct>;

class StructWithEnum;
using StructWithEnumPtr = mojo::InlinedStructPtr<StructWithEnum>;

class Recursive;
using RecursivePtr = mojo::StructPtr<Recursive>;

class UnionA;

typedef mojo::StructPtr<UnionA> UnionAPtr;

class InterfaceA;

// @generated_from: mojo.test.InterfaceA
using InterfaceAPtr = mojo::InterfacePtr<InterfaceA>;
using InterfaceAPtrInfo = mojo::InterfacePtrInfo<InterfaceA>;

// @generated_from: mojo.test.InterfaceA
using InterfaceARequest = mojo::InterfaceRequest<InterfaceA>;
using InterfaceAAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<InterfaceA>;

// @generated_from: mojo.test.InterfaceA
using InterfaceAAssociatedRequest =
    mojo::AssociatedInterfaceRequest<InterfaceA>;

class BoundsCheckTestInterface;

// @generated_from: mojo.test.BoundsCheckTestInterface
using BoundsCheckTestInterfacePtr = mojo::InterfacePtr<BoundsCheckTestInterface>;
using BoundsCheckTestInterfacePtrInfo = mojo::InterfacePtrInfo<BoundsCheckTestInterface>;

// @generated_from: mojo.test.BoundsCheckTestInterface
using BoundsCheckTestInterfaceRequest = mojo::InterfaceRequest<BoundsCheckTestInterface>;
using BoundsCheckTestInterfaceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<BoundsCheckTestInterface>;

// @generated_from: mojo.test.BoundsCheckTestInterface
using BoundsCheckTestInterfaceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<BoundsCheckTestInterface>;

class ConformanceTestInterface;

// @generated_from: mojo.test.ConformanceTestInterface
using ConformanceTestInterfacePtr = mojo::InterfacePtr<ConformanceTestInterface>;
using ConformanceTestInterfacePtrInfo = mojo::InterfacePtrInfo<ConformanceTestInterface>;

// @generated_from: mojo.test.ConformanceTestInterface
using ConformanceTestInterfaceRequest = mojo::InterfaceRequest<ConformanceTestInterface>;
using ConformanceTestInterfaceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<ConformanceTestInterface>;

// @generated_from: mojo.test.ConformanceTestInterface
using ConformanceTestInterfaceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<ConformanceTestInterface>;

class IntegrationTestInterface;

// @generated_from: mojo.test.IntegrationTestInterface
using IntegrationTestInterfacePtr = mojo::InterfacePtr<IntegrationTestInterface>;
using IntegrationTestInterfacePtrInfo = mojo::InterfacePtrInfo<IntegrationTestInterface>;

// @generated_from: mojo.test.IntegrationTestInterface
using IntegrationTestInterfaceRequest = mojo::InterfaceRequest<IntegrationTestInterface>;
using IntegrationTestInterfaceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<IntegrationTestInterface>;

// @generated_from: mojo.test.IntegrationTestInterface
using IntegrationTestInterfaceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<IntegrationTestInterface>;




}  // namespace test
}  // namespace mojo

#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_VALIDATION_TEST_INTERFACES_MOJOM_FORWARD_H_

/* Metadata comment
eyJtZXRhIjogW3siZW5kIjogMjEzNSwgImJlZ2luIjogMjEyMiwgImVkZ2UiOiAiJS9reXRoZS9l
ZGdlL2dlbmVyYXRlcyIsICJ0eXBlIjogImFuY2hvcl9kZWZpbmVzIiwgInZuYW1lIjogeyJjb3Jw
dXMiOiAiY2hyb21pdW0uZ29vZ2xlc291cmNlLmNvbS9jaHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2Ui
OiAibW9qb20iLCAic2lnbmF0dXJlIjogIm1vam8udGVzdC5JbnRlcmZhY2VBIn19LCB7ImVuZCI6
IDIzMzMsICJiZWdpbiI6IDIzMjMsICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMiLCAi
dHlwZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVtLmdv
b2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNpZ25h
dHVyZSI6ICJtb2pvLnRlc3QuSW50ZXJmYWNlQSJ9fSwgeyJlbmQiOiAyNjcyLCAiYmVnaW4iOiAy
NjQ1LCAiZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2Rl
ZmluZXMiLCAidm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2No
cm9taXVtL3NyYyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAibW9qby50ZXN0
LkJvdW5kc0NoZWNrVGVzdEludGVyZmFjZSJ9fSwgeyJlbmQiOiAyOTU0LCAiYmVnaW4iOiAyOTMw
LCAiZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2RlZmlu
ZXMiLCAidm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2Nocm9t
aXVtL3NyYyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAibW9qby50ZXN0LkJv
dW5kc0NoZWNrVGVzdEludGVyZmFjZSJ9fSwgeyJlbmQiOiAzMzYzLCAiYmVnaW4iOiAzMzM2LCAi
ZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2RlZmluZXMi
LCAidm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2Nocm9taXVt
L3NyYyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAibW9qby50ZXN0LkNvbmZv
cm1hbmNlVGVzdEludGVyZmFjZSJ9fSwgeyJlbmQiOiAzNjQ1LCAiYmVnaW4iOiAzNjIxLCAiZWRn
ZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2RlZmluZXMiLCAi
dm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2Nocm9taXVtL3Ny
YyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAibW9qby50ZXN0LkNvbmZvcm1h
bmNlVGVzdEludGVyZmFjZSJ9fSwgeyJlbmQiOiA0MDU0LCAiYmVnaW4iOiA0MDI3LCAiZWRnZSI6
ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2RlZmluZXMiLCAidm5h
bWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2Nocm9taXVtL3NyYyIs
ICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAibW9qby50ZXN0LkludGVncmF0aW9u
VGVzdEludGVyZmFjZSJ9fSwgeyJlbmQiOiA0MzM2LCAiYmVnaW4iOiA0MzEyLCAiZWRnZSI6ICIl
L2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2RlZmluZXMiLCAidm5hbWUi
OiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2Nocm9taXVtL3NyYyIsICJs
YW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAibW9qby50ZXN0LkludGVncmF0aW9uVGVz
dEludGVyZmFjZSJ9fV0sICJ0eXBlIjogImt5dGhlMCJ9
*/