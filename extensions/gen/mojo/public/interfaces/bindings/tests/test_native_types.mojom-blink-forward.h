// mojo/public/interfaces/bindings/tests/test_native_types.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_NATIVE_TYPES_MOJOM_BLINK_FORWARD_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_NATIVE_TYPES_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif

namespace mojo {
enum class NativeEnum;
}  // namespace mojo
namespace mojo {
namespace test {
using PickledEnum = mojo::NativeEnum;
class PicklePasserInterfaceBase;
class RectServiceInterfaceBase;
class NativeTypeTesterInterfaceBase;
}  // namespace mojo
}  // namespace test


namespace mojo {
namespace test {
namespace blink {
// Aliases for definition in the parent namespace.
using PickledEnum = PickledEnum;
using PicklePasserInterfaceBase = PicklePasserInterfaceBase;
using RectServiceInterfaceBase = RectServiceInterfaceBase;
using NativeTypeTesterInterfaceBase = NativeTypeTesterInterfaceBase;
using PickledStruct = mojo::native::NativeStruct;
using PickledStructPtr = mojo::native::NativeStructPtr;

class PickleContainer;
using PickleContainerPtr = mojo::StructPtr<PickleContainer>;

using TestNativeStructMojom = mojo::native::NativeStruct;
using TestNativeStructMojomPtr = mojo::native::NativeStructPtr;

using TestNativeStructWithAttachmentsMojom = mojo::native::NativeStruct;
using TestNativeStructWithAttachmentsMojomPtr = mojo::native::NativeStructPtr;

class PicklePasser;

// @generated_from: mojo.test.PicklePasser
using PicklePasserPtr = mojo::InterfacePtr<PicklePasser>;
using PicklePasserPtrInfo = mojo::InterfacePtrInfo<PicklePasser>;

// @generated_from: mojo.test.PicklePasser
using PicklePasserRequest = mojo::InterfaceRequest<PicklePasser>;
using PicklePasserAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PicklePasser>;

// @generated_from: mojo.test.PicklePasser
using PicklePasserAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PicklePasser>;

class RectService;

// @generated_from: mojo.test.RectService
using RectServicePtr = mojo::InterfacePtr<RectService>;
using RectServicePtrInfo = mojo::InterfacePtrInfo<RectService>;

// @generated_from: mojo.test.RectService
using RectServiceRequest = mojo::InterfaceRequest<RectService>;
using RectServiceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<RectService>;

// @generated_from: mojo.test.RectService
using RectServiceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<RectService>;

class NativeTypeTester;

// @generated_from: mojo.test.NativeTypeTester
using NativeTypeTesterPtr = mojo::InterfacePtr<NativeTypeTester>;
using NativeTypeTesterPtrInfo = mojo::InterfacePtrInfo<NativeTypeTester>;

// @generated_from: mojo.test.NativeTypeTester
using NativeTypeTesterRequest = mojo::InterfaceRequest<NativeTypeTester>;
using NativeTypeTesterAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<NativeTypeTester>;

// @generated_from: mojo.test.NativeTypeTester
using NativeTypeTesterAssociatedRequest =
    mojo::AssociatedInterfaceRequest<NativeTypeTester>;




}  // namespace blink
}  // namespace test
}  // namespace mojo

#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_NATIVE_TYPES_MOJOM_BLINK_FORWARD_H_