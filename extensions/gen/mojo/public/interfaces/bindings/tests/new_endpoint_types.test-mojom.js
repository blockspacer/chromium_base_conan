// mojo/public/interfaces/bindings/tests/new_endpoint_types.test-mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'mojo/public/interfaces/bindings/tests/new_endpoint_types.test-mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('mojo.test.newEndpointTypes.mojom');



  function WidgetObserver_OnClick_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WidgetObserver_OnClick_Params.prototype.initDefaults_ = function() {
  };
  WidgetObserver_OnClick_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WidgetObserver_OnClick_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  WidgetObserver_OnClick_Params.encodedSize = codec.kStructHeaderSize + 0;

  WidgetObserver_OnClick_Params.decode = function(decoder) {
    var packed;
    var val = new WidgetObserver_OnClick_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  WidgetObserver_OnClick_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WidgetObserver_OnClick_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function Widget_Click_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Widget_Click_Params.prototype.initDefaults_ = function() {
  };
  Widget_Click_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Widget_Click_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Widget_Click_Params.encodedSize = codec.kStructHeaderSize + 0;

  Widget_Click_Params.decode = function(decoder) {
    var packed;
    var val = new Widget_Click_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  Widget_Click_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Widget_Click_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function Widget_AddObserver_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Widget_AddObserver_Params.prototype.initDefaults_ = function() {
    this.observer = new WidgetObserverPtr();
  };
  Widget_AddObserver_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Widget_AddObserver_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Widget_AddObserver_Params.observer
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 0, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Widget_AddObserver_Params.encodedSize = codec.kStructHeaderSize + 8;

  Widget_AddObserver_Params.decode = function(decoder) {
    var packed;
    var val = new Widget_AddObserver_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.observer =
        decoder.decodeStruct(new codec.Interface(WidgetObserverPtr));
    return val;
  };

  Widget_AddObserver_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Widget_AddObserver_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(new codec.Interface(WidgetObserverPtr), val.observer);
  };
  function WidgetClient_OnInitialized_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WidgetClient_OnInitialized_Params.prototype.initDefaults_ = function() {
  };
  WidgetClient_OnInitialized_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WidgetClient_OnInitialized_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  WidgetClient_OnInitialized_Params.encodedSize = codec.kStructHeaderSize + 0;

  WidgetClient_OnInitialized_Params.decode = function(decoder) {
    var packed;
    var val = new WidgetClient_OnInitialized_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  WidgetClient_OnInitialized_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WidgetClient_OnInitialized_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function WidgetFactory_CreateWidget_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  WidgetFactory_CreateWidget_Params.prototype.initDefaults_ = function() {
    this.receiver = new bindings.InterfaceRequest();
    this.client = new WidgetClientPtr();
  };
  WidgetFactory_CreateWidget_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  WidgetFactory_CreateWidget_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate WidgetFactory_CreateWidget_Params.receiver
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate WidgetFactory_CreateWidget_Params.client
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 4, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  WidgetFactory_CreateWidget_Params.encodedSize = codec.kStructHeaderSize + 16;

  WidgetFactory_CreateWidget_Params.decode = function(decoder) {
    var packed;
    var val = new WidgetFactory_CreateWidget_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.receiver =
        decoder.decodeStruct(codec.InterfaceRequest);
    val.client =
        decoder.decodeStruct(new codec.Interface(WidgetClientPtr));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  WidgetFactory_CreateWidget_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(WidgetFactory_CreateWidget_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.InterfaceRequest, val.receiver);
    encoder.encodeStruct(new codec.Interface(WidgetClientPtr), val.client);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function Pinger_Ping_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Pinger_Ping_Params.prototype.initDefaults_ = function() {
  };
  Pinger_Ping_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Pinger_Ping_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Pinger_Ping_Params.encodedSize = codec.kStructHeaderSize + 0;

  Pinger_Ping_Params.decode = function(decoder) {
    var packed;
    var val = new Pinger_Ping_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  Pinger_Ping_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Pinger_Ping_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function Pinger_Ping_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Pinger_Ping_ResponseParams.prototype.initDefaults_ = function() {
  };
  Pinger_Ping_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Pinger_Ping_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Pinger_Ping_ResponseParams.encodedSize = codec.kStructHeaderSize + 0;

  Pinger_Ping_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new Pinger_Ping_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  Pinger_Ping_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Pinger_Ping_ResponseParams.encodedSize);
    encoder.writeUint32(0);
  };
  function AssociatedPingerHost_AddEndpoints_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  AssociatedPingerHost_AddEndpoints_Params.prototype.initDefaults_ = function() {
    this.receiver = new associatedBindings.AssociatedInterfaceRequest();
    this.remote = new associatedBindings.AssociatedInterfacePtrInfo();
  };
  AssociatedPingerHost_AddEndpoints_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  AssociatedPingerHost_AddEndpoints_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AssociatedPingerHost_AddEndpoints_Params.receiver
    err = messageValidator.validateAssociatedInterfaceRequest(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate AssociatedPingerHost_AddEndpoints_Params.remote
    err = messageValidator.validateAssociatedInterface(offset + codec.kStructHeaderSize + 4, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  AssociatedPingerHost_AddEndpoints_Params.encodedSize = codec.kStructHeaderSize + 16;

  AssociatedPingerHost_AddEndpoints_Params.decode = function(decoder) {
    var packed;
    var val = new AssociatedPingerHost_AddEndpoints_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.receiver =
        decoder.decodeStruct(codec.AssociatedInterfaceRequest);
    val.remote =
        decoder.decodeStruct(codec.AssociatedInterfacePtrInfo);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  AssociatedPingerHost_AddEndpoints_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(AssociatedPingerHost_AddEndpoints_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.AssociatedInterfaceRequest, val.receiver);
    encoder.encodeStruct(codec.AssociatedInterfacePtrInfo, val.remote);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  var kWidgetObserver_OnClick_Name = 295399853;

  function WidgetObserverPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(WidgetObserver,
                                                   handleOrPtrInfo);
  }

  function WidgetObserverAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        WidgetObserver, associatedInterfacePtrInfo);
  }

  WidgetObserverAssociatedPtr.prototype =
      Object.create(WidgetObserverPtr.prototype);
  WidgetObserverAssociatedPtr.prototype.constructor =
      WidgetObserverAssociatedPtr;

  function WidgetObserverProxy(receiver) {
    this.receiver_ = receiver;
  }
  WidgetObserverPtr.prototype.onClick = function() {
    return WidgetObserverProxy.prototype.onClick
        .apply(this.ptr.getProxy(), arguments);
  };

  WidgetObserverProxy.prototype.onClick = function() {
    var params_ = new WidgetObserver_OnClick_Params();
    var builder = new codec.MessageV0Builder(
        kWidgetObserver_OnClick_Name,
        codec.align(WidgetObserver_OnClick_Params.encodedSize));
    builder.encodeStruct(WidgetObserver_OnClick_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function WidgetObserverStub(delegate) {
    this.delegate_ = delegate;
  }
  WidgetObserverStub.prototype.onClick = function() {
    return this.delegate_ && this.delegate_.onClick && this.delegate_.onClick();
  }

  WidgetObserverStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kWidgetObserver_OnClick_Name:
      var params = reader.decodeStruct(WidgetObserver_OnClick_Params);
      this.onClick();
      return true;
    default:
      return false;
    }
  };

  WidgetObserverStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateWidgetObserverRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kWidgetObserver_OnClick_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = WidgetObserver_OnClick_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateWidgetObserverResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var WidgetObserver = {
    name: 'mojo.test.new_endpoint_types.mojom.WidgetObserver',
    kVersion: 0,
    ptrClass: WidgetObserverPtr,
    proxyClass: WidgetObserverProxy,
    stubClass: WidgetObserverStub,
    validateRequest: validateWidgetObserverRequest,
    validateResponse: null,
  };
  WidgetObserverStub.prototype.validator = validateWidgetObserverRequest;
  WidgetObserverProxy.prototype.validator = null;
  var kWidget_Click_Name = 1563767203;
  var kWidget_AddObserver_Name = 1998895132;

  function WidgetPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(Widget,
                                                   handleOrPtrInfo);
  }

  function WidgetAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        Widget, associatedInterfacePtrInfo);
  }

  WidgetAssociatedPtr.prototype =
      Object.create(WidgetPtr.prototype);
  WidgetAssociatedPtr.prototype.constructor =
      WidgetAssociatedPtr;

  function WidgetProxy(receiver) {
    this.receiver_ = receiver;
  }
  WidgetPtr.prototype.click = function() {
    return WidgetProxy.prototype.click
        .apply(this.ptr.getProxy(), arguments);
  };

  WidgetProxy.prototype.click = function() {
    var params_ = new Widget_Click_Params();
    var builder = new codec.MessageV0Builder(
        kWidget_Click_Name,
        codec.align(Widget_Click_Params.encodedSize));
    builder.encodeStruct(Widget_Click_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  WidgetPtr.prototype.addObserver = function() {
    return WidgetProxy.prototype.addObserver
        .apply(this.ptr.getProxy(), arguments);
  };

  WidgetProxy.prototype.addObserver = function(observer) {
    var params_ = new Widget_AddObserver_Params();
    params_.observer = observer;
    var builder = new codec.MessageV0Builder(
        kWidget_AddObserver_Name,
        codec.align(Widget_AddObserver_Params.encodedSize));
    builder.encodeStruct(Widget_AddObserver_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function WidgetStub(delegate) {
    this.delegate_ = delegate;
  }
  WidgetStub.prototype.click = function() {
    return this.delegate_ && this.delegate_.click && this.delegate_.click();
  }
  WidgetStub.prototype.addObserver = function(observer) {
    return this.delegate_ && this.delegate_.addObserver && this.delegate_.addObserver(observer);
  }

  WidgetStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kWidget_Click_Name:
      var params = reader.decodeStruct(Widget_Click_Params);
      this.click();
      return true;
    case kWidget_AddObserver_Name:
      var params = reader.decodeStruct(Widget_AddObserver_Params);
      this.addObserver(params.observer);
      return true;
    default:
      return false;
    }
  };

  WidgetStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateWidgetRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kWidget_Click_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Widget_Click_Params;
      break;
      case kWidget_AddObserver_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Widget_AddObserver_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateWidgetResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var Widget = {
    name: 'mojo.test.new_endpoint_types.mojom.Widget',
    kVersion: 0,
    ptrClass: WidgetPtr,
    proxyClass: WidgetProxy,
    stubClass: WidgetStub,
    validateRequest: validateWidgetRequest,
    validateResponse: null,
  };
  WidgetStub.prototype.validator = validateWidgetRequest;
  WidgetProxy.prototype.validator = null;
  var kWidgetClient_OnInitialized_Name = 181678311;

  function WidgetClientPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(WidgetClient,
                                                   handleOrPtrInfo);
  }

  function WidgetClientAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        WidgetClient, associatedInterfacePtrInfo);
  }

  WidgetClientAssociatedPtr.prototype =
      Object.create(WidgetClientPtr.prototype);
  WidgetClientAssociatedPtr.prototype.constructor =
      WidgetClientAssociatedPtr;

  function WidgetClientProxy(receiver) {
    this.receiver_ = receiver;
  }
  WidgetClientPtr.prototype.onInitialized = function() {
    return WidgetClientProxy.prototype.onInitialized
        .apply(this.ptr.getProxy(), arguments);
  };

  WidgetClientProxy.prototype.onInitialized = function() {
    var params_ = new WidgetClient_OnInitialized_Params();
    var builder = new codec.MessageV0Builder(
        kWidgetClient_OnInitialized_Name,
        codec.align(WidgetClient_OnInitialized_Params.encodedSize));
    builder.encodeStruct(WidgetClient_OnInitialized_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function WidgetClientStub(delegate) {
    this.delegate_ = delegate;
  }
  WidgetClientStub.prototype.onInitialized = function() {
    return this.delegate_ && this.delegate_.onInitialized && this.delegate_.onInitialized();
  }

  WidgetClientStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kWidgetClient_OnInitialized_Name:
      var params = reader.decodeStruct(WidgetClient_OnInitialized_Params);
      this.onInitialized();
      return true;
    default:
      return false;
    }
  };

  WidgetClientStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateWidgetClientRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kWidgetClient_OnInitialized_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = WidgetClient_OnInitialized_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateWidgetClientResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var WidgetClient = {
    name: 'mojo.test.new_endpoint_types.mojom.WidgetClient',
    kVersion: 0,
    ptrClass: WidgetClientPtr,
    proxyClass: WidgetClientProxy,
    stubClass: WidgetClientStub,
    validateRequest: validateWidgetClientRequest,
    validateResponse: null,
  };
  WidgetClientStub.prototype.validator = validateWidgetClientRequest;
  WidgetClientProxy.prototype.validator = null;
  var kWidgetFactory_CreateWidget_Name = 731996353;

  function WidgetFactoryPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(WidgetFactory,
                                                   handleOrPtrInfo);
  }

  function WidgetFactoryAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        WidgetFactory, associatedInterfacePtrInfo);
  }

  WidgetFactoryAssociatedPtr.prototype =
      Object.create(WidgetFactoryPtr.prototype);
  WidgetFactoryAssociatedPtr.prototype.constructor =
      WidgetFactoryAssociatedPtr;

  function WidgetFactoryProxy(receiver) {
    this.receiver_ = receiver;
  }
  WidgetFactoryPtr.prototype.createWidget = function() {
    return WidgetFactoryProxy.prototype.createWidget
        .apply(this.ptr.getProxy(), arguments);
  };

  WidgetFactoryProxy.prototype.createWidget = function(receiver, client) {
    var params_ = new WidgetFactory_CreateWidget_Params();
    params_.receiver = receiver;
    params_.client = client;
    var builder = new codec.MessageV0Builder(
        kWidgetFactory_CreateWidget_Name,
        codec.align(WidgetFactory_CreateWidget_Params.encodedSize));
    builder.encodeStruct(WidgetFactory_CreateWidget_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function WidgetFactoryStub(delegate) {
    this.delegate_ = delegate;
  }
  WidgetFactoryStub.prototype.createWidget = function(receiver, client) {
    return this.delegate_ && this.delegate_.createWidget && this.delegate_.createWidget(receiver, client);
  }

  WidgetFactoryStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kWidgetFactory_CreateWidget_Name:
      var params = reader.decodeStruct(WidgetFactory_CreateWidget_Params);
      this.createWidget(params.receiver, params.client);
      return true;
    default:
      return false;
    }
  };

  WidgetFactoryStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateWidgetFactoryRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kWidgetFactory_CreateWidget_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = WidgetFactory_CreateWidget_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateWidgetFactoryResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var WidgetFactory = {
    name: 'mojo.test.new_endpoint_types.mojom.WidgetFactory',
    kVersion: 0,
    ptrClass: WidgetFactoryPtr,
    proxyClass: WidgetFactoryProxy,
    stubClass: WidgetFactoryStub,
    validateRequest: validateWidgetFactoryRequest,
    validateResponse: null,
  };
  WidgetFactoryStub.prototype.validator = validateWidgetFactoryRequest;
  WidgetFactoryProxy.prototype.validator = null;
  var kPinger_Ping_Name = 773139529;

  function PingerPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(Pinger,
                                                   handleOrPtrInfo);
  }

  function PingerAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        Pinger, associatedInterfacePtrInfo);
  }

  PingerAssociatedPtr.prototype =
      Object.create(PingerPtr.prototype);
  PingerAssociatedPtr.prototype.constructor =
      PingerAssociatedPtr;

  function PingerProxy(receiver) {
    this.receiver_ = receiver;
  }
  PingerPtr.prototype.ping = function() {
    return PingerProxy.prototype.ping
        .apply(this.ptr.getProxy(), arguments);
  };

  PingerProxy.prototype.ping = function() {
    var params_ = new Pinger_Ping_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPinger_Ping_Name,
          codec.align(Pinger_Ping_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(Pinger_Ping_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(Pinger_Ping_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };

  function PingerStub(delegate) {
    this.delegate_ = delegate;
  }
  PingerStub.prototype.ping = function() {
    return this.delegate_ && this.delegate_.ping && this.delegate_.ping();
  }

  PingerStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  PingerStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPinger_Ping_Name:
      var params = reader.decodeStruct(Pinger_Ping_Params);
      this.ping().then(function(response) {
        var responseParams =
            new Pinger_Ping_ResponseParams();
        var builder = new codec.MessageV1Builder(
            kPinger_Ping_Name,
            codec.align(Pinger_Ping_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(Pinger_Ping_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validatePingerRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kPinger_Ping_Name:
        if (message.expectsResponse())
          paramsClass = Pinger_Ping_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validatePingerResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kPinger_Ping_Name:
        if (message.isResponse())
          paramsClass = Pinger_Ping_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var Pinger = {
    name: 'mojo.test.new_endpoint_types.mojom.Pinger',
    kVersion: 0,
    ptrClass: PingerPtr,
    proxyClass: PingerProxy,
    stubClass: PingerStub,
    validateRequest: validatePingerRequest,
    validateResponse: validatePingerResponse,
  };
  PingerStub.prototype.validator = validatePingerRequest;
  PingerProxy.prototype.validator = validatePingerResponse;
  var kAssociatedPingerHost_AddEndpoints_Name = 2009758958;

  function AssociatedPingerHostPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(AssociatedPingerHost,
                                                   handleOrPtrInfo);
  }

  function AssociatedPingerHostAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        AssociatedPingerHost, associatedInterfacePtrInfo);
  }

  AssociatedPingerHostAssociatedPtr.prototype =
      Object.create(AssociatedPingerHostPtr.prototype);
  AssociatedPingerHostAssociatedPtr.prototype.constructor =
      AssociatedPingerHostAssociatedPtr;

  function AssociatedPingerHostProxy(receiver) {
    this.receiver_ = receiver;
  }
  AssociatedPingerHostPtr.prototype.addEndpoints = function() {
    return AssociatedPingerHostProxy.prototype.addEndpoints
        .apply(this.ptr.getProxy(), arguments);
  };

  AssociatedPingerHostProxy.prototype.addEndpoints = function(receiver, remote) {
    var params_ = new AssociatedPingerHost_AddEndpoints_Params();
    params_.receiver = receiver;
    params_.remote = remote;
    var builder = new codec.MessageV2Builder(
        kAssociatedPingerHost_AddEndpoints_Name,
        codec.align(AssociatedPingerHost_AddEndpoints_Params.encodedSize));
    builder.setPayload(AssociatedPingerHost_AddEndpoints_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function AssociatedPingerHostStub(delegate) {
    this.delegate_ = delegate;
  }
  AssociatedPingerHostStub.prototype.addEndpoints = function(receiver, remote) {
    return this.delegate_ && this.delegate_.addEndpoints && this.delegate_.addEndpoints(receiver, remote);
  }

  AssociatedPingerHostStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kAssociatedPingerHost_AddEndpoints_Name:
      var params = reader.decodeStruct(AssociatedPingerHost_AddEndpoints_Params);
      this.addEndpoints(params.receiver, params.remote);
      return true;
    default:
      return false;
    }
  };

  AssociatedPingerHostStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateAssociatedPingerHostRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kAssociatedPingerHost_AddEndpoints_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = AssociatedPingerHost_AddEndpoints_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateAssociatedPingerHostResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var AssociatedPingerHost = {
    name: 'mojo.test.new_endpoint_types.mojom.AssociatedPingerHost',
    kVersion: 0,
    ptrClass: AssociatedPingerHostPtr,
    proxyClass: AssociatedPingerHostProxy,
    stubClass: AssociatedPingerHostStub,
    validateRequest: validateAssociatedPingerHostRequest,
    validateResponse: null,
  };
  AssociatedPingerHostStub.prototype.validator = validateAssociatedPingerHostRequest;
  AssociatedPingerHostProxy.prototype.validator = null;
  exports.WidgetObserver = WidgetObserver;
  exports.WidgetObserverPtr = WidgetObserverPtr;
  exports.WidgetObserverAssociatedPtr = WidgetObserverAssociatedPtr;
  exports.Widget = Widget;
  exports.WidgetPtr = WidgetPtr;
  exports.WidgetAssociatedPtr = WidgetAssociatedPtr;
  exports.WidgetClient = WidgetClient;
  exports.WidgetClientPtr = WidgetClientPtr;
  exports.WidgetClientAssociatedPtr = WidgetClientAssociatedPtr;
  exports.WidgetFactory = WidgetFactory;
  exports.WidgetFactoryPtr = WidgetFactoryPtr;
  exports.WidgetFactoryAssociatedPtr = WidgetFactoryAssociatedPtr;
  exports.Pinger = Pinger;
  exports.PingerPtr = PingerPtr;
  exports.PingerAssociatedPtr = PingerAssociatedPtr;
  exports.AssociatedPingerHost = AssociatedPingerHost;
  exports.AssociatedPingerHostPtr = AssociatedPingerHostPtr;
  exports.AssociatedPingerHostAssociatedPtr = AssociatedPingerHostAssociatedPtr;
})();