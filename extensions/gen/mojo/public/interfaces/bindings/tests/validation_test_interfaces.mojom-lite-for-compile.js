// mojo/public/interfaces/bindings/tests/validation_test_interfaces.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');





goog.provide('mojo.test.EnumA');
goog.provide('mojo.test.EnumASpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
mojo.test.EnumASpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
mojo.test.EnumA = {
  
  ENUM_A_0: 0,
  ENUM_A_1: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};

goog.provide('mojo.test.EnumB');
goog.provide('mojo.test.EnumBSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
mojo.test.EnumBSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
mojo.test.EnumB = {
  
  ENUM_B_0: 0,
  ENUM_B_1: 1,
  ENUM_B_2: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};

goog.provide('mojo.test.EmptyEnum');
goog.provide('mojo.test.EmptyEnumSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
mojo.test.EmptyEnumSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
mojo.test.EmptyEnum = {
  
};

goog.provide('mojo.test.ExtensibleEmptyEnum');
goog.provide('mojo.test.ExtensibleEmptyEnumSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
mojo.test.ExtensibleEmptyEnumSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
mojo.test.ExtensibleEmptyEnum = {
  
};

goog.provide('mojo.test.BasicEnum');
goog.provide('mojo.test.BasicEnumSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
mojo.test.BasicEnumSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
mojo.test.BasicEnum = {
  
  A: 0,
  B: 1,
  C: 0,
  D: -3,
  E: 10,
  MIN_VALUE: -3,
  MAX_VALUE: 10,
};



goog.provide('mojo.test.InterfaceA');
goog.provide('mojo.test.InterfaceAReceiver');
goog.provide('mojo.test.InterfaceACallbackRouter');
goog.provide('mojo.test.InterfaceAInterface');
goog.provide('mojo.test.InterfaceARemote');
goog.provide('mojo.test.InterfaceAPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
mojo.test.InterfaceAPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        mojo.test.InterfaceA.$interfaceName,
        scope);
  }
};

/** @interface */
mojo.test.InterfaceAInterface = class {
};

/**
 * @export
 * @implements { mojo.test.InterfaceAInterface }
 */
mojo.test.InterfaceARemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!mojo.test.InterfaceAPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          mojo.test.InterfaceAPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!mojo.test.InterfaceAPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }
};

/**
 * An object which receives request messages for the InterfaceA
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
mojo.test.InterfaceAReceiver = class {
  /**
   * @param {!mojo.test.InterfaceAInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!mojo.test.InterfaceARemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        mojo.test.InterfaceARemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.InterfaceARemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
mojo.test.InterfaceA = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "mojo.test.InterfaceA";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!mojo.test.InterfaceARemote}
   * @export
   */
  static getRemote() {
    let remote = new mojo.test.InterfaceARemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the InterfaceA
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
mojo.test.InterfaceACallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      mojo.test.InterfaceARemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.InterfaceARemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('mojo.test.BoundsCheckTestInterface');
goog.provide('mojo.test.BoundsCheckTestInterfaceReceiver');
goog.provide('mojo.test.BoundsCheckTestInterfaceCallbackRouter');
goog.provide('mojo.test.BoundsCheckTestInterfaceInterface');
goog.provide('mojo.test.BoundsCheckTestInterfaceRemote');
goog.provide('mojo.test.BoundsCheckTestInterfacePendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
mojo.test.BoundsCheckTestInterfacePendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        mojo.test.BoundsCheckTestInterface.$interfaceName,
        scope);
  }
};

/** @interface */
mojo.test.BoundsCheckTestInterfaceInterface = class {
  
  /**
   * @param { !number } param0
   * @return {!Promise<{
        param0: !number,
   *  }>}
   */

  method0(param0) {}
  
  /**
   * @param { !number } param0
   */

  method1(param0) {}
};

/**
 * @export
 * @implements { mojo.test.BoundsCheckTestInterfaceInterface }
 */
mojo.test.BoundsCheckTestInterfaceRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!mojo.test.BoundsCheckTestInterfacePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          mojo.test.BoundsCheckTestInterfacePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!mojo.test.BoundsCheckTestInterfacePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !number } param0
   * @return {!Promise<{
        param0: !number,
   *  }>}
   */

  method0(
      param0) {
    return this.proxy.sendMessage(
        0,
        mojo.test.BoundsCheckTestInterface_Method0_ParamsSpec.$,
        mojo.test.BoundsCheckTestInterface_Method0_ResponseParamsSpec.$,
        [
          param0
        ]);
  }

  
  /**
   * @param { !number } param0
   */

  method1(
      param0) {
    this.proxy.sendMessage(
        1,
        mojo.test.BoundsCheckTestInterface_Method1_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }
};

/**
 * An object which receives request messages for the BoundsCheckTestInterface
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
mojo.test.BoundsCheckTestInterfaceReceiver = class {
  /**
   * @param {!mojo.test.BoundsCheckTestInterfaceInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!mojo.test.BoundsCheckTestInterfaceRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        mojo.test.BoundsCheckTestInterfaceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.BoundsCheckTestInterfaceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        mojo.test.BoundsCheckTestInterface_Method0_ParamsSpec.$,
        mojo.test.BoundsCheckTestInterface_Method0_ResponseParamsSpec.$,
        impl.method0.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        mojo.test.BoundsCheckTestInterface_Method1_ParamsSpec.$,
        null,
        impl.method1.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
mojo.test.BoundsCheckTestInterface = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "mojo.test.BoundsCheckTestInterface";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!mojo.test.BoundsCheckTestInterfaceRemote}
   * @export
   */
  static getRemote() {
    let remote = new mojo.test.BoundsCheckTestInterfaceRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the BoundsCheckTestInterface
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
mojo.test.BoundsCheckTestInterfaceCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      mojo.test.BoundsCheckTestInterfaceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.BoundsCheckTestInterfaceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method0 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        mojo.test.BoundsCheckTestInterface_Method0_ParamsSpec.$,
        mojo.test.BoundsCheckTestInterface_Method0_ResponseParamsSpec.$,
        this.method0.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method1 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        mojo.test.BoundsCheckTestInterface_Method1_ParamsSpec.$,
        null,
        this.method1.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('mojo.test.ConformanceTestInterface');
goog.provide('mojo.test.ConformanceTestInterfaceReceiver');
goog.provide('mojo.test.ConformanceTestInterfaceCallbackRouter');
goog.provide('mojo.test.ConformanceTestInterfaceInterface');
goog.provide('mojo.test.ConformanceTestInterfaceRemote');
goog.provide('mojo.test.ConformanceTestInterfacePendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
mojo.test.ConformanceTestInterfacePendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        mojo.test.ConformanceTestInterface.$interfaceName,
        scope);
  }
};

/** @interface */
mojo.test.ConformanceTestInterfaceInterface = class {
  
  /**
   * @param { !number } param0
   */

  method0(param0) {}
  
  /**
   * @param { !mojo.test.StructA } param0
   */

  method1(param0) {}
  
  /**
   * @param { !mojo.test.StructB } param0
   * @param { !mojo.test.StructA } param1
   */

  method2(param0, param1) {}
  
  /**
   * @param { !Array<!boolean> } param0
   */

  method3(param0) {}
  
  /**
   * @param { !mojo.test.StructC } param0
   * @param { !Array<!number> } param1
   */

  method4(param0, param1) {}
  
  /**
   * @param { !mojo.test.StructE } param0
   * @param { !MojoHandle } param1
   */

  method5(param0, param1) {}
  
  /**
   * @param { !Array<!Array<!number>> } param0
   */

  method6(param0) {}
  
  /**
   * @param { !mojo.test.StructF } param0
   * @param { !Array<?Array<!number>> } param1
   */

  method7(param0, param1) {}
  
  /**
   * @param { !Array<?Array<!string>> } param0
   */

  method8(param0) {}
  
  /**
   * @param { ?Array<!Array<?MojoHandle>> } param0
   */

  method9(param0) {}
  
  /**
   * @param { !Object<!string, !number> } param0
   */

  method10(param0) {}
  
  /**
   * @param { !mojo.test.StructG } param0
   */

  method11(param0) {}
  
  /**
   * @param { !number } param0
   * @return {!Promise<{
        param0: !number,
   *  }>}
   */

  method12(param0) {}
  
  /**
   * @param { ?mojo.test.InterfaceARemote } param0
   * @param { !number } param1
   * @param { ?mojo.test.InterfaceARemote } param2
   */

  method13(param0, param1, param2) {}
  
  /**
   * @param { !mojo.test.EnumA } param0
   * @param { !mojo.test.EnumB } param1
   */

  method14(param0, param1) {}
  
  /**
   * @param { ?Array<!mojo.test.EnumA> } param0
   * @param { ?Array<!mojo.test.EnumB> } param1
   */

  method15(param0, param1) {}
  
  /**
   * @param { ?Object<!mojo.test.EnumA, !mojo.test.EnumA> } param0
   */

  method16(param0) {}
  
  /**
   * @param { !Array<!mojo.test.InterfaceARemote> } param0
   */

  method17(param0) {}
  
  /**
   * @param { ?mojo.test.UnionA } param0
   */

  method18(param0) {}
  
  /**
   * @param { !mojo.test.Recursive } recursive
   */

  method19(recursive) {}
  
  /**
   * @param { !Map<!mojo.test.StructB, !number> } param0
   */

  method20(param0) {}
  
  /**
   * @param { !mojo.test.ExtensibleEmptyEnum } param0
   */

  method21(param0) {}
  
  /**
   * @param { !mojo.test.EmptyEnum } param0
   */

  method22(param0) {}
};

/**
 * @export
 * @implements { mojo.test.ConformanceTestInterfaceInterface }
 */
mojo.test.ConformanceTestInterfaceRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!mojo.test.ConformanceTestInterfacePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          mojo.test.ConformanceTestInterfacePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!mojo.test.ConformanceTestInterfacePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !number } param0
   */

  method0(
      param0) {
    this.proxy.sendMessage(
        0,
        mojo.test.ConformanceTestInterface_Method0_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }

  
  /**
   * @param { !mojo.test.StructA } param0
   */

  method1(
      param0) {
    this.proxy.sendMessage(
        1,
        mojo.test.ConformanceTestInterface_Method1_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }

  
  /**
   * @param { !mojo.test.StructB } param0
   * @param { !mojo.test.StructA } param1
   */

  method2(
      param0,
      param1) {
    this.proxy.sendMessage(
        2,
        mojo.test.ConformanceTestInterface_Method2_ParamsSpec.$,
        null,
        [
          param0,
          param1
        ]);
  }

  
  /**
   * @param { !Array<!boolean> } param0
   */

  method3(
      param0) {
    this.proxy.sendMessage(
        3,
        mojo.test.ConformanceTestInterface_Method3_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }

  
  /**
   * @param { !mojo.test.StructC } param0
   * @param { !Array<!number> } param1
   */

  method4(
      param0,
      param1) {
    this.proxy.sendMessage(
        4,
        mojo.test.ConformanceTestInterface_Method4_ParamsSpec.$,
        null,
        [
          param0,
          param1
        ]);
  }

  
  /**
   * @param { !mojo.test.StructE } param0
   * @param { !MojoHandle } param1
   */

  method5(
      param0,
      param1) {
    this.proxy.sendMessage(
        5,
        mojo.test.ConformanceTestInterface_Method5_ParamsSpec.$,
        null,
        [
          param0,
          param1
        ]);
  }

  
  /**
   * @param { !Array<!Array<!number>> } param0
   */

  method6(
      param0) {
    this.proxy.sendMessage(
        6,
        mojo.test.ConformanceTestInterface_Method6_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }

  
  /**
   * @param { !mojo.test.StructF } param0
   * @param { !Array<?Array<!number>> } param1
   */

  method7(
      param0,
      param1) {
    this.proxy.sendMessage(
        7,
        mojo.test.ConformanceTestInterface_Method7_ParamsSpec.$,
        null,
        [
          param0,
          param1
        ]);
  }

  
  /**
   * @param { !Array<?Array<!string>> } param0
   */

  method8(
      param0) {
    this.proxy.sendMessage(
        8,
        mojo.test.ConformanceTestInterface_Method8_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }

  
  /**
   * @param { ?Array<!Array<?MojoHandle>> } param0
   */

  method9(
      param0) {
    this.proxy.sendMessage(
        9,
        mojo.test.ConformanceTestInterface_Method9_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }

  
  /**
   * @param { !Object<!string, !number> } param0
   */

  method10(
      param0) {
    this.proxy.sendMessage(
        10,
        mojo.test.ConformanceTestInterface_Method10_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }

  
  /**
   * @param { !mojo.test.StructG } param0
   */

  method11(
      param0) {
    this.proxy.sendMessage(
        11,
        mojo.test.ConformanceTestInterface_Method11_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }

  
  /**
   * @param { !number } param0
   * @return {!Promise<{
        param0: !number,
   *  }>}
   */

  method12(
      param0) {
    return this.proxy.sendMessage(
        12,
        mojo.test.ConformanceTestInterface_Method12_ParamsSpec.$,
        mojo.test.ConformanceTestInterface_Method12_ResponseParamsSpec.$,
        [
          param0
        ]);
  }

  
  /**
   * @param { ?mojo.test.InterfaceARemote } param0
   * @param { !number } param1
   * @param { ?mojo.test.InterfaceARemote } param2
   */

  method13(
      param0,
      param1,
      param2) {
    this.proxy.sendMessage(
        13,
        mojo.test.ConformanceTestInterface_Method13_ParamsSpec.$,
        null,
        [
          param0,
          param1,
          param2
        ]);
  }

  
  /**
   * @param { !mojo.test.EnumA } param0
   * @param { !mojo.test.EnumB } param1
   */

  method14(
      param0,
      param1) {
    this.proxy.sendMessage(
        14,
        mojo.test.ConformanceTestInterface_Method14_ParamsSpec.$,
        null,
        [
          param0,
          param1
        ]);
  }

  
  /**
   * @param { ?Array<!mojo.test.EnumA> } param0
   * @param { ?Array<!mojo.test.EnumB> } param1
   */

  method15(
      param0,
      param1) {
    this.proxy.sendMessage(
        15,
        mojo.test.ConformanceTestInterface_Method15_ParamsSpec.$,
        null,
        [
          param0,
          param1
        ]);
  }

  
  /**
   * @param { ?Object<!mojo.test.EnumA, !mojo.test.EnumA> } param0
   */

  method16(
      param0) {
    this.proxy.sendMessage(
        16,
        mojo.test.ConformanceTestInterface_Method16_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }

  
  /**
   * @param { !Array<!mojo.test.InterfaceARemote> } param0
   */

  method17(
      param0) {
    this.proxy.sendMessage(
        17,
        mojo.test.ConformanceTestInterface_Method17_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }

  
  /**
   * @param { ?mojo.test.UnionA } param0
   */

  method18(
      param0) {
    this.proxy.sendMessage(
        18,
        mojo.test.ConformanceTestInterface_Method18_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }

  
  /**
   * @param { !mojo.test.Recursive } recursive
   */

  method19(
      recursive) {
    this.proxy.sendMessage(
        19,
        mojo.test.ConformanceTestInterface_Method19_ParamsSpec.$,
        null,
        [
          recursive
        ]);
  }

  
  /**
   * @param { !Map<!mojo.test.StructB, !number> } param0
   */

  method20(
      param0) {
    this.proxy.sendMessage(
        20,
        mojo.test.ConformanceTestInterface_Method20_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }

  
  /**
   * @param { !mojo.test.ExtensibleEmptyEnum } param0
   */

  method21(
      param0) {
    this.proxy.sendMessage(
        21,
        mojo.test.ConformanceTestInterface_Method21_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }

  
  /**
   * @param { !mojo.test.EmptyEnum } param0
   */

  method22(
      param0) {
    this.proxy.sendMessage(
        22,
        mojo.test.ConformanceTestInterface_Method22_ParamsSpec.$,
        null,
        [
          param0
        ]);
  }
};

/**
 * An object which receives request messages for the ConformanceTestInterface
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
mojo.test.ConformanceTestInterfaceReceiver = class {
  /**
   * @param {!mojo.test.ConformanceTestInterfaceInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!mojo.test.ConformanceTestInterfaceRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        mojo.test.ConformanceTestInterfaceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.ConformanceTestInterfaceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        mojo.test.ConformanceTestInterface_Method0_ParamsSpec.$,
        null,
        impl.method0.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        mojo.test.ConformanceTestInterface_Method1_ParamsSpec.$,
        null,
        impl.method1.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        mojo.test.ConformanceTestInterface_Method2_ParamsSpec.$,
        null,
        impl.method2.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        mojo.test.ConformanceTestInterface_Method3_ParamsSpec.$,
        null,
        impl.method3.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        mojo.test.ConformanceTestInterface_Method4_ParamsSpec.$,
        null,
        impl.method4.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        mojo.test.ConformanceTestInterface_Method5_ParamsSpec.$,
        null,
        impl.method5.bind(impl));
    this.helper_internal_.registerHandler(
        6,
        mojo.test.ConformanceTestInterface_Method6_ParamsSpec.$,
        null,
        impl.method6.bind(impl));
    this.helper_internal_.registerHandler(
        7,
        mojo.test.ConformanceTestInterface_Method7_ParamsSpec.$,
        null,
        impl.method7.bind(impl));
    this.helper_internal_.registerHandler(
        8,
        mojo.test.ConformanceTestInterface_Method8_ParamsSpec.$,
        null,
        impl.method8.bind(impl));
    this.helper_internal_.registerHandler(
        9,
        mojo.test.ConformanceTestInterface_Method9_ParamsSpec.$,
        null,
        impl.method9.bind(impl));
    this.helper_internal_.registerHandler(
        10,
        mojo.test.ConformanceTestInterface_Method10_ParamsSpec.$,
        null,
        impl.method10.bind(impl));
    this.helper_internal_.registerHandler(
        11,
        mojo.test.ConformanceTestInterface_Method11_ParamsSpec.$,
        null,
        impl.method11.bind(impl));
    this.helper_internal_.registerHandler(
        12,
        mojo.test.ConformanceTestInterface_Method12_ParamsSpec.$,
        mojo.test.ConformanceTestInterface_Method12_ResponseParamsSpec.$,
        impl.method12.bind(impl));
    this.helper_internal_.registerHandler(
        13,
        mojo.test.ConformanceTestInterface_Method13_ParamsSpec.$,
        null,
        impl.method13.bind(impl));
    this.helper_internal_.registerHandler(
        14,
        mojo.test.ConformanceTestInterface_Method14_ParamsSpec.$,
        null,
        impl.method14.bind(impl));
    this.helper_internal_.registerHandler(
        15,
        mojo.test.ConformanceTestInterface_Method15_ParamsSpec.$,
        null,
        impl.method15.bind(impl));
    this.helper_internal_.registerHandler(
        16,
        mojo.test.ConformanceTestInterface_Method16_ParamsSpec.$,
        null,
        impl.method16.bind(impl));
    this.helper_internal_.registerHandler(
        17,
        mojo.test.ConformanceTestInterface_Method17_ParamsSpec.$,
        null,
        impl.method17.bind(impl));
    this.helper_internal_.registerHandler(
        18,
        mojo.test.ConformanceTestInterface_Method18_ParamsSpec.$,
        null,
        impl.method18.bind(impl));
    this.helper_internal_.registerHandler(
        19,
        mojo.test.ConformanceTestInterface_Method19_ParamsSpec.$,
        null,
        impl.method19.bind(impl));
    this.helper_internal_.registerHandler(
        20,
        mojo.test.ConformanceTestInterface_Method20_ParamsSpec.$,
        null,
        impl.method20.bind(impl));
    this.helper_internal_.registerHandler(
        21,
        mojo.test.ConformanceTestInterface_Method21_ParamsSpec.$,
        null,
        impl.method21.bind(impl));
    this.helper_internal_.registerHandler(
        22,
        mojo.test.ConformanceTestInterface_Method22_ParamsSpec.$,
        null,
        impl.method22.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
mojo.test.ConformanceTestInterface = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "mojo.test.ConformanceTestInterface";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!mojo.test.ConformanceTestInterfaceRemote}
   * @export
   */
  static getRemote() {
    let remote = new mojo.test.ConformanceTestInterfaceRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the ConformanceTestInterface
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
mojo.test.ConformanceTestInterfaceCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      mojo.test.ConformanceTestInterfaceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.ConformanceTestInterfaceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method0 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        mojo.test.ConformanceTestInterface_Method0_ParamsSpec.$,
        null,
        this.method0.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method1 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        mojo.test.ConformanceTestInterface_Method1_ParamsSpec.$,
        null,
        this.method1.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method2 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        mojo.test.ConformanceTestInterface_Method2_ParamsSpec.$,
        null,
        this.method2.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method3 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        mojo.test.ConformanceTestInterface_Method3_ParamsSpec.$,
        null,
        this.method3.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method4 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        mojo.test.ConformanceTestInterface_Method4_ParamsSpec.$,
        null,
        this.method4.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method5 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        mojo.test.ConformanceTestInterface_Method5_ParamsSpec.$,
        null,
        this.method5.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method6 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        6,
        mojo.test.ConformanceTestInterface_Method6_ParamsSpec.$,
        null,
        this.method6.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method7 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        7,
        mojo.test.ConformanceTestInterface_Method7_ParamsSpec.$,
        null,
        this.method7.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method8 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        8,
        mojo.test.ConformanceTestInterface_Method8_ParamsSpec.$,
        null,
        this.method8.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method9 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        9,
        mojo.test.ConformanceTestInterface_Method9_ParamsSpec.$,
        null,
        this.method9.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method10 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        10,
        mojo.test.ConformanceTestInterface_Method10_ParamsSpec.$,
        null,
        this.method10.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method11 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        11,
        mojo.test.ConformanceTestInterface_Method11_ParamsSpec.$,
        null,
        this.method11.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method12 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        12,
        mojo.test.ConformanceTestInterface_Method12_ParamsSpec.$,
        mojo.test.ConformanceTestInterface_Method12_ResponseParamsSpec.$,
        this.method12.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method13 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        13,
        mojo.test.ConformanceTestInterface_Method13_ParamsSpec.$,
        null,
        this.method13.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method14 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        14,
        mojo.test.ConformanceTestInterface_Method14_ParamsSpec.$,
        null,
        this.method14.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method15 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        15,
        mojo.test.ConformanceTestInterface_Method15_ParamsSpec.$,
        null,
        this.method15.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method16 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        16,
        mojo.test.ConformanceTestInterface_Method16_ParamsSpec.$,
        null,
        this.method16.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method17 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        17,
        mojo.test.ConformanceTestInterface_Method17_ParamsSpec.$,
        null,
        this.method17.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method18 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        18,
        mojo.test.ConformanceTestInterface_Method18_ParamsSpec.$,
        null,
        this.method18.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method19 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        19,
        mojo.test.ConformanceTestInterface_Method19_ParamsSpec.$,
        null,
        this.method19.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method20 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        20,
        mojo.test.ConformanceTestInterface_Method20_ParamsSpec.$,
        null,
        this.method20.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method21 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        21,
        mojo.test.ConformanceTestInterface_Method21_ParamsSpec.$,
        null,
        this.method21.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method22 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        22,
        mojo.test.ConformanceTestInterface_Method22_ParamsSpec.$,
        null,
        this.method22.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('mojo.test.IntegrationTestInterface');
goog.provide('mojo.test.IntegrationTestInterfaceReceiver');
goog.provide('mojo.test.IntegrationTestInterfaceCallbackRouter');
goog.provide('mojo.test.IntegrationTestInterfaceInterface');
goog.provide('mojo.test.IntegrationTestInterfaceRemote');
goog.provide('mojo.test.IntegrationTestInterfacePendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
mojo.test.IntegrationTestInterfacePendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        mojo.test.IntegrationTestInterface.$interfaceName,
        scope);
  }
};

/** @interface */
mojo.test.IntegrationTestInterfaceInterface = class {
  
  /**
   * @param { !mojo.test.BasicStruct } param0
   * @return {!Promise<{
        param0: !Array<!number>,
   *  }>}
   */

  method0(param0) {}
};

/**
 * @export
 * @implements { mojo.test.IntegrationTestInterfaceInterface }
 */
mojo.test.IntegrationTestInterfaceRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!mojo.test.IntegrationTestInterfacePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          mojo.test.IntegrationTestInterfacePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!mojo.test.IntegrationTestInterfacePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !mojo.test.BasicStruct } param0
   * @return {!Promise<{
        param0: !Array<!number>,
   *  }>}
   */

  method0(
      param0) {
    return this.proxy.sendMessage(
        0,
        mojo.test.IntegrationTestInterface_Method0_ParamsSpec.$,
        mojo.test.IntegrationTestInterface_Method0_ResponseParamsSpec.$,
        [
          param0
        ]);
  }
};

/**
 * An object which receives request messages for the IntegrationTestInterface
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
mojo.test.IntegrationTestInterfaceReceiver = class {
  /**
   * @param {!mojo.test.IntegrationTestInterfaceInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!mojo.test.IntegrationTestInterfaceRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        mojo.test.IntegrationTestInterfaceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.IntegrationTestInterfaceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        mojo.test.IntegrationTestInterface_Method0_ParamsSpec.$,
        mojo.test.IntegrationTestInterface_Method0_ResponseParamsSpec.$,
        impl.method0.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
mojo.test.IntegrationTestInterface = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "mojo.test.IntegrationTestInterface";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!mojo.test.IntegrationTestInterfaceRemote}
   * @export
   */
  static getRemote() {
    let remote = new mojo.test.IntegrationTestInterfaceRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the IntegrationTestInterface
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
mojo.test.IntegrationTestInterfaceCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      mojo.test.IntegrationTestInterfaceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.IntegrationTestInterfaceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.method0 =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        mojo.test.IntegrationTestInterface_Method0_ParamsSpec.$,
        mojo.test.IntegrationTestInterface_Method0_ResponseParamsSpec.$,
        this.method0.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('mojo.test.StructASpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.StructASpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.StructBSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.StructBSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.StructCSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.StructCSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.StructDSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.StructDSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.StructESpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.StructESpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.StructFSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.StructFSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.StructGSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.StructGSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.BasicStructSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.BasicStructSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.StructWithEnumSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.StructWithEnumSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.RecursiveSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.RecursiveSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.BoundsCheckTestInterface_Method0_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.BoundsCheckTestInterface_Method0_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.BoundsCheckTestInterface_Method0_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.BoundsCheckTestInterface_Method0_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.BoundsCheckTestInterface_Method1_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.BoundsCheckTestInterface_Method1_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method0_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method0_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method1_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method1_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method2_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method2_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method3_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method3_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method4_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method4_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method5_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method5_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method6_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method6_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method7_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method7_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method8_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method8_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method9_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method9_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method10_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method10_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method11_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method11_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method12_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method12_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method12_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method12_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method13_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method13_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method14_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method14_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method15_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method15_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method16_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method16_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method17_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method17_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method18_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method18_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method19_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method19_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method20_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method20_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method21_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method21_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.ConformanceTestInterface_Method22_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.ConformanceTestInterface_Method22_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.IntegrationTestInterface_Method0_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.IntegrationTestInterface_Method0_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.IntegrationTestInterface_Method0_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.IntegrationTestInterface_Method0_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.UnionASpec');
/**
 * @const { {$:!mojo.internal.MojomType} }
 * @export
 */
mojo.test.UnionASpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    mojo.test.StructASpec.$,
    'StructA',
    [
      mojo.internal.StructField(
        'i', 0,
        0,
        mojo.internal.Uint64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.StructA');

/** @record */
mojo.test.StructA = class {
  constructor() {
    /** @export { !bigint } */
    this.i;
  }
};




mojo.internal.Struct(
    mojo.test.StructBSpec.$,
    'StructB',
    [
      mojo.internal.StructField(
        'structA', 0,
        0,
        mojo.test.StructASpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.StructB');

/** @record */
mojo.test.StructB = class {
  constructor() {
    /** @export { !mojo.test.StructA } */
    this.structA;
  }
};




mojo.internal.Struct(
    mojo.test.StructCSpec.$,
    'StructC',
    [
      mojo.internal.StructField(
        'data', 0,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.StructC');

/** @record */
mojo.test.StructC = class {
  constructor() {
    /** @export { !Array<!number> } */
    this.data;
  }
};




mojo.internal.Struct(
    mojo.test.StructDSpec.$,
    'StructD',
    [
      mojo.internal.StructField(
        'messagePipes', 0,
        0,
        mojo.internal.Array(mojo.internal.Handle, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.StructD');

/** @record */
mojo.test.StructD = class {
  constructor() {
    /** @export { !Array<!MojoHandle> } */
    this.messagePipes;
  }
};




mojo.internal.Struct(
    mojo.test.StructESpec.$,
    'StructE',
    [
      mojo.internal.StructField(
        'structD', 0,
        0,
        mojo.test.StructDSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'dataPipeConsumer', 8,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('mojo.test.StructE');

/** @record */
mojo.test.StructE = class {
  constructor() {
    /** @export { !mojo.test.StructD } */
    this.structD;
    /** @export { !MojoHandle } */
    this.dataPipeConsumer;
  }
};




mojo.internal.Struct(
    mojo.test.StructFSpec.$,
    'StructF',
    [
      mojo.internal.StructField(
        'fixedSizeArray', 0,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.StructF');

/** @record */
mojo.test.StructF = class {
  constructor() {
    /** @export { !Array<!number> } */
    this.fixedSizeArray;
  }
};




mojo.internal.Struct(
    mojo.test.StructGSpec.$,
    'StructG',
    [
      mojo.internal.StructField(
        'i', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'structA', 8,
        0,
        mojo.test.StructASpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'str', 16,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'b', 4,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],[1, 24],[3, 32],]);



goog.provide('mojo.test.StructG');

/** @record */
mojo.test.StructG = class {
  constructor() {
    /** @export { !number } */
    this.i;
    /** @export { !boolean } */
    this.b;
    /** @export { (mojo.test.StructA|undefined) } */
    this.structA;
    /** @export { (string|undefined) } */
    this.str;
  }
};




mojo.internal.Struct(
    mojo.test.BasicStructSpec.$,
    'BasicStruct',
    [
      mojo.internal.StructField(
        'a', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.BasicStruct');

/** @record */
mojo.test.BasicStruct = class {
  constructor() {
    /** @export { !number } */
    this.a;
  }
};



goog.provide('mojo.test.StructWithEnum_EnumWithin');
goog.provide('mojo.test.StructWithEnumSpec.EnumWithinSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
mojo.test.StructWithEnumSpec.EnumWithinSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
mojo.test.StructWithEnum_EnumWithin = {
  
  A: 0,
  B: 1,
  C: 2,
  D: 3,
  MIN_VALUE: 0,
  MAX_VALUE: 3,
};


mojo.internal.Struct(
    mojo.test.StructWithEnumSpec.$,
    'StructWithEnum',
    [
    ],
    [[0, 8],]);



goog.provide('mojo.test.StructWithEnum');

/** @record */
mojo.test.StructWithEnum = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mojo.test.RecursiveSpec.$,
    'Recursive',
    [
      mojo.internal.StructField(
        'recursive', 0,
        0,
        mojo.test.RecursiveSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.Recursive');

/** @record */
mojo.test.Recursive = class {
  constructor() {
    /** @export { (mojo.test.Recursive|undefined) } */
    this.recursive;
  }
};




mojo.internal.Struct(
    mojo.test.BoundsCheckTestInterface_Method0_ParamsSpec.$,
    'BoundsCheckTestInterface_Method0_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Uint8,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.BoundsCheckTestInterface_Method0_Params');

/** @record */
mojo.test.BoundsCheckTestInterface_Method0_Params = class {
  constructor() {
    /** @export { !number } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.BoundsCheckTestInterface_Method0_ResponseParamsSpec.$,
    'BoundsCheckTestInterface_Method0_ResponseParams',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Uint8,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.BoundsCheckTestInterface_Method0_ResponseParams');

/** @record */
mojo.test.BoundsCheckTestInterface_Method0_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.BoundsCheckTestInterface_Method1_ParamsSpec.$,
    'BoundsCheckTestInterface_Method1_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Uint8,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.BoundsCheckTestInterface_Method1_Params');

/** @record */
mojo.test.BoundsCheckTestInterface_Method1_Params = class {
  constructor() {
    /** @export { !number } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method0_ParamsSpec.$,
    'ConformanceTestInterface_Method0_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method0_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method0_Params = class {
  constructor() {
    /** @export { !number } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method1_ParamsSpec.$,
    'ConformanceTestInterface_Method1_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.test.StructASpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method1_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method1_Params = class {
  constructor() {
    /** @export { !mojo.test.StructA } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method2_ParamsSpec.$,
    'ConformanceTestInterface_Method2_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.test.StructBSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'param1', 8,
        0,
        mojo.test.StructASpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('mojo.test.ConformanceTestInterface_Method2_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method2_Params = class {
  constructor() {
    /** @export { !mojo.test.StructB } */
    this.param0;
    /** @export { !mojo.test.StructA } */
    this.param1;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method3_ParamsSpec.$,
    'ConformanceTestInterface_Method3_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Array(mojo.internal.Bool, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method3_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method3_Params = class {
  constructor() {
    /** @export { !Array<!boolean> } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method4_ParamsSpec.$,
    'ConformanceTestInterface_Method4_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.test.StructCSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'param1', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('mojo.test.ConformanceTestInterface_Method4_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method4_Params = class {
  constructor() {
    /** @export { !mojo.test.StructC } */
    this.param0;
    /** @export { !Array<!number> } */
    this.param1;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method5_ParamsSpec.$,
    'ConformanceTestInterface_Method5_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.test.StructESpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'param1', 8,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('mojo.test.ConformanceTestInterface_Method5_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method5_Params = class {
  constructor() {
    /** @export { !mojo.test.StructE } */
    this.param0;
    /** @export { !MojoHandle } */
    this.param1;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method6_ParamsSpec.$,
    'ConformanceTestInterface_Method6_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Array(mojo.internal.Array(mojo.internal.Uint8, false), false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method6_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method6_Params = class {
  constructor() {
    /** @export { !Array<!Array<!number>> } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method7_ParamsSpec.$,
    'ConformanceTestInterface_Method7_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.test.StructFSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'param1', 8,
        0,
        mojo.internal.Array(mojo.internal.Array(mojo.internal.Uint8, false), true),
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('mojo.test.ConformanceTestInterface_Method7_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method7_Params = class {
  constructor() {
    /** @export { !mojo.test.StructF } */
    this.param0;
    /** @export { !Array<?Array<!number>> } */
    this.param1;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method8_ParamsSpec.$,
    'ConformanceTestInterface_Method8_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Array(mojo.internal.Array(mojo.internal.String, false), true),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method8_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method8_Params = class {
  constructor() {
    /** @export { !Array<?Array<!string>> } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method9_ParamsSpec.$,
    'ConformanceTestInterface_Method9_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Array(mojo.internal.Array(mojo.internal.Handle, true), false),
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method9_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method9_Params = class {
  constructor() {
    /** @export { (Array<!Array<?MojoHandle>>|undefined) } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method10_ParamsSpec.$,
    'ConformanceTestInterface_Method10_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Map(mojo.internal.String, mojo.internal.Uint8, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method10_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method10_Params = class {
  constructor() {
    /** @export { !Object<!string, !number> } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method11_ParamsSpec.$,
    'ConformanceTestInterface_Method11_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.test.StructGSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method11_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method11_Params = class {
  constructor() {
    /** @export { !mojo.test.StructG } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method12_ParamsSpec.$,
    'ConformanceTestInterface_Method12_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method12_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method12_Params = class {
  constructor() {
    /** @export { !number } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method12_ResponseParamsSpec.$,
    'ConformanceTestInterface_Method12_ResponseParams',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method12_ResponseParams');

/** @record */
mojo.test.ConformanceTestInterface_Method12_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method13_ParamsSpec.$,
    'ConformanceTestInterface_Method13_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.InterfaceProxy(mojo.test.InterfaceARemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'param1', 8,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'param2', 12,
        0,
        mojo.internal.InterfaceProxy(mojo.test.InterfaceARemote),
        null,
        true /* nullable */),
    ],
    [[0, 32],]);



goog.provide('mojo.test.ConformanceTestInterface_Method13_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method13_Params = class {
  constructor() {
    /** @export { (mojo.test.InterfaceARemote|undefined) } */
    this.param0;
    /** @export { !number } */
    this.param1;
    /** @export { (mojo.test.InterfaceARemote|undefined) } */
    this.param2;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method14_ParamsSpec.$,
    'ConformanceTestInterface_Method14_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.test.EnumASpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'param1', 4,
        0,
        mojo.test.EnumBSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method14_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method14_Params = class {
  constructor() {
    /** @export { !mojo.test.EnumA } */
    this.param0;
    /** @export { !mojo.test.EnumB } */
    this.param1;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method15_ParamsSpec.$,
    'ConformanceTestInterface_Method15_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Array(mojo.test.EnumASpec.$, false),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'param1', 8,
        0,
        mojo.internal.Array(mojo.test.EnumBSpec.$, false),
        null,
        true /* nullable */),
    ],
    [[0, 24],]);



goog.provide('mojo.test.ConformanceTestInterface_Method15_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method15_Params = class {
  constructor() {
    /** @export { (Array<!mojo.test.EnumA>|undefined) } */
    this.param0;
    /** @export { (Array<!mojo.test.EnumB>|undefined) } */
    this.param1;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method16_ParamsSpec.$,
    'ConformanceTestInterface_Method16_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Map(mojo.test.EnumASpec.$, mojo.test.EnumASpec.$, false),
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method16_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method16_Params = class {
  constructor() {
    /** @export { (Object<!mojo.test.EnumA, !mojo.test.EnumA>|undefined) } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method17_ParamsSpec.$,
    'ConformanceTestInterface_Method17_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Array(mojo.internal.InterfaceProxy(mojo.test.InterfaceARemote), false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method17_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method17_Params = class {
  constructor() {
    /** @export { !Array<!mojo.test.InterfaceARemote> } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method18_ParamsSpec.$,
    'ConformanceTestInterface_Method18_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.test.UnionASpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 24],]);



goog.provide('mojo.test.ConformanceTestInterface_Method18_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method18_Params = class {
  constructor() {
    /** @export { (mojo.test.UnionA|undefined) } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method19_ParamsSpec.$,
    'ConformanceTestInterface_Method19_Params',
    [
      mojo.internal.StructField(
        'recursive', 0,
        0,
        mojo.test.RecursiveSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method19_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method19_Params = class {
  constructor() {
    /** @export { !mojo.test.Recursive } */
    this.recursive;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method20_ParamsSpec.$,
    'ConformanceTestInterface_Method20_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Map(mojo.test.StructBSpec.$, mojo.internal.Uint8, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method20_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method20_Params = class {
  constructor() {
    /** @export { !Map<!mojo.test.StructB, !number> } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method21_ParamsSpec.$,
    'ConformanceTestInterface_Method21_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.test.ExtensibleEmptyEnumSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method21_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method21_Params = class {
  constructor() {
    /** @export { !mojo.test.ExtensibleEmptyEnum } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.ConformanceTestInterface_Method22_ParamsSpec.$,
    'ConformanceTestInterface_Method22_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.test.EmptyEnumSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.ConformanceTestInterface_Method22_Params');

/** @record */
mojo.test.ConformanceTestInterface_Method22_Params = class {
  constructor() {
    /** @export { !mojo.test.EmptyEnum } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.IntegrationTestInterface_Method0_ParamsSpec.$,
    'IntegrationTestInterface_Method0_Params',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.test.BasicStructSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.IntegrationTestInterface_Method0_Params');

/** @record */
mojo.test.IntegrationTestInterface_Method0_Params = class {
  constructor() {
    /** @export { !mojo.test.BasicStruct } */
    this.param0;
  }
};




mojo.internal.Struct(
    mojo.test.IntegrationTestInterface_Method0_ResponseParamsSpec.$,
    'IntegrationTestInterface_Method0_ResponseParams',
    [
      mojo.internal.StructField(
        'param0', 0,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.IntegrationTestInterface_Method0_ResponseParams');

/** @record */
mojo.test.IntegrationTestInterface_Method0_ResponseParams = class {
  constructor() {
    /** @export { !Array<!number> } */
    this.param0;
  }
};


goog.provide('mojo.test.UnionA');


mojo.internal.Union(
    mojo.test.UnionASpec.$, 'UnionA',
    {
      'structA': {
        'ordinal': 0,
        'type': mojo.test.StructASpec.$,
      },
      'b': {
        'ordinal': 1,
        'type': mojo.internal.Bool,
      },
    });

/**
 * @typedef { {
 *   structA: (!mojo.test.StructA|undefined),
 *   b: (!boolean|undefined),
 * } }
 */
mojo.test.UnionA;
