// mojo/public/interfaces/bindings/tests/test_sync_methods.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');







goog.provide('mojo.test.TestSyncCodeGeneration');
goog.provide('mojo.test.TestSyncCodeGenerationReceiver');
goog.provide('mojo.test.TestSyncCodeGenerationCallbackRouter');
goog.provide('mojo.test.TestSyncCodeGenerationInterface');
goog.provide('mojo.test.TestSyncCodeGenerationRemote');
goog.provide('mojo.test.TestSyncCodeGenerationPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
mojo.test.TestSyncCodeGenerationPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        mojo.test.TestSyncCodeGeneration.$interfaceName,
        scope);
  }
};

/** @interface */
mojo.test.TestSyncCodeGenerationInterface = class {
  
  /**
   * @return {!Promise<{
        result: !number,
   *  }>}
   */

  noInput() {}
  
  /**
   * @param { !number } value
   * @return {!Promise}
   */

  noOutput(value) {}
  
  /**
   * @return {!Promise}
   */

  noInOut() {}
  
  /**
   * @param { !number } value1
   * @param { !number } value2
   * @return {!Promise<{
        result1: !number,
        result2: !number,
   *  }>}
   */

  haveInOut(value1, value2) {}
};

/**
 * @export
 * @implements { mojo.test.TestSyncCodeGenerationInterface }
 */
mojo.test.TestSyncCodeGenerationRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!mojo.test.TestSyncCodeGenerationPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          mojo.test.TestSyncCodeGenerationPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!mojo.test.TestSyncCodeGenerationPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise<{
        result: !number,
   *  }>}
   */

  noInput() {
    return this.proxy.sendMessage(
        0,
        mojo.test.TestSyncCodeGeneration_NoInput_ParamsSpec.$,
        mojo.test.TestSyncCodeGeneration_NoInput_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !number } value
   * @return {!Promise}
   */

  noOutput(
      value) {
    return this.proxy.sendMessage(
        1,
        mojo.test.TestSyncCodeGeneration_NoOutput_ParamsSpec.$,
        mojo.test.TestSyncCodeGeneration_NoOutput_ResponseParamsSpec.$,
        [
          value
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  noInOut() {
    return this.proxy.sendMessage(
        2,
        mojo.test.TestSyncCodeGeneration_NoInOut_ParamsSpec.$,
        mojo.test.TestSyncCodeGeneration_NoInOut_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !number } value1
   * @param { !number } value2
   * @return {!Promise<{
        result1: !number,
        result2: !number,
   *  }>}
   */

  haveInOut(
      value1,
      value2) {
    return this.proxy.sendMessage(
        3,
        mojo.test.TestSyncCodeGeneration_HaveInOut_ParamsSpec.$,
        mojo.test.TestSyncCodeGeneration_HaveInOut_ResponseParamsSpec.$,
        [
          value1,
          value2
        ]);
  }
};

/**
 * An object which receives request messages for the TestSyncCodeGeneration
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
mojo.test.TestSyncCodeGenerationReceiver = class {
  /**
   * @param {!mojo.test.TestSyncCodeGenerationInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!mojo.test.TestSyncCodeGenerationRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        mojo.test.TestSyncCodeGenerationRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.TestSyncCodeGenerationRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        mojo.test.TestSyncCodeGeneration_NoInput_ParamsSpec.$,
        mojo.test.TestSyncCodeGeneration_NoInput_ResponseParamsSpec.$,
        impl.noInput.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        mojo.test.TestSyncCodeGeneration_NoOutput_ParamsSpec.$,
        mojo.test.TestSyncCodeGeneration_NoOutput_ResponseParamsSpec.$,
        impl.noOutput.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        mojo.test.TestSyncCodeGeneration_NoInOut_ParamsSpec.$,
        mojo.test.TestSyncCodeGeneration_NoInOut_ResponseParamsSpec.$,
        impl.noInOut.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        mojo.test.TestSyncCodeGeneration_HaveInOut_ParamsSpec.$,
        mojo.test.TestSyncCodeGeneration_HaveInOut_ResponseParamsSpec.$,
        impl.haveInOut.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
mojo.test.TestSyncCodeGeneration = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "mojo.test.TestSyncCodeGeneration";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!mojo.test.TestSyncCodeGenerationRemote}
   * @export
   */
  static getRemote() {
    let remote = new mojo.test.TestSyncCodeGenerationRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the TestSyncCodeGeneration
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
mojo.test.TestSyncCodeGenerationCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      mojo.test.TestSyncCodeGenerationRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.TestSyncCodeGenerationRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.noInput =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        mojo.test.TestSyncCodeGeneration_NoInput_ParamsSpec.$,
        mojo.test.TestSyncCodeGeneration_NoInput_ResponseParamsSpec.$,
        this.noInput.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.noOutput =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        mojo.test.TestSyncCodeGeneration_NoOutput_ParamsSpec.$,
        mojo.test.TestSyncCodeGeneration_NoOutput_ResponseParamsSpec.$,
        this.noOutput.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.noInOut =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        mojo.test.TestSyncCodeGeneration_NoInOut_ParamsSpec.$,
        mojo.test.TestSyncCodeGeneration_NoInOut_ResponseParamsSpec.$,
        this.noInOut.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.haveInOut =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        mojo.test.TestSyncCodeGeneration_HaveInOut_ParamsSpec.$,
        mojo.test.TestSyncCodeGeneration_HaveInOut_ResponseParamsSpec.$,
        this.haveInOut.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('mojo.test.TestSync');
goog.provide('mojo.test.TestSyncReceiver');
goog.provide('mojo.test.TestSyncCallbackRouter');
goog.provide('mojo.test.TestSyncInterface');
goog.provide('mojo.test.TestSyncRemote');
goog.provide('mojo.test.TestSyncPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
mojo.test.TestSyncPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        mojo.test.TestSync.$interfaceName,
        scope);
  }
};

/** @interface */
mojo.test.TestSyncInterface = class {
  
  /**
   * @return {!Promise}
   */

  ping() {}
  
  /**
   * @param { !number } value
   * @return {!Promise<{
        result: !number,
   *  }>}
   */

  echo(value) {}
  
  /**
   * @param { !number } value
   * @return {!Promise<{
        result: !number,
   *  }>}
   */

  asyncEcho(value) {}
};

/**
 * @export
 * @implements { mojo.test.TestSyncInterface }
 */
mojo.test.TestSyncRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!mojo.test.TestSyncPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          mojo.test.TestSyncPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!mojo.test.TestSyncPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise}
   */

  ping() {
    return this.proxy.sendMessage(
        0,
        mojo.test.TestSync_Ping_ParamsSpec.$,
        mojo.test.TestSync_Ping_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !number } value
   * @return {!Promise<{
        result: !number,
   *  }>}
   */

  echo(
      value) {
    return this.proxy.sendMessage(
        1,
        mojo.test.TestSync_Echo_ParamsSpec.$,
        mojo.test.TestSync_Echo_ResponseParamsSpec.$,
        [
          value
        ]);
  }

  
  /**
   * @param { !number } value
   * @return {!Promise<{
        result: !number,
   *  }>}
   */

  asyncEcho(
      value) {
    return this.proxy.sendMessage(
        2,
        mojo.test.TestSync_AsyncEcho_ParamsSpec.$,
        mojo.test.TestSync_AsyncEcho_ResponseParamsSpec.$,
        [
          value
        ]);
  }
};

/**
 * An object which receives request messages for the TestSync
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
mojo.test.TestSyncReceiver = class {
  /**
   * @param {!mojo.test.TestSyncInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!mojo.test.TestSyncRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        mojo.test.TestSyncRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.TestSyncRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        mojo.test.TestSync_Ping_ParamsSpec.$,
        mojo.test.TestSync_Ping_ResponseParamsSpec.$,
        impl.ping.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        mojo.test.TestSync_Echo_ParamsSpec.$,
        mojo.test.TestSync_Echo_ResponseParamsSpec.$,
        impl.echo.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        mojo.test.TestSync_AsyncEcho_ParamsSpec.$,
        mojo.test.TestSync_AsyncEcho_ResponseParamsSpec.$,
        impl.asyncEcho.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
mojo.test.TestSync = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "mojo.test.TestSync";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!mojo.test.TestSyncRemote}
   * @export
   */
  static getRemote() {
    let remote = new mojo.test.TestSyncRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the TestSync
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
mojo.test.TestSyncCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      mojo.test.TestSyncRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.TestSyncRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.ping =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        mojo.test.TestSync_Ping_ParamsSpec.$,
        mojo.test.TestSync_Ping_ResponseParamsSpec.$,
        this.ping.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.echo =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        mojo.test.TestSync_Echo_ParamsSpec.$,
        mojo.test.TestSync_Echo_ResponseParamsSpec.$,
        this.echo.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.asyncEcho =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        mojo.test.TestSync_AsyncEcho_ParamsSpec.$,
        mojo.test.TestSync_AsyncEcho_ResponseParamsSpec.$,
        this.asyncEcho.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('mojo.test.TestSyncPrimary');
goog.provide('mojo.test.TestSyncPrimaryReceiver');
goog.provide('mojo.test.TestSyncPrimaryCallbackRouter');
goog.provide('mojo.test.TestSyncPrimaryInterface');
goog.provide('mojo.test.TestSyncPrimaryRemote');
goog.provide('mojo.test.TestSyncPrimaryPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
mojo.test.TestSyncPrimaryPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        mojo.test.TestSyncPrimary.$interfaceName,
        scope);
  }
};

/** @interface */
mojo.test.TestSyncPrimaryInterface = class {
  
  /**
   * @return {!Promise}
   */

  ping() {}
  
  /**
   * @param { !number } value
   * @return {!Promise<{
        result: !number,
   *  }>}
   */

  echo(value) {}
  
  /**
   * @param { !number } value
   * @return {!Promise<{
        result: !number,
   *  }>}
   */

  asyncEcho(value) {}
  
  /**
   * @param { !Object } remote
   */

  sendRemote(remote) {}
  
  /**
   * @param { !Object } receiver
   */

  sendReceiver(receiver) {}
};

/**
 * @export
 * @implements { mojo.test.TestSyncPrimaryInterface }
 */
mojo.test.TestSyncPrimaryRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!mojo.test.TestSyncPrimaryPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          mojo.test.TestSyncPrimaryPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!mojo.test.TestSyncPrimaryPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise}
   */

  ping() {
    return this.proxy.sendMessage(
        0,
        mojo.test.TestSyncPrimary_Ping_ParamsSpec.$,
        mojo.test.TestSyncPrimary_Ping_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !number } value
   * @return {!Promise<{
        result: !number,
   *  }>}
   */

  echo(
      value) {
    return this.proxy.sendMessage(
        1,
        mojo.test.TestSyncPrimary_Echo_ParamsSpec.$,
        mojo.test.TestSyncPrimary_Echo_ResponseParamsSpec.$,
        [
          value
        ]);
  }

  
  /**
   * @param { !number } value
   * @return {!Promise<{
        result: !number,
   *  }>}
   */

  asyncEcho(
      value) {
    return this.proxy.sendMessage(
        2,
        mojo.test.TestSyncPrimary_AsyncEcho_ParamsSpec.$,
        mojo.test.TestSyncPrimary_AsyncEcho_ResponseParamsSpec.$,
        [
          value
        ]);
  }

  
  /**
   * @param { !Object } remote
   */

  sendRemote(
      remote) {
    this.proxy.sendMessage(
        3,
        mojo.test.TestSyncPrimary_SendRemote_ParamsSpec.$,
        null,
        [
          remote
        ]);
  }

  
  /**
   * @param { !Object } receiver
   */

  sendReceiver(
      receiver) {
    this.proxy.sendMessage(
        4,
        mojo.test.TestSyncPrimary_SendReceiver_ParamsSpec.$,
        null,
        [
          receiver
        ]);
  }
};

/**
 * An object which receives request messages for the TestSyncPrimary
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
mojo.test.TestSyncPrimaryReceiver = class {
  /**
   * @param {!mojo.test.TestSyncPrimaryInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!mojo.test.TestSyncPrimaryRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        mojo.test.TestSyncPrimaryRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.TestSyncPrimaryRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        mojo.test.TestSyncPrimary_Ping_ParamsSpec.$,
        mojo.test.TestSyncPrimary_Ping_ResponseParamsSpec.$,
        impl.ping.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        mojo.test.TestSyncPrimary_Echo_ParamsSpec.$,
        mojo.test.TestSyncPrimary_Echo_ResponseParamsSpec.$,
        impl.echo.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        mojo.test.TestSyncPrimary_AsyncEcho_ParamsSpec.$,
        mojo.test.TestSyncPrimary_AsyncEcho_ResponseParamsSpec.$,
        impl.asyncEcho.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        mojo.test.TestSyncPrimary_SendRemote_ParamsSpec.$,
        null,
        impl.sendRemote.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        mojo.test.TestSyncPrimary_SendReceiver_ParamsSpec.$,
        null,
        impl.sendReceiver.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
mojo.test.TestSyncPrimary = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "mojo.test.TestSyncPrimary";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!mojo.test.TestSyncPrimaryRemote}
   * @export
   */
  static getRemote() {
    let remote = new mojo.test.TestSyncPrimaryRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the TestSyncPrimary
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
mojo.test.TestSyncPrimaryCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      mojo.test.TestSyncPrimaryRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mojo.test.TestSyncPrimaryRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.ping =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        mojo.test.TestSyncPrimary_Ping_ParamsSpec.$,
        mojo.test.TestSyncPrimary_Ping_ResponseParamsSpec.$,
        this.ping.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.echo =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        mojo.test.TestSyncPrimary_Echo_ParamsSpec.$,
        mojo.test.TestSyncPrimary_Echo_ResponseParamsSpec.$,
        this.echo.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.asyncEcho =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        mojo.test.TestSyncPrimary_AsyncEcho_ParamsSpec.$,
        mojo.test.TestSyncPrimary_AsyncEcho_ResponseParamsSpec.$,
        this.asyncEcho.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.sendRemote =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        mojo.test.TestSyncPrimary_SendRemote_ParamsSpec.$,
        null,
        this.sendRemote.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.sendReceiver =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        mojo.test.TestSyncPrimary_SendReceiver_ParamsSpec.$,
        null,
        this.sendReceiver.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('mojo.test.TestSyncCodeGeneration_NoInput_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncCodeGeneration_NoInput_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncCodeGeneration_NoInput_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncCodeGeneration_NoInput_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncCodeGeneration_NoOutput_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncCodeGeneration_NoOutput_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncCodeGeneration_NoOutput_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncCodeGeneration_NoOutput_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncCodeGeneration_NoInOut_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncCodeGeneration_NoInOut_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncCodeGeneration_NoInOut_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncCodeGeneration_NoInOut_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncCodeGeneration_HaveInOut_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncCodeGeneration_HaveInOut_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncCodeGeneration_HaveInOut_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncCodeGeneration_HaveInOut_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSync_Ping_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSync_Ping_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSync_Ping_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSync_Ping_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSync_Echo_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSync_Echo_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSync_Echo_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSync_Echo_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSync_AsyncEcho_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSync_AsyncEcho_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSync_AsyncEcho_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSync_AsyncEcho_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncPrimary_Ping_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncPrimary_Ping_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncPrimary_Ping_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncPrimary_Ping_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncPrimary_Echo_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncPrimary_Echo_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncPrimary_Echo_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncPrimary_Echo_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncPrimary_AsyncEcho_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncPrimary_AsyncEcho_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncPrimary_AsyncEcho_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncPrimary_AsyncEcho_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncPrimary_SendRemote_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncPrimary_SendRemote_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('mojo.test.TestSyncPrimary_SendReceiver_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mojo.test.TestSyncPrimary_SendReceiver_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    mojo.test.TestSyncCodeGeneration_NoInput_ParamsSpec.$,
    'TestSyncCodeGeneration_NoInput_Params',
    [
    ],
    [[0, 8],]);



goog.provide('mojo.test.TestSyncCodeGeneration_NoInput_Params');

/** @record */
mojo.test.TestSyncCodeGeneration_NoInput_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncCodeGeneration_NoInput_ResponseParamsSpec.$,
    'TestSyncCodeGeneration_NoInput_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSyncCodeGeneration_NoInput_ResponseParams');

/** @record */
mojo.test.TestSyncCodeGeneration_NoInput_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.result;
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncCodeGeneration_NoOutput_ParamsSpec.$,
    'TestSyncCodeGeneration_NoOutput_Params',
    [
      mojo.internal.StructField(
        'value', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSyncCodeGeneration_NoOutput_Params');

/** @record */
mojo.test.TestSyncCodeGeneration_NoOutput_Params = class {
  constructor() {
    /** @export { !number } */
    this.value;
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncCodeGeneration_NoOutput_ResponseParamsSpec.$,
    'TestSyncCodeGeneration_NoOutput_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('mojo.test.TestSyncCodeGeneration_NoOutput_ResponseParams');

/** @record */
mojo.test.TestSyncCodeGeneration_NoOutput_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncCodeGeneration_NoInOut_ParamsSpec.$,
    'TestSyncCodeGeneration_NoInOut_Params',
    [
    ],
    [[0, 8],]);



goog.provide('mojo.test.TestSyncCodeGeneration_NoInOut_Params');

/** @record */
mojo.test.TestSyncCodeGeneration_NoInOut_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncCodeGeneration_NoInOut_ResponseParamsSpec.$,
    'TestSyncCodeGeneration_NoInOut_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('mojo.test.TestSyncCodeGeneration_NoInOut_ResponseParams');

/** @record */
mojo.test.TestSyncCodeGeneration_NoInOut_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncCodeGeneration_HaveInOut_ParamsSpec.$,
    'TestSyncCodeGeneration_HaveInOut_Params',
    [
      mojo.internal.StructField(
        'value1', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'value2', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSyncCodeGeneration_HaveInOut_Params');

/** @record */
mojo.test.TestSyncCodeGeneration_HaveInOut_Params = class {
  constructor() {
    /** @export { !number } */
    this.value1;
    /** @export { !number } */
    this.value2;
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncCodeGeneration_HaveInOut_ResponseParamsSpec.$,
    'TestSyncCodeGeneration_HaveInOut_ResponseParams',
    [
      mojo.internal.StructField(
        'result1', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'result2', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSyncCodeGeneration_HaveInOut_ResponseParams');

/** @record */
mojo.test.TestSyncCodeGeneration_HaveInOut_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.result1;
    /** @export { !number } */
    this.result2;
  }
};




mojo.internal.Struct(
    mojo.test.TestSync_Ping_ParamsSpec.$,
    'TestSync_Ping_Params',
    [
    ],
    [[0, 8],]);



goog.provide('mojo.test.TestSync_Ping_Params');

/** @record */
mojo.test.TestSync_Ping_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mojo.test.TestSync_Ping_ResponseParamsSpec.$,
    'TestSync_Ping_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('mojo.test.TestSync_Ping_ResponseParams');

/** @record */
mojo.test.TestSync_Ping_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mojo.test.TestSync_Echo_ParamsSpec.$,
    'TestSync_Echo_Params',
    [
      mojo.internal.StructField(
        'value', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSync_Echo_Params');

/** @record */
mojo.test.TestSync_Echo_Params = class {
  constructor() {
    /** @export { !number } */
    this.value;
  }
};




mojo.internal.Struct(
    mojo.test.TestSync_Echo_ResponseParamsSpec.$,
    'TestSync_Echo_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSync_Echo_ResponseParams');

/** @record */
mojo.test.TestSync_Echo_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.result;
  }
};




mojo.internal.Struct(
    mojo.test.TestSync_AsyncEcho_ParamsSpec.$,
    'TestSync_AsyncEcho_Params',
    [
      mojo.internal.StructField(
        'value', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSync_AsyncEcho_Params');

/** @record */
mojo.test.TestSync_AsyncEcho_Params = class {
  constructor() {
    /** @export { !number } */
    this.value;
  }
};




mojo.internal.Struct(
    mojo.test.TestSync_AsyncEcho_ResponseParamsSpec.$,
    'TestSync_AsyncEcho_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSync_AsyncEcho_ResponseParams');

/** @record */
mojo.test.TestSync_AsyncEcho_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.result;
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncPrimary_Ping_ParamsSpec.$,
    'TestSyncPrimary_Ping_Params',
    [
    ],
    [[0, 8],]);



goog.provide('mojo.test.TestSyncPrimary_Ping_Params');

/** @record */
mojo.test.TestSyncPrimary_Ping_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncPrimary_Ping_ResponseParamsSpec.$,
    'TestSyncPrimary_Ping_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('mojo.test.TestSyncPrimary_Ping_ResponseParams');

/** @record */
mojo.test.TestSyncPrimary_Ping_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncPrimary_Echo_ParamsSpec.$,
    'TestSyncPrimary_Echo_Params',
    [
      mojo.internal.StructField(
        'value', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSyncPrimary_Echo_Params');

/** @record */
mojo.test.TestSyncPrimary_Echo_Params = class {
  constructor() {
    /** @export { !number } */
    this.value;
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncPrimary_Echo_ResponseParamsSpec.$,
    'TestSyncPrimary_Echo_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSyncPrimary_Echo_ResponseParams');

/** @record */
mojo.test.TestSyncPrimary_Echo_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.result;
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncPrimary_AsyncEcho_ParamsSpec.$,
    'TestSyncPrimary_AsyncEcho_Params',
    [
      mojo.internal.StructField(
        'value', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSyncPrimary_AsyncEcho_Params');

/** @record */
mojo.test.TestSyncPrimary_AsyncEcho_Params = class {
  constructor() {
    /** @export { !number } */
    this.value;
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncPrimary_AsyncEcho_ResponseParamsSpec.$,
    'TestSyncPrimary_AsyncEcho_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSyncPrimary_AsyncEcho_ResponseParams');

/** @record */
mojo.test.TestSyncPrimary_AsyncEcho_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.result;
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncPrimary_SendRemote_ParamsSpec.$,
    'TestSyncPrimary_SendRemote_Params',
    [
      mojo.internal.StructField(
        'remote', 0,
        0,
        mojo.internal.AssociatedInterfaceProxy(mojo.test.TestSyncRemote),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSyncPrimary_SendRemote_Params');

/** @record */
mojo.test.TestSyncPrimary_SendRemote_Params = class {
  constructor() {
    /** @export { !Object } */
    this.remote;
  }
};




mojo.internal.Struct(
    mojo.test.TestSyncPrimary_SendReceiver_ParamsSpec.$,
    'TestSyncPrimary_SendReceiver_Params',
    [
      mojo.internal.StructField(
        'receiver', 0,
        0,
        mojo.internal.AssociatedInterfaceRequest(mojo.test.TestSyncPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('mojo.test.TestSyncPrimary_SendReceiver_Params');

/** @record */
mojo.test.TestSyncPrimary_SendReceiver_Params = class {
  constructor() {
    /** @export { !Object } */
    this.receiver;
  }
};


