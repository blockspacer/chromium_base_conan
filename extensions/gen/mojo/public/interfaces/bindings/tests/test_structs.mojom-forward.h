// mojo/public/interfaces/bindings/tests/test_structs.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_STRUCTS_MOJOM_FORWARD_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_STRUCTS_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif

namespace mojo {
enum class NativeEnum;
}  // namespace mojo


namespace mojo {
namespace test {
class NamedRegionDataView;

class RectPairDataView;

class EmptyStructDataView;

using UnmappedNativeStructDataView = mojo::native::NativeStructDataView;

class NoDefaultFieldValuesDataView;

class DefaultFieldValuesDataView;

class ScopedConstantsDataView;

class MapKeyTypesDataView;

class MapValueTypesDataView;

class ArrayValueTypesDataView;

class FloatNumberValuesDataView;

class IntegerNumberValuesDataView;

class UnsignedNumberValuesDataView;

class BitArrayValuesDataView;

class MultiVersionStructDataView;

class MultiVersionStructV0DataView;

class MultiVersionStructV1DataView;

class MultiVersionStructV3DataView;

class MultiVersionStructV5DataView;

class MultiVersionStructV7DataView;

class ReorderedStructDataView;

class ContainsInterfaceDataView;

class ContainsOtherDataView;

class ContainsInterfaceRequestDataView;

class SingleBoolStructDataView;

class ContainsHashableDataView;

class SimpleNestedStructDataView;

class EnumNestedStructDataView;


enum class ScopedConstants_EType : int32_t;

enum class EnumNestedStruct_StructEnum : int32_t;
class NamedRegion;
using NamedRegionPtr = mojo::StructPtr<NamedRegion>;

class RectPair;
using RectPairPtr = mojo::StructPtr<RectPair>;

class EmptyStruct;
using EmptyStructPtr = mojo::InlinedStructPtr<EmptyStruct>;

using UnmappedNativeStruct = mojo::native::NativeStruct;
using UnmappedNativeStructPtr = mojo::native::NativeStructPtr;

class NoDefaultFieldValues;
using NoDefaultFieldValuesPtr = mojo::StructPtr<NoDefaultFieldValues>;

class DefaultFieldValues;
using DefaultFieldValuesPtr = mojo::StructPtr<DefaultFieldValues>;

class ScopedConstants;
using ScopedConstantsPtr = mojo::StructPtr<ScopedConstants>;

class MapKeyTypes;
using MapKeyTypesPtr = mojo::StructPtr<MapKeyTypes>;

class MapValueTypes;
using MapValueTypesPtr = mojo::StructPtr<MapValueTypes>;

class ArrayValueTypes;
using ArrayValueTypesPtr = mojo::StructPtr<ArrayValueTypes>;

class FloatNumberValues;
using FloatNumberValuesPtr = mojo::StructPtr<FloatNumberValues>;

class IntegerNumberValues;
using IntegerNumberValuesPtr = mojo::StructPtr<IntegerNumberValues>;

class UnsignedNumberValues;
using UnsignedNumberValuesPtr = mojo::StructPtr<UnsignedNumberValues>;

class BitArrayValues;
using BitArrayValuesPtr = mojo::StructPtr<BitArrayValues>;

class MultiVersionStruct;
using MultiVersionStructPtr = mojo::StructPtr<MultiVersionStruct>;

class MultiVersionStructV0;
using MultiVersionStructV0Ptr = mojo::InlinedStructPtr<MultiVersionStructV0>;

class MultiVersionStructV1;
using MultiVersionStructV1Ptr = mojo::StructPtr<MultiVersionStructV1>;

class MultiVersionStructV3;
using MultiVersionStructV3Ptr = mojo::StructPtr<MultiVersionStructV3>;

class MultiVersionStructV5;
using MultiVersionStructV5Ptr = mojo::StructPtr<MultiVersionStructV5>;

class MultiVersionStructV7;
using MultiVersionStructV7Ptr = mojo::StructPtr<MultiVersionStructV7>;

class ReorderedStruct;
using ReorderedStructPtr = mojo::InlinedStructPtr<ReorderedStruct>;

class ContainsInterface;
using ContainsInterfacePtr = mojo::StructPtr<ContainsInterface>;

class ContainsOther;
using ContainsOtherPtr = mojo::InlinedStructPtr<ContainsOther>;

class ContainsInterfaceRequest;
using ContainsInterfaceRequestPtr = mojo::StructPtr<ContainsInterfaceRequest>;

class SingleBoolStruct;
using SingleBoolStructPtr = mojo::InlinedStructPtr<SingleBoolStruct>;

class ContainsHashable;
using ContainsHashablePtr = mojo::StructPtr<ContainsHashable>;

class SimpleNestedStruct;
using SimpleNestedStructPtr = mojo::StructPtr<SimpleNestedStruct>;

class EnumNestedStruct;
using EnumNestedStructPtr = mojo::InlinedStructPtr<EnumNestedStruct>;

class SomeInterface;

// @generated_from: mojo.test.SomeInterface
using SomeInterfacePtr = mojo::InterfacePtr<SomeInterface>;
using SomeInterfacePtrInfo = mojo::InterfacePtrInfo<SomeInterface>;

// @generated_from: mojo.test.SomeInterface
using SomeInterfaceRequest = mojo::InterfaceRequest<SomeInterface>;
using SomeInterfaceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<SomeInterface>;

// @generated_from: mojo.test.SomeInterface
using SomeInterfaceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<SomeInterface>;




}  // namespace test
}  // namespace mojo

#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_STRUCTS_MOJOM_FORWARD_H_

/* Metadata comment
eyJtZXRhIjogW3siZW5kIjogNDU5NCwgImJlZ2luIjogNDU3OCwgImVkZ2UiOiAiJS9reXRoZS9l
ZGdlL2dlbmVyYXRlcyIsICJ0eXBlIjogImFuY2hvcl9kZWZpbmVzIiwgInZuYW1lIjogeyJjb3Jw
dXMiOiAiY2hyb21pdW0uZ29vZ2xlc291cmNlLmNvbS9jaHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2Ui
OiAibW9qb20iLCAic2lnbmF0dXJlIjogIm1vam8udGVzdC5Tb21lSW50ZXJmYWNlIn19LCB7ImVu
ZCI6IDQ4MTAsICJiZWdpbiI6IDQ3OTcsICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMi
LCAidHlwZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVt
Lmdvb2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNp
Z25hdHVyZSI6ICJtb2pvLnRlc3QuU29tZUludGVyZmFjZSJ9fV0sICJ0eXBlIjogImt5dGhlMCJ9
*/