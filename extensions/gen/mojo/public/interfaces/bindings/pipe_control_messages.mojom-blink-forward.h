// mojo/public/interfaces/bindings/pipe_control_messages.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_PIPE_CONTROL_MESSAGES_MOJOM_BLINK_FORWARD_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_PIPE_CONTROL_MESSAGES_MOJOM_BLINK_FORWARD_H_



#include "mojo/public/cpp/bindings/struct_forward.h"




#include "base/component_export.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif


namespace mojo {
namespace pipe_control {
}  // namespace mojo
}  // namespace pipe_control


namespace mojo {
namespace pipe_control {
namespace blink {

// @generated_from: mojo.pipe_control.kRunOrClosePipeMessageId
constexpr uint32_t kRunOrClosePipeMessageId = 0xFFFFFFFEU;
class RunOrClosePipeMessageParams;
using RunOrClosePipeMessageParamsPtr = mojo::StructPtr<RunOrClosePipeMessageParams>;

class DisconnectReason;
using DisconnectReasonPtr = mojo::InlinedStructPtr<DisconnectReason>;

class PeerAssociatedEndpointClosedEvent;
using PeerAssociatedEndpointClosedEventPtr = mojo::StructPtr<PeerAssociatedEndpointClosedEvent>;

class PauseUntilFlushCompletes;
using PauseUntilFlushCompletesPtr = mojo::StructPtr<PauseUntilFlushCompletes>;

class FlushAsync;
using FlushAsyncPtr = mojo::StructPtr<FlushAsync>;

class RunOrClosePipeInput;

typedef mojo::StructPtr<RunOrClosePipeInput> RunOrClosePipeInputPtr;




}  // namespace blink
}  // namespace pipe_control
}  // namespace mojo

#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_PIPE_CONTROL_MESSAGES_MOJOM_BLINK_FORWARD_H_