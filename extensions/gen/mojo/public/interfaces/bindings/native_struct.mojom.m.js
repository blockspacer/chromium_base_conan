// mojo/public/interfaces/bindings/native_struct.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.




/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const SerializedHandleTypeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const SerializedHandleType = {
  
  MOJO_HANDLE: 0,
  PLATFORM_FILE: 1,
  WIN_HANDLE: 2,
  MACH_PORT: 3,
  FUCHSIA_HANDLE: 4,
  MIN_VALUE: 0,
  MAX_VALUE: 4,
};


/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SerializedHandleSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NativeStructSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    SerializedHandleSpec.$,
    'SerializedHandle',
    [
      mojo.internal.StructField(
        'theHandle', 0,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'type', 4,
        0,
        SerializedHandleTypeSpec.$,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export const SerializedHandle = class {
  constructor() {
    /** @type { !MojoHandle } */
    this.theHandle;
    /** @type { !SerializedHandleType } */
    this.type;
  }
};



mojo.internal.Struct(
    NativeStructSpec.$,
    'NativeStruct',
    [
      mojo.internal.StructField(
        'data', 0,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'handles', 8,
        0,
        mojo.internal.Array(SerializedHandleSpec.$, false),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export const NativeStruct = class {
  constructor() {
    /** @type { !Array<!number> } */
    this.data;
    /** @type { (Array<!SerializedHandle>|undefined) } */
    this.handles;
  }
};

