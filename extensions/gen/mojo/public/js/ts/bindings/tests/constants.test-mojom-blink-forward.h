// mojo/public/js/ts/bindings/tests/constants.test-mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_JS_TS_BINDINGS_TESTS_CONSTANTS_TEST_MOJOM_BLINK_FORWARD_H_
#define MOJO_PUBLIC_JS_TS_BINDINGS_TESTS_CONSTANTS_TEST_MOJOM_BLINK_FORWARD_H_









#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif


namespace mojo {
namespace tstest {
}  // namespace mojo
}  // namespace tstest


namespace mojo {
namespace tstest {
namespace blink {

// @generated_from: mojo.tstest.kBoolValue
constexpr bool kBoolValue = true;

// @generated_from: mojo.tstest.kInt8Value
constexpr int8_t kInt8Value = -2;

// @generated_from: mojo.tstest.kUint8Value
constexpr uint8_t kUint8Value = 128U;

// @generated_from: mojo.tstest.kInt16Value
constexpr int16_t kInt16Value = -233;

// @generated_from: mojo.tstest.kUint16Value
constexpr uint16_t kUint16Value = 44204U;

// @generated_from: mojo.tstest.kInt32Value
constexpr int32_t kInt32Value = -44204;

// @generated_from: mojo.tstest.kUint32Value
constexpr uint32_t kUint32Value = 4294967295U;

// @generated_from: mojo.tstest.kInt64Value
constexpr int64_t kInt64Value = -9223372036854775807;

// @generated_from: mojo.tstest.kUint64Value
constexpr uint64_t kUint64Value = 9999999999999999999ULL;

// @generated_from: mojo.tstest.kDoubleValue
constexpr double kDoubleValue = 3.14159;

// @generated_from: mojo.tstest.kDoubleInfinity
constexpr double kDoubleInfinity = std::numeric_limits<double>::infinity();

// @generated_from: mojo.tstest.kDoubleNegativeInfinity
constexpr double kDoubleNegativeInfinity = -std::numeric_limits<double>::infinity();

// @generated_from: mojo.tstest.kDoubleNaN
constexpr double kDoubleNaN = std::numeric_limits<double>::quiet_NaN();

// @generated_from: mojo.tstest.kFloatValue
constexpr float kFloatValue = 2.71828f;

// @generated_from: mojo.tstest.kFloatInfinity
constexpr float kFloatInfinity = std::numeric_limits<float>::infinity();

// @generated_from: mojo.tstest.kFloatNegativeInfinity
constexpr float kFloatNegativeInfinity = -std::numeric_limits<float>::infinity();

// @generated_from: mojo.tstest.kFloatNaN
constexpr float kFloatNaN = std::numeric_limits<float>::quiet_NaN();

// @generated_from: mojo.tstest.kStringValue
extern const char kStringValue[];

// @generated_from: mojo.tstest.kNamedValue1
constexpr uint8_t kNamedValue1 = 128U;

// @generated_from: mojo.tstest.kNamedValue2
constexpr double kNamedValue2 = std::numeric_limits<double>::infinity();



}  // namespace blink
}  // namespace tstest
}  // namespace mojo

#endif  // MOJO_PUBLIC_JS_TS_BINDINGS_TESTS_CONSTANTS_TEST_MOJOM_BLINK_FORWARD_H_