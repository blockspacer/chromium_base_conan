// mojo/public/js/test/module_a.test-mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../bindings.js';


/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const ModuleEnumSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const ModuleEnum = {
  
  THIRD: 0,
  MIN_VALUE: 0,
  MAX_VALUE: 0,
};



/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export const ParentInterfacePendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'module_a.ParentInterface', scope);
  }
};

/** @interface */
export const ParentInterfaceInterface = class {
  
  /**
   * @param { number } value
   */

  someMethod(value) {}
};

/**
 * @implements { ParentInterfaceInterface }
 */
export const ParentInterfaceRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!ParentInterfacePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          ParentInterfacePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!ParentInterfacePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { number } value
   */

  someMethod(
      value) {
    this.proxy.sendMessage(
        652447188,
        ParentInterface_SomeMethod_ParamsSpec.$,
        null,
        [
          value
        ]);
  }
};

/**
 * An object which receives request messages for the ParentInterface
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export const ParentInterfaceReceiver = class {
  /**
   * @param {!ParentInterfaceInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!ParentInterfaceRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        ParentInterfaceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!ParentInterfaceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        652447188,
        ParentInterface_SomeMethod_ParamsSpec.$,
        null,
        impl.someMethod.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

export const ParentInterface = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "module_a.ParentInterface";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!ParentInterfaceRemote}
   */
  static getRemote() {
    let remote = new ParentInterfaceRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const ParentInterface_NestedEnumSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const ParentInterface_NestedEnum = {
  
  FIRST: 0,
  SECOND: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};

/**
 * An object which receives request messages for the ParentInterface
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export const ParentInterfaceCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      ParentInterfaceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!ParentInterfaceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.someMethod =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        652447188,
        ParentInterface_SomeMethod_ParamsSpec.$,
        null,
        this.someMethod.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TestStructA1Spec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TestStructA2Spec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ParentInterface_SomeMethod_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    TestStructA1Spec.$,
    'TestStructA1',
    [
      mojo.internal.StructField(
        'q', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'r', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        's', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export const TestStructA1 = class {
  constructor() {
    /** @type { !string } */
    this.q;
    /** @type { !string } */
    this.r;
    /** @type { !string } */
    this.s;
  }
};


/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const TestStructA2_NestedEnumSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const TestStructA2_NestedEnum = {
  
  A: 0,
  B: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};


mojo.internal.Struct(
    TestStructA2Spec.$,
    'TestStructA2',
    [
      mojo.internal.StructField(
        'ax', 0,
        0,
        TestStructA1Spec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'ay', 8,
        0,
        TestStructA1Spec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'enumField', 16,
        0,
        TestStructA2_NestedEnumSpec.$,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export const TestStructA2 = class {
  constructor() {
    /** @type { !TestStructA1 } */
    this.ax;
    /** @type { !TestStructA1 } */
    this.ay;
    /** @type { !TestStructA2_NestedEnum } */
    this.enumField;
  }
};



mojo.internal.Struct(
    ParentInterface_SomeMethod_ParamsSpec.$,
    'ParentInterface_SomeMethod_Params',
    [
      mojo.internal.StructField(
        'value', 0,
        0,
        ParentInterface_NestedEnumSpec.$,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export const ParentInterface_SomeMethod_Params = class {
  constructor() {
    /** @type { !ParentInterface_NestedEnum } */
    this.value;
  }
};

