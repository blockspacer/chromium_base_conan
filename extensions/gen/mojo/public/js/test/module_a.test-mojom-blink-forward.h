// mojo/public/js/test/module_a.test-mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_JS_TEST_MODULE_A_TEST_MOJOM_BLINK_FORWARD_H_
#define MOJO_PUBLIC_JS_TEST_MODULE_A_TEST_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif


namespace module_a {

enum class ModuleEnum : int32_t;

enum class TestStructA2_NestedEnum : int32_t;

enum class ParentInterface_NestedEnum : int32_t;
class ParentInterfaceInterfaceBase;
}  // namespace module_a


namespace module_a {
namespace blink {
// Aliases for definition in the parent namespace.
using ModuleEnum = ModuleEnum;
using ParentInterfaceInterfaceBase = ParentInterfaceInterfaceBase;
class TestStructA1;
using TestStructA1Ptr = mojo::InlinedStructPtr<TestStructA1>;

class TestStructA2;
using TestStructA2Ptr = mojo::StructPtr<TestStructA2>;

class ParentInterface;

// @generated_from: module_a.ParentInterface
using ParentInterfacePtr = mojo::InterfacePtr<ParentInterface>;
using ParentInterfacePtrInfo = mojo::InterfacePtrInfo<ParentInterface>;

// @generated_from: module_a.ParentInterface
using ParentInterfaceRequest = mojo::InterfaceRequest<ParentInterface>;
using ParentInterfaceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<ParentInterface>;

// @generated_from: module_a.ParentInterface
using ParentInterfaceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<ParentInterface>;




}  // namespace blink
}  // namespace module_a

#endif  // MOJO_PUBLIC_JS_TEST_MODULE_A_TEST_MOJOM_BLINK_FORWARD_H_