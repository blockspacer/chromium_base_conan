// mojo/public/tools/fuzzers/fuzz.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_TOOLS_FUZZERS_FUZZ_MOJOM_PARAMS_DATA_H_
#define MOJO_PUBLIC_TOOLS_FUZZERS_FUZZ_MOJOM_PARAMS_DATA_H_

#include "base/macros.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace fuzz {
namespace mojom {
namespace internal {
class  FuzzDummyInterface_Ping_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FuzzDummyInterface_Ping_Params_Data>;

  FuzzDummyInterface_Ping_Params_Data();
  ~FuzzDummyInterface_Ping_Params_Data() = delete;
};
static_assert(sizeof(FuzzDummyInterface_Ping_Params_Data) == 8,
              "Bad sizeof(FuzzDummyInterface_Ping_Params_Data)");
class  FuzzInterface_FuzzBasic_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FuzzInterface_FuzzBasic_Params_Data>;

  FuzzInterface_FuzzBasic_Params_Data();
  ~FuzzInterface_FuzzBasic_Params_Data() = delete;
};
static_assert(sizeof(FuzzInterface_FuzzBasic_Params_Data) == 8,
              "Bad sizeof(FuzzInterface_FuzzBasic_Params_Data)");
class  FuzzInterface_FuzzBasicResp_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FuzzInterface_FuzzBasicResp_Params_Data>;

  FuzzInterface_FuzzBasicResp_Params_Data();
  ~FuzzInterface_FuzzBasicResp_Params_Data() = delete;
};
static_assert(sizeof(FuzzInterface_FuzzBasicResp_Params_Data) == 8,
              "Bad sizeof(FuzzInterface_FuzzBasicResp_Params_Data)");
class  FuzzInterface_FuzzBasicResp_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FuzzInterface_FuzzBasicResp_ResponseParams_Data>;

  FuzzInterface_FuzzBasicResp_ResponseParams_Data();
  ~FuzzInterface_FuzzBasicResp_ResponseParams_Data() = delete;
};
static_assert(sizeof(FuzzInterface_FuzzBasicResp_ResponseParams_Data) == 8,
              "Bad sizeof(FuzzInterface_FuzzBasicResp_ResponseParams_Data)");
class  FuzzInterface_FuzzBasicSyncResp_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FuzzInterface_FuzzBasicSyncResp_Params_Data>;

  FuzzInterface_FuzzBasicSyncResp_Params_Data();
  ~FuzzInterface_FuzzBasicSyncResp_Params_Data() = delete;
};
static_assert(sizeof(FuzzInterface_FuzzBasicSyncResp_Params_Data) == 8,
              "Bad sizeof(FuzzInterface_FuzzBasicSyncResp_Params_Data)");
class  FuzzInterface_FuzzBasicSyncResp_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FuzzInterface_FuzzBasicSyncResp_ResponseParams_Data>;

  FuzzInterface_FuzzBasicSyncResp_ResponseParams_Data();
  ~FuzzInterface_FuzzBasicSyncResp_ResponseParams_Data() = delete;
};
static_assert(sizeof(FuzzInterface_FuzzBasicSyncResp_ResponseParams_Data) == 8,
              "Bad sizeof(FuzzInterface_FuzzBasicSyncResp_ResponseParams_Data)");
class  FuzzInterface_FuzzArgs_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::FuzzStruct_Data> a;
  mojo::internal::Pointer<internal::FuzzStruct_Data> b;

 private:
  friend class mojo::internal::MessageFragment<FuzzInterface_FuzzArgs_Params_Data>;

  FuzzInterface_FuzzArgs_Params_Data();
  ~FuzzInterface_FuzzArgs_Params_Data() = delete;
};
static_assert(sizeof(FuzzInterface_FuzzArgs_Params_Data) == 24,
              "Bad sizeof(FuzzInterface_FuzzArgs_Params_Data)");
class  FuzzInterface_FuzzArgsResp_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::FuzzStruct_Data> a;
  mojo::internal::Pointer<internal::FuzzStruct_Data> b;

 private:
  friend class mojo::internal::MessageFragment<FuzzInterface_FuzzArgsResp_Params_Data>;

  FuzzInterface_FuzzArgsResp_Params_Data();
  ~FuzzInterface_FuzzArgsResp_Params_Data() = delete;
};
static_assert(sizeof(FuzzInterface_FuzzArgsResp_Params_Data) == 24,
              "Bad sizeof(FuzzInterface_FuzzArgsResp_Params_Data)");
class  FuzzInterface_FuzzArgsResp_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FuzzInterface_FuzzArgsResp_ResponseParams_Data>;

  FuzzInterface_FuzzArgsResp_ResponseParams_Data();
  ~FuzzInterface_FuzzArgsResp_ResponseParams_Data() = delete;
};
static_assert(sizeof(FuzzInterface_FuzzArgsResp_ResponseParams_Data) == 8,
              "Bad sizeof(FuzzInterface_FuzzArgsResp_ResponseParams_Data)");
class  FuzzInterface_FuzzArgsSyncResp_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::FuzzStruct_Data> a;
  mojo::internal::Pointer<internal::FuzzStruct_Data> b;

 private:
  friend class mojo::internal::MessageFragment<FuzzInterface_FuzzArgsSyncResp_Params_Data>;

  FuzzInterface_FuzzArgsSyncResp_Params_Data();
  ~FuzzInterface_FuzzArgsSyncResp_Params_Data() = delete;
};
static_assert(sizeof(FuzzInterface_FuzzArgsSyncResp_Params_Data) == 24,
              "Bad sizeof(FuzzInterface_FuzzArgsSyncResp_Params_Data)");
class  FuzzInterface_FuzzArgsSyncResp_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FuzzInterface_FuzzArgsSyncResp_ResponseParams_Data>;

  FuzzInterface_FuzzArgsSyncResp_ResponseParams_Data();
  ~FuzzInterface_FuzzArgsSyncResp_ResponseParams_Data() = delete;
};
static_assert(sizeof(FuzzInterface_FuzzArgsSyncResp_ResponseParams_Data) == 8,
              "Bad sizeof(FuzzInterface_FuzzArgsSyncResp_ResponseParams_Data)");
class  FuzzInterface_FuzzAssociated_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::AssociatedEndpointHandle_Data receiver;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<FuzzInterface_FuzzAssociated_Params_Data>;

  FuzzInterface_FuzzAssociated_Params_Data();
  ~FuzzInterface_FuzzAssociated_Params_Data() = delete;
};
static_assert(sizeof(FuzzInterface_FuzzAssociated_Params_Data) == 16,
              "Bad sizeof(FuzzInterface_FuzzAssociated_Params_Data)");

}  // namespace internal


class FuzzDummyInterface_Ping_ParamsDataView {
 public:
  FuzzDummyInterface_Ping_ParamsDataView() {}

  FuzzDummyInterface_Ping_ParamsDataView(
      internal::FuzzDummyInterface_Ping_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FuzzDummyInterface_Ping_Params_Data* data_ = nullptr;
};



class FuzzInterface_FuzzBasic_ParamsDataView {
 public:
  FuzzInterface_FuzzBasic_ParamsDataView() {}

  FuzzInterface_FuzzBasic_ParamsDataView(
      internal::FuzzInterface_FuzzBasic_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FuzzInterface_FuzzBasic_Params_Data* data_ = nullptr;
};



class FuzzInterface_FuzzBasicResp_ParamsDataView {
 public:
  FuzzInterface_FuzzBasicResp_ParamsDataView() {}

  FuzzInterface_FuzzBasicResp_ParamsDataView(
      internal::FuzzInterface_FuzzBasicResp_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FuzzInterface_FuzzBasicResp_Params_Data* data_ = nullptr;
};



class FuzzInterface_FuzzBasicResp_ResponseParamsDataView {
 public:
  FuzzInterface_FuzzBasicResp_ResponseParamsDataView() {}

  FuzzInterface_FuzzBasicResp_ResponseParamsDataView(
      internal::FuzzInterface_FuzzBasicResp_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FuzzInterface_FuzzBasicResp_ResponseParams_Data* data_ = nullptr;
};



class FuzzInterface_FuzzBasicSyncResp_ParamsDataView {
 public:
  FuzzInterface_FuzzBasicSyncResp_ParamsDataView() {}

  FuzzInterface_FuzzBasicSyncResp_ParamsDataView(
      internal::FuzzInterface_FuzzBasicSyncResp_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FuzzInterface_FuzzBasicSyncResp_Params_Data* data_ = nullptr;
};



class FuzzInterface_FuzzBasicSyncResp_ResponseParamsDataView {
 public:
  FuzzInterface_FuzzBasicSyncResp_ResponseParamsDataView() {}

  FuzzInterface_FuzzBasicSyncResp_ResponseParamsDataView(
      internal::FuzzInterface_FuzzBasicSyncResp_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FuzzInterface_FuzzBasicSyncResp_ResponseParams_Data* data_ = nullptr;
};



class FuzzInterface_FuzzArgs_ParamsDataView {
 public:
  FuzzInterface_FuzzArgs_ParamsDataView() {}

  FuzzInterface_FuzzArgs_ParamsDataView(
      internal::FuzzInterface_FuzzArgs_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetADataView(
      FuzzStructDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadA(UserType* output) {
    
    auto* pointer = data_->a.Get();
    return mojo::internal::Deserialize<::fuzz::mojom::FuzzStructDataView>(
        pointer, output, message_);
  }
  inline void GetBDataView(
      FuzzStructDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadB(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::fuzz::mojom::FuzzStructDataView, UserType>(),
    "Attempting to read the optional `b` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with base::Optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadB` instead "
    "of `ReadB if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->b.Get();
    return mojo::internal::Deserialize<::fuzz::mojom::FuzzStructDataView>(
        pointer, output, message_);
  }
 private:
  internal::FuzzInterface_FuzzArgs_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FuzzInterface_FuzzArgsResp_ParamsDataView {
 public:
  FuzzInterface_FuzzArgsResp_ParamsDataView() {}

  FuzzInterface_FuzzArgsResp_ParamsDataView(
      internal::FuzzInterface_FuzzArgsResp_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetADataView(
      FuzzStructDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadA(UserType* output) {
    
    auto* pointer = data_->a.Get();
    return mojo::internal::Deserialize<::fuzz::mojom::FuzzStructDataView>(
        pointer, output, message_);
  }
  inline void GetBDataView(
      FuzzStructDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadB(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::fuzz::mojom::FuzzStructDataView, UserType>(),
    "Attempting to read the optional `b` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with base::Optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadB` instead "
    "of `ReadB if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->b.Get();
    return mojo::internal::Deserialize<::fuzz::mojom::FuzzStructDataView>(
        pointer, output, message_);
  }
 private:
  internal::FuzzInterface_FuzzArgsResp_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FuzzInterface_FuzzArgsResp_ResponseParamsDataView {
 public:
  FuzzInterface_FuzzArgsResp_ResponseParamsDataView() {}

  FuzzInterface_FuzzArgsResp_ResponseParamsDataView(
      internal::FuzzInterface_FuzzArgsResp_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FuzzInterface_FuzzArgsResp_ResponseParams_Data* data_ = nullptr;
};



class FuzzInterface_FuzzArgsSyncResp_ParamsDataView {
 public:
  FuzzInterface_FuzzArgsSyncResp_ParamsDataView() {}

  FuzzInterface_FuzzArgsSyncResp_ParamsDataView(
      internal::FuzzInterface_FuzzArgsSyncResp_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetADataView(
      FuzzStructDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadA(UserType* output) {
    
    auto* pointer = data_->a.Get();
    return mojo::internal::Deserialize<::fuzz::mojom::FuzzStructDataView>(
        pointer, output, message_);
  }
  inline void GetBDataView(
      FuzzStructDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadB(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::fuzz::mojom::FuzzStructDataView, UserType>(),
    "Attempting to read the optional `b` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with base::Optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadB` instead "
    "of `ReadB if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->b.Get();
    return mojo::internal::Deserialize<::fuzz::mojom::FuzzStructDataView>(
        pointer, output, message_);
  }
 private:
  internal::FuzzInterface_FuzzArgsSyncResp_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FuzzInterface_FuzzArgsSyncResp_ResponseParamsDataView {
 public:
  FuzzInterface_FuzzArgsSyncResp_ResponseParamsDataView() {}

  FuzzInterface_FuzzArgsSyncResp_ResponseParamsDataView(
      internal::FuzzInterface_FuzzArgsSyncResp_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FuzzInterface_FuzzArgsSyncResp_ResponseParams_Data* data_ = nullptr;
};



class FuzzInterface_FuzzAssociated_ParamsDataView {
 public:
  FuzzInterface_FuzzAssociated_ParamsDataView() {}

  FuzzInterface_FuzzAssociated_ParamsDataView(
      internal::FuzzInterface_FuzzAssociated_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeReceiver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::fuzz::mojom::FuzzDummyInterfaceAssociatedRequestDataView>(
            &data_->receiver, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::FuzzInterface_FuzzAssociated_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};














inline void FuzzInterface_FuzzArgs_ParamsDataView::GetADataView(
    FuzzStructDataView* output) {
  auto pointer = data_->a.Get();
  *output = FuzzStructDataView(pointer, message_);
}
inline void FuzzInterface_FuzzArgs_ParamsDataView::GetBDataView(
    FuzzStructDataView* output) {
  auto pointer = data_->b.Get();
  *output = FuzzStructDataView(pointer, message_);
}


inline void FuzzInterface_FuzzArgsResp_ParamsDataView::GetADataView(
    FuzzStructDataView* output) {
  auto pointer = data_->a.Get();
  *output = FuzzStructDataView(pointer, message_);
}
inline void FuzzInterface_FuzzArgsResp_ParamsDataView::GetBDataView(
    FuzzStructDataView* output) {
  auto pointer = data_->b.Get();
  *output = FuzzStructDataView(pointer, message_);
}




inline void FuzzInterface_FuzzArgsSyncResp_ParamsDataView::GetADataView(
    FuzzStructDataView* output) {
  auto pointer = data_->a.Get();
  *output = FuzzStructDataView(pointer, message_);
}
inline void FuzzInterface_FuzzArgsSyncResp_ParamsDataView::GetBDataView(
    FuzzStructDataView* output) {
  auto pointer = data_->b.Get();
  *output = FuzzStructDataView(pointer, message_);
}





}  // namespace mojom
}  // namespace fuzz

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // MOJO_PUBLIC_TOOLS_FUZZERS_FUZZ_MOJOM_PARAMS_DATA_H_