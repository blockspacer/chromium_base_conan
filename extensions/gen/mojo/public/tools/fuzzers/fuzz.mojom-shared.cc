// mojo/public/tools/fuzzers/fuzz.mojom-shared.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "mojo/public/tools/fuzzers/fuzz.mojom-shared.h"

#include <utility>

#include "base/stl_util.h"  // for base::size()
#include "base/strings/stringprintf.h"
#include "mojo/public/cpp/bindings/lib/validate_params.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"
#include "mojo/public/cpp/bindings/lib/validation_errors.h"
#include "mojo/public/cpp/bindings/lib/validation_util.h"
#include "third_party/perfetto/include/perfetto/tracing/traced_value.h"

#include "mojo/public/tools/fuzzers/fuzz.mojom-params-data.h"
namespace fuzz {
namespace mojom {

std::string FuzzEnumToString(FuzzEnum value) {
  switch(value) {
    case FuzzEnum::FUZZ_VALUE0:
      return "FUZZ_VALUE0";
    case FuzzEnum::FUZZ_VALUE1:
      return "FUZZ_VALUE1";
    case FuzzEnum::FUZZ_VALUE2:
      return "FUZZ_VALUE2";
    default:
      return base::StringPrintf("Unknown FuzzEnum value: %i", static_cast<int32_t>(value));
  }
}

std::ostream& operator<<(std::ostream& os, FuzzEnum value) {
  return os << FuzzEnumToString(value);
}

namespace internal {
// static
bool FuzzUnion_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context,
    bool inlined) {
  if (!data) {
    DCHECK(!inlined);
    return true;
  }

  // If it is inlined, the alignment is already enforced by its enclosing
  // object. We don't have to validate that.
  DCHECK(!inlined || mojo::internal::IsAligned(data));

  if (!inlined &&
      !mojo::internal::ValidateNonInlinedUnionHeaderAndClaimMemory(
          data, validation_context)) {
    return false;
  }

  const FuzzUnion_Data* object = static_cast<const FuzzUnion_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (inlined && object->is_null())
    return true;

  switch (object->tag) {

    case FuzzUnion_Tag::FUZZ_BOOL: {

      return true;
    }
    case FuzzUnion_Tag::FUZZ_INT8: {

      return true;
    }
    case FuzzUnion_Tag::FUZZ_UINT8: {

      return true;
    }
    case FuzzUnion_Tag::FUZZ_INT16: {

      return true;
    }
    case FuzzUnion_Tag::FUZZ_UINT16: {

      return true;
    }
    case FuzzUnion_Tag::FUZZ_INT32: {

      return true;
    }
    case FuzzUnion_Tag::FUZZ_UINT32: {

      return true;
    }
    case FuzzUnion_Tag::FUZZ_INT64: {

      return true;
    }
    case FuzzUnion_Tag::FUZZ_UINT64: {

      return true;
    }
    case FuzzUnion_Tag::FUZZ_FLOAT: {

      return true;
    }
    case FuzzUnion_Tag::FUZZ_DOUBLE: {

      return true;
    }
    case FuzzUnion_Tag::FUZZ_STRING: {

      if (!mojo::internal::ValidatePointerNonNullable(
              object->data.f_fuzz_string, 12, validation_context)) {
        return false;
      }
      const mojo::internal::ContainerValidateParams fuzz_string_validate_params(
          0, false, nullptr);
      if (!mojo::internal::ValidateContainer(object->data.f_fuzz_string, validation_context,
                                             &fuzz_string_validate_params)) {
        return false;
      }
      return true;
    }
    case FuzzUnion_Tag::FUZZ_BOOL_ARRAY: {

      if (!mojo::internal::ValidatePointerNonNullable(
              object->data.f_fuzz_bool_array, 13, validation_context)) {
        return false;
      }
      const mojo::internal::ContainerValidateParams fuzz_bool_array_validate_params(
          0, false, nullptr);
      if (!mojo::internal::ValidateContainer(object->data.f_fuzz_bool_array, validation_context,
                                             &fuzz_bool_array_validate_params)) {
        return false;
      }
      return true;
    }
    case FuzzUnion_Tag::FUZZ_PRIMITIVE_ARRAY: {

      if (!mojo::internal::ValidatePointerNonNullable(
              object->data.f_fuzz_primitive_array, 14, validation_context)) {
        return false;
      }
      const mojo::internal::ContainerValidateParams fuzz_primitive_array_validate_params(
          0, false, nullptr);
      if (!mojo::internal::ValidateContainer(object->data.f_fuzz_primitive_array, validation_context,
                                             &fuzz_primitive_array_validate_params)) {
        return false;
      }
      return true;
    }
    case FuzzUnion_Tag::FUZZ_STRUCT_ARRAY: {

      if (!mojo::internal::ValidatePointerNonNullable(
              object->data.f_fuzz_struct_array, 15, validation_context)) {
        return false;
      }
      const mojo::internal::ContainerValidateParams fuzz_struct_array_validate_params(
          0, false, nullptr);
      if (!mojo::internal::ValidateContainer(object->data.f_fuzz_struct_array, validation_context,
                                             &fuzz_struct_array_validate_params)) {
        return false;
      }
      return true;
    }
    case FuzzUnion_Tag::FUZZ_PRIMITIVE_MAP: {

      if (!mojo::internal::ValidatePointerNonNullable(
              object->data.f_fuzz_primitive_map, 16, validation_context)) {
        return false;
      }
      const mojo::internal::ContainerValidateParams fuzz_primitive_map_validate_params(
          new mojo::internal::ContainerValidateParams(0, false, new mojo::internal::ContainerValidateParams(0, false, nullptr)), new mojo::internal::ContainerValidateParams(0, false, nullptr));
      if (!mojo::internal::ValidateContainer(object->data.f_fuzz_primitive_map, validation_context,
                                             &fuzz_primitive_map_validate_params)) {
        return false;
      }
      return true;
    }
    case FuzzUnion_Tag::FUZZ_ARRAY_MAP: {

      if (!mojo::internal::ValidatePointerNonNullable(
              object->data.f_fuzz_array_map, 17, validation_context)) {
        return false;
      }
      const mojo::internal::ContainerValidateParams fuzz_array_map_validate_params(
          new mojo::internal::ContainerValidateParams(0, false, new mojo::internal::ContainerValidateParams(0, false, nullptr)), new mojo::internal::ContainerValidateParams(0, false, new mojo::internal::ContainerValidateParams(0, false, new mojo::internal::ContainerValidateParams(0, false, nullptr))));
      if (!mojo::internal::ValidateContainer(object->data.f_fuzz_array_map, validation_context,
                                             &fuzz_array_map_validate_params)) {
        return false;
      }
      return true;
    }
    case FuzzUnion_Tag::FUZZ_STRUCT_MAP: {

      if (!mojo::internal::ValidatePointerNonNullable(
              object->data.f_fuzz_struct_map, 18, validation_context)) {
        return false;
      }
      const mojo::internal::ContainerValidateParams fuzz_struct_map_validate_params(
          new mojo::internal::ContainerValidateParams(0, false, new mojo::internal::ContainerValidateParams(0, false, nullptr)), new mojo::internal::ContainerValidateParams(0, false, nullptr));
      if (!mojo::internal::ValidateContainer(object->data.f_fuzz_struct_map, validation_context,
                                             &fuzz_struct_map_validate_params)) {
        return false;
      }
      return true;
    }
    case FuzzUnion_Tag::FUZZ_UNION_MAP: {

      if (!mojo::internal::ValidatePointerNonNullable(
              object->data.f_fuzz_union_map, 19, validation_context)) {
        return false;
      }
      const mojo::internal::ContainerValidateParams fuzz_union_map_validate_params(
          new mojo::internal::ContainerValidateParams(0, ::fuzz::mojom::internal::FuzzEnum_Data::Validate), new mojo::internal::ContainerValidateParams(0, false, nullptr));
      if (!mojo::internal::ValidateContainer(object->data.f_fuzz_union_map, validation_context,
                                             &fuzz_union_map_validate_params)) {
        return false;
      }
      return true;
    }
    case FuzzUnion_Tag::FUZZ_COMPLEX: {

      const mojo::internal::ContainerValidateParams fuzz_complex_validate_params(
          0, false, new mojo::internal::ContainerValidateParams(new mojo::internal::ContainerValidateParams(0, ::fuzz::mojom::internal::FuzzEnum_Data::Validate), new mojo::internal::ContainerValidateParams(0, false, new mojo::internal::ContainerValidateParams(new mojo::internal::ContainerValidateParams(0, false, nullptr), new mojo::internal::ContainerValidateParams(0, true, new mojo::internal::ContainerValidateParams(0, true, nullptr))))));
      if (!mojo::internal::ValidateContainer(object->data.f_fuzz_complex, validation_context,
                                             &fuzz_complex_validate_params)) {
        return false;
      }
      return true;
    }
    default: {
      ReportValidationError(
          validation_context,
          mojo::internal::VALIDATION_ERROR_UNKNOWN_UNION_TAG,
          "unknown tag in FuzzUnion");
      return false;
    }
  }
}


// static
bool FuzzDummyStruct_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzDummyStruct_Data* object = static_cast<const FuzzDummyStruct_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  return true;
}

FuzzDummyStruct_Data::FuzzDummyStruct_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool FuzzStruct_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 136, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzStruct_Data* object = static_cast<const FuzzStruct_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->fuzz_string, 12, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams fuzz_string_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->fuzz_string, validation_context,
                                         &fuzz_string_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->fuzz_bool_array, 13, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams fuzz_bool_array_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->fuzz_bool_array, validation_context,
                                         &fuzz_bool_array_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->fuzz_primitive_array, 14, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams fuzz_primitive_array_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->fuzz_primitive_array, validation_context,
                                         &fuzz_primitive_array_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->fuzz_primitive_map, 15, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams fuzz_primitive_map_validate_params(
      new mojo::internal::ContainerValidateParams(0, false, new mojo::internal::ContainerValidateParams(0, false, nullptr)), new mojo::internal::ContainerValidateParams(0, false, nullptr));
  if (!mojo::internal::ValidateContainer(object->fuzz_primitive_map, validation_context,
                                         &fuzz_primitive_map_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->fuzz_array_map, 16, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams fuzz_array_map_validate_params(
      new mojo::internal::ContainerValidateParams(0, false, new mojo::internal::ContainerValidateParams(0, false, nullptr)), new mojo::internal::ContainerValidateParams(0, false, new mojo::internal::ContainerValidateParams(0, false, new mojo::internal::ContainerValidateParams(0, false, nullptr))));
  if (!mojo::internal::ValidateContainer(object->fuzz_array_map, validation_context,
                                         &fuzz_array_map_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->fuzz_union_map, 17, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams fuzz_union_map_validate_params(
      new mojo::internal::ContainerValidateParams(0, ::fuzz::mojom::internal::FuzzEnum_Data::Validate), new mojo::internal::ContainerValidateParams(0, false, nullptr));
  if (!mojo::internal::ValidateContainer(object->fuzz_union_map, validation_context,
                                         &fuzz_union_map_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->fuzz_union_array, 18, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams fuzz_union_array_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->fuzz_union_array, validation_context,
                                         &fuzz_union_array_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->fuzz_struct_array, 19, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams fuzz_struct_array_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->fuzz_struct_array, validation_context,
                                         &fuzz_struct_array_validate_params)) {
    return false;
  }

  const mojo::internal::ContainerValidateParams fuzz_nullable_array_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->fuzz_nullable_array, validation_context,
                                         &fuzz_nullable_array_validate_params)) {
    return false;
  }

  const mojo::internal::ContainerValidateParams fuzz_complex_validate_params(
      0, false, new mojo::internal::ContainerValidateParams(new mojo::internal::ContainerValidateParams(0, ::fuzz::mojom::internal::FuzzEnum_Data::Validate), new mojo::internal::ContainerValidateParams(0, false, new mojo::internal::ContainerValidateParams(new mojo::internal::ContainerValidateParams(0, false, nullptr), new mojo::internal::ContainerValidateParams(0, true, new mojo::internal::ContainerValidateParams(0, true, nullptr))))));
  if (!mojo::internal::ValidateContainer(object->fuzz_complex, validation_context,
                                         &fuzz_complex_validate_params)) {
    return false;
  }

  return true;
}

FuzzStruct_Data::FuzzStruct_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool FuzzDummyInterface_Ping_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzDummyInterface_Ping_Params_Data* object = static_cast<const FuzzDummyInterface_Ping_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  return true;
}

FuzzDummyInterface_Ping_Params_Data::FuzzDummyInterface_Ping_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool FuzzInterface_FuzzBasic_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzInterface_FuzzBasic_Params_Data* object = static_cast<const FuzzInterface_FuzzBasic_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  return true;
}

FuzzInterface_FuzzBasic_Params_Data::FuzzInterface_FuzzBasic_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool FuzzInterface_FuzzBasicResp_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzInterface_FuzzBasicResp_Params_Data* object = static_cast<const FuzzInterface_FuzzBasicResp_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  return true;
}

FuzzInterface_FuzzBasicResp_Params_Data::FuzzInterface_FuzzBasicResp_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool FuzzInterface_FuzzBasicResp_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzInterface_FuzzBasicResp_ResponseParams_Data* object = static_cast<const FuzzInterface_FuzzBasicResp_ResponseParams_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  return true;
}

FuzzInterface_FuzzBasicResp_ResponseParams_Data::FuzzInterface_FuzzBasicResp_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool FuzzInterface_FuzzBasicSyncResp_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzInterface_FuzzBasicSyncResp_Params_Data* object = static_cast<const FuzzInterface_FuzzBasicSyncResp_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  return true;
}

FuzzInterface_FuzzBasicSyncResp_Params_Data::FuzzInterface_FuzzBasicSyncResp_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool FuzzInterface_FuzzBasicSyncResp_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzInterface_FuzzBasicSyncResp_ResponseParams_Data* object = static_cast<const FuzzInterface_FuzzBasicSyncResp_ResponseParams_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  return true;
}

FuzzInterface_FuzzBasicSyncResp_ResponseParams_Data::FuzzInterface_FuzzBasicSyncResp_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool FuzzInterface_FuzzArgs_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzInterface_FuzzArgs_Params_Data* object = static_cast<const FuzzInterface_FuzzArgs_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->a, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->a, validation_context))
    return false;

  if (!mojo::internal::ValidateStruct(object->b, validation_context))
    return false;

  return true;
}

FuzzInterface_FuzzArgs_Params_Data::FuzzInterface_FuzzArgs_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool FuzzInterface_FuzzArgsResp_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzInterface_FuzzArgsResp_Params_Data* object = static_cast<const FuzzInterface_FuzzArgsResp_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->a, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->a, validation_context))
    return false;

  if (!mojo::internal::ValidateStruct(object->b, validation_context))
    return false;

  return true;
}

FuzzInterface_FuzzArgsResp_Params_Data::FuzzInterface_FuzzArgsResp_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool FuzzInterface_FuzzArgsResp_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzInterface_FuzzArgsResp_ResponseParams_Data* object = static_cast<const FuzzInterface_FuzzArgsResp_ResponseParams_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  return true;
}

FuzzInterface_FuzzArgsResp_ResponseParams_Data::FuzzInterface_FuzzArgsResp_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool FuzzInterface_FuzzArgsSyncResp_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzInterface_FuzzArgsSyncResp_Params_Data* object = static_cast<const FuzzInterface_FuzzArgsSyncResp_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->a, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->a, validation_context))
    return false;

  if (!mojo::internal::ValidateStruct(object->b, validation_context))
    return false;

  return true;
}

FuzzInterface_FuzzArgsSyncResp_Params_Data::FuzzInterface_FuzzArgsSyncResp_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool FuzzInterface_FuzzArgsSyncResp_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzInterface_FuzzArgsSyncResp_ResponseParams_Data* object = static_cast<const FuzzInterface_FuzzArgsSyncResp_ResponseParams_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  return true;
}

FuzzInterface_FuzzArgsSyncResp_ResponseParams_Data::FuzzInterface_FuzzArgsSyncResp_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool FuzzInterface_FuzzAssociated_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  const FuzzInterface_FuzzAssociated_Params_Data* object = static_cast<const FuzzInterface_FuzzAssociated_Params_Data*>(data);
  ALLOW_UNUSED_LOCAL(object);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->receiver, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->receiver,
                                                 validation_context)) {
    return false;
  }

  return true;
}

FuzzInterface_FuzzAssociated_Params_Data::FuzzInterface_FuzzAssociated_Params_Data()
    : header_({sizeof(*this), 0}) {}

}  // namespace internal
}  // namespace mojom
}  // namespace fuzz

namespace perfetto {

// static
void TraceFormatTraits<::fuzz::mojom::FuzzEnum>::WriteIntoTracedValue(
   perfetto::TracedValue context, ::fuzz::mojom::FuzzEnum value) {
  return std::move(context).WriteString(::fuzz::mojom::FuzzEnumToString(value));
}

} // namespace perfetto
