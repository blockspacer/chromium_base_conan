// mojo/public/tools/fuzzers/fuzz.mojom-shared-internal.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MOJO_PUBLIC_TOOLS_FUZZERS_FUZZ_MOJOM_SHARED_INTERNAL_H_
#define MOJO_PUBLIC_TOOLS_FUZZERS_FUZZ_MOJOM_SHARED_INTERNAL_H_

#include "mojo/public/cpp/bindings/lib/array_internal.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/map_data_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/native_enum_data.h"
#include "mojo/public/interfaces/bindings/native_struct.mojom-shared-internal.h"

#ifdef KYTHE_IS_RUNNING
#pragma kythe_inline_metadata "Metadata comment"
#endif

namespace mojo {
namespace internal {
class ValidationContext;
}
}
namespace fuzz {
namespace mojom {
namespace internal {
class FuzzDummyStruct_Data;
class FuzzStruct_Data;
class FuzzUnion_Data;

struct FuzzEnum_Data {
 public:
  static bool constexpr kIsExtensible = true;

  static bool IsKnownValue(int32_t value) {
    switch (value) {
      case 0:
      case 1:
      case 2:
        return true;
    }
    return false;
  }

  static bool Validate(int32_t value,
                       mojo::internal::ValidationContext* validation_context) {
    if (kIsExtensible || IsKnownValue(value))
      return true;

    ReportValidationError(validation_context,
                          mojo::internal::VALIDATION_ERROR_UNKNOWN_ENUM_VALUE);
    return false;
  }
};

#pragma pack(push, 1)


class  FuzzUnion_Data {
 public:
  // Used to identify Mojom Union Data Classes.
  typedef void MojomUnionDataType;

  FuzzUnion_Data() {}
  // Do nothing in the destructor since it won't be called when it is a
  // non-inlined union.
  ~FuzzUnion_Data() {}

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context,
                       bool inlined);

  bool is_null() const { return size == 0; }

  void set_null() {
    size = 0U;
    tag = static_cast<FuzzUnion_Tag>(0);
    data.unknown = 0U;
  }

  // TODO(crbug.com/1148486): SHOUTY_CASE values are being deprecated per C++ code style
  // guidelines (https://google.github.io/styleguide/cppguide.html#Enumerator_Names),
  // please use kCamelCase values instead.  Cleanup NULL_VALUE, BOOL_VALUE, INT_VALUE, etc.
  // generation once codebase is transitioned to kNullValue, kBoolValue, kIntValue, etc.
  enum class FuzzUnion_Tag : uint32_t {

    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_bool
    FUZZ_BOOL,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_bool
    kFuzzBool = FUZZ_BOOL,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_int8
    FUZZ_INT8,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_int8
    kFuzzInt8 = FUZZ_INT8,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_uint8
    FUZZ_UINT8,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_uint8
    kFuzzUint8 = FUZZ_UINT8,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_int16
    FUZZ_INT16,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_int16
    kFuzzInt16 = FUZZ_INT16,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_uint16
    FUZZ_UINT16,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_uint16
    kFuzzUint16 = FUZZ_UINT16,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_int32
    FUZZ_INT32,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_int32
    kFuzzInt32 = FUZZ_INT32,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_uint32
    FUZZ_UINT32,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_uint32
    kFuzzUint32 = FUZZ_UINT32,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_int64
    FUZZ_INT64,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_int64
    kFuzzInt64 = FUZZ_INT64,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_uint64
    FUZZ_UINT64,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_uint64
    kFuzzUint64 = FUZZ_UINT64,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_float
    FUZZ_FLOAT,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_float
    kFuzzFloat = FUZZ_FLOAT,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_double
    FUZZ_DOUBLE,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_double
    kFuzzDouble = FUZZ_DOUBLE,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_string
    FUZZ_STRING,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_string
    kFuzzString = FUZZ_STRING,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_bool_array
    FUZZ_BOOL_ARRAY,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_bool_array
    kFuzzBoolArray = FUZZ_BOOL_ARRAY,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_primitive_array
    FUZZ_PRIMITIVE_ARRAY,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_primitive_array
    kFuzzPrimitiveArray = FUZZ_PRIMITIVE_ARRAY,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_struct_array
    FUZZ_STRUCT_ARRAY,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_struct_array
    kFuzzStructArray = FUZZ_STRUCT_ARRAY,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_primitive_map
    FUZZ_PRIMITIVE_MAP,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_primitive_map
    kFuzzPrimitiveMap = FUZZ_PRIMITIVE_MAP,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_array_map
    FUZZ_ARRAY_MAP,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_array_map
    kFuzzArrayMap = FUZZ_ARRAY_MAP,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_struct_map
    FUZZ_STRUCT_MAP,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_struct_map
    kFuzzStructMap = FUZZ_STRUCT_MAP,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_union_map
    FUZZ_UNION_MAP,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_union_map
    kFuzzUnionMap = FUZZ_UNION_MAP,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_complex
    FUZZ_COMPLEX,
    
// @generated_from: fuzz.mojom.FuzzUnion.fuzz_complex
    kFuzzComplex = FUZZ_COMPLEX,
  };

  // A note on layout:
  // "Each non-static data member is allocated as if it were the sole member of
  // a struct." - Section 9.5.2 ISO/IEC 14882:2011 (The C++ Spec)
  union MOJO_ALIGNAS(8) Union_ {
    Union_() : unknown(0) {}
    uint8_t f_fuzz_bool : 1;
    int8_t f_fuzz_int8;
    uint8_t f_fuzz_uint8;
    int16_t f_fuzz_int16;
    uint16_t f_fuzz_uint16;
    int32_t f_fuzz_int32;
    uint32_t f_fuzz_uint32;
    int64_t f_fuzz_int64;
    uint64_t f_fuzz_uint64;
    float f_fuzz_float;
    double f_fuzz_double;
    mojo::internal::Pointer<mojo::internal::String_Data> f_fuzz_string;
    mojo::internal::Pointer<mojo::internal::Array_Data<bool>> f_fuzz_bool_array;
    mojo::internal::Pointer<mojo::internal::Array_Data<int8_t>> f_fuzz_primitive_array;
    mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::FuzzDummyStruct_Data>>> f_fuzz_struct_array;
    mojo::internal::Pointer<mojo::internal::Map_Data<mojo::internal::Pointer<mojo::internal::String_Data>, int8_t>> f_fuzz_primitive_map;
    mojo::internal::Pointer<mojo::internal::Map_Data<mojo::internal::Pointer<mojo::internal::String_Data>, mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<mojo::internal::String_Data>>>>> f_fuzz_array_map;
    mojo::internal::Pointer<mojo::internal::Map_Data<mojo::internal::Pointer<mojo::internal::String_Data>, mojo::internal::Pointer<internal::FuzzDummyStruct_Data>>> f_fuzz_struct_map;
    mojo::internal::Pointer<mojo::internal::Map_Data<int32_t, internal::FuzzUnion_Data>> f_fuzz_union_map;
    mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<mojo::internal::Map_Data<int32_t, mojo::internal::Pointer<mojo::internal::Map_Data<int8_t, mojo::internal::Pointer<mojo::internal::Array_Data<internal::FuzzUnion_Data>>>>>>>> f_fuzz_complex;
    uint64_t unknown;
  };

  uint32_t size;
  FuzzUnion_Tag tag;
  Union_ data;
};
static_assert(sizeof(FuzzUnion_Data) == mojo::internal::kUnionDataSize,
              "Bad sizeof(FuzzUnion_Data)");
class  FuzzDummyStruct_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int8_t dummy;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<FuzzDummyStruct_Data>;

  FuzzDummyStruct_Data();
  ~FuzzDummyStruct_Data() = delete;
};
static_assert(sizeof(FuzzDummyStruct_Data) == 16,
              "Bad sizeof(FuzzDummyStruct_Data)");
// Used by FuzzDummyStruct::WrapAsMessage to lazily serialize the struct.
template <typename UserType, typename DataView>
struct FuzzDummyStruct_UnserializedMessageContext
    : public mojo::internal::UnserializedMessageContext {
 public:
  static const mojo::internal::UnserializedMessageContext::Tag kMessageTag;

  FuzzDummyStruct_UnserializedMessageContext(
    uint32_t message_name,
    uint32_t message_flags,
    UserType input)
      : mojo::internal::UnserializedMessageContext(&kMessageTag, message_name, message_flags)
      , user_data_(std::move(input)) {}
  ~FuzzDummyStruct_UnserializedMessageContext() override = default;

  UserType TakeData() {
    return std::move(user_data_);
  }

 private:
  // mojo::internal::UnserializedMessageContext:
  void Serialize(mojo::Message& message) override {
    mojo::internal::MessageFragment<FuzzDummyStruct_Data> fragment(message);
    mojo::internal::Serialize<DataView>(user_data_, fragment);
  }

  UserType user_data_;
};

template <typename UserType, typename DataView>
const mojo::internal::UnserializedMessageContext::Tag
    FuzzDummyStruct_UnserializedMessageContext<UserType, DataView>::kMessageTag = {};
class  FuzzStruct_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t fuzz_bool : 1;
  int8_t fuzz_int8;
  uint8_t fuzz_uint8;
  uint8_t pad2_[1];
  int16_t fuzz_int16;
  uint16_t fuzz_uint16;
  int32_t fuzz_int32;
  uint32_t fuzz_uint32;
  int64_t fuzz_int64;
  uint64_t fuzz_uint64;
  float fuzz_float;
  uint8_t pad9_[4];
  double fuzz_double;
  mojo::internal::Pointer<mojo::internal::String_Data> fuzz_string;
  mojo::internal::Pointer<mojo::internal::Array_Data<bool>> fuzz_bool_array;
  mojo::internal::Pointer<mojo::internal::Array_Data<int8_t>> fuzz_primitive_array;
  mojo::internal::Pointer<mojo::internal::Map_Data<mojo::internal::Pointer<mojo::internal::String_Data>, int8_t>> fuzz_primitive_map;
  mojo::internal::Pointer<mojo::internal::Map_Data<mojo::internal::Pointer<mojo::internal::String_Data>, mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<mojo::internal::String_Data>>>>> fuzz_array_map;
  mojo::internal::Pointer<mojo::internal::Map_Data<int32_t, internal::FuzzUnion_Data>> fuzz_union_map;
  mojo::internal::Pointer<mojo::internal::Array_Data<internal::FuzzUnion_Data>> fuzz_union_array;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::FuzzStruct_Data>>> fuzz_struct_array;
  mojo::internal::Pointer<mojo::internal::Array_Data<int8_t>> fuzz_nullable_array;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<mojo::internal::Map_Data<int32_t, mojo::internal::Pointer<mojo::internal::Map_Data<int8_t, mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::FuzzStruct_Data>>>>>>>>> fuzz_complex;

 private:
  friend class mojo::internal::MessageFragment<FuzzStruct_Data>;

  FuzzStruct_Data();
  ~FuzzStruct_Data() = delete;
};
static_assert(sizeof(FuzzStruct_Data) == 136,
              "Bad sizeof(FuzzStruct_Data)");
// Used by FuzzStruct::WrapAsMessage to lazily serialize the struct.
template <typename UserType, typename DataView>
struct FuzzStruct_UnserializedMessageContext
    : public mojo::internal::UnserializedMessageContext {
 public:
  static const mojo::internal::UnserializedMessageContext::Tag kMessageTag;

  FuzzStruct_UnserializedMessageContext(
    uint32_t message_name,
    uint32_t message_flags,
    UserType input)
      : mojo::internal::UnserializedMessageContext(&kMessageTag, message_name, message_flags)
      , user_data_(std::move(input)) {}
  ~FuzzStruct_UnserializedMessageContext() override = default;

  UserType TakeData() {
    return std::move(user_data_);
  }

 private:
  // mojo::internal::UnserializedMessageContext:
  void Serialize(mojo::Message& message) override {
    mojo::internal::MessageFragment<FuzzStruct_Data> fragment(message);
    mojo::internal::Serialize<DataView>(user_data_, fragment);
  }

  UserType user_data_;
};

template <typename UserType, typename DataView>
const mojo::internal::UnserializedMessageContext::Tag
    FuzzStruct_UnserializedMessageContext<UserType, DataView>::kMessageTag = {};

#pragma pack(pop)

}  // namespace internal
}  // namespace mojom
}  // namespace fuzz

#endif  // MOJO_PUBLIC_TOOLS_FUZZERS_FUZZ_MOJOM_SHARED_INTERNAL_H_

/* Metadata comment
eyJtZXRhIjogW3siZW5kIjogMjY5MCwgImJlZ2luIjogMjY4MSwgImVkZ2UiOiAiJS9reXRoZS9l
ZGdlL2dlbmVyYXRlcyIsICJ0eXBlIjogImFuY2hvcl9kZWZpbmVzIiwgInZuYW1lIjogeyJjb3Jw
dXMiOiAiY2hyb21pdW0uZ29vZ2xlc291cmNlLmNvbS9jaHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2Ui
OiAibW9qb20iLCAic2lnbmF0dXJlIjogImZ1enoubW9qb20uRnV6elVuaW9uLmZ1enpfYm9vbCJ9
fSwgeyJlbmQiOiAyNzczLCAiYmVnaW4iOiAyNzY0LCAiZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2Vu
ZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2RlZmluZXMiLCAidm5hbWUiOiB7ImNvcnB1cyI6ICJj
aHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2Nocm9taXVtL3NyYyIsICJsYW5ndWFnZSI6ICJtb2pv
bSIsICJzaWduYXR1cmUiOiAiZnV6ei5tb2pvbS5GdXp6VW5pb24uZnV6el9ib29sIn19LCB7ImVu
ZCI6IDI4NDQsICJiZWdpbiI6IDI4MzUsICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMi
LCAidHlwZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVt
Lmdvb2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNp
Z25hdHVyZSI6ICJmdXp6Lm1vam9tLkZ1enpVbmlvbi5mdXp6X2ludDgifX0sIHsiZW5kIjogMjky
NywgImJlZ2luIjogMjkxOCwgImVkZ2UiOiAiJS9reXRoZS9lZGdlL2dlbmVyYXRlcyIsICJ0eXBl
IjogImFuY2hvcl9kZWZpbmVzIiwgInZuYW1lIjogeyJjb3JwdXMiOiAiY2hyb21pdW0uZ29vZ2xl
c291cmNlLmNvbS9jaHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2UiOiAibW9qb20iLCAic2lnbmF0dXJl
IjogImZ1enoubW9qb20uRnV6elVuaW9uLmZ1enpfaW50OCJ9fSwgeyJlbmQiOiAzMDAwLCAiYmVn
aW4iOiAyOTkwLCAiZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5j
aG9yX2RlZmluZXMiLCAidm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2Uu
Y29tL2Nocm9taXVtL3NyYyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAiZnV6
ei5tb2pvbS5GdXp6VW5pb24uZnV6el91aW50OCJ9fSwgeyJlbmQiOiAzMDg2LCAiYmVnaW4iOiAz
MDc2LCAiZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2Rl
ZmluZXMiLCAidm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2No
cm9taXVtL3NyYyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAiZnV6ei5tb2pv
bS5GdXp6VW5pb24uZnV6el91aW50OCJ9fSwgeyJlbmQiOiAzMTU5LCAiYmVnaW4iOiAzMTQ5LCAi
ZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2RlZmluZXMi
LCAidm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2Nocm9taXVt
L3NyYyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAiZnV6ei5tb2pvbS5GdXp6
VW5pb24uZnV6el9pbnQxNiJ9fSwgeyJlbmQiOiAzMjQ1LCAiYmVnaW4iOiAzMjM1LCAiZWRnZSI6
ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2RlZmluZXMiLCAidm5h
bWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2Nocm9taXVtL3NyYyIs
ICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAiZnV6ei5tb2pvbS5GdXp6VW5pb24u
ZnV6el9pbnQxNiJ9fSwgeyJlbmQiOiAzMzIwLCAiYmVnaW4iOiAzMzA5LCAiZWRnZSI6ICIlL2t5
dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2RlZmluZXMiLCAidm5hbWUiOiB7
ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2Nocm9taXVtL3NyYyIsICJsYW5n
dWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAiZnV6ei5tb2pvbS5GdXp6VW5pb24uZnV6el91
aW50MTYifX0sIHsiZW5kIjogMzQwOSwgImJlZ2luIjogMzM5OCwgImVkZ2UiOiAiJS9reXRoZS9l
ZGdlL2dlbmVyYXRlcyIsICJ0eXBlIjogImFuY2hvcl9kZWZpbmVzIiwgInZuYW1lIjogeyJjb3Jw
dXMiOiAiY2hyb21pdW0uZ29vZ2xlc291cmNlLmNvbS9jaHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2Ui
OiAibW9qb20iLCAic2lnbmF0dXJlIjogImZ1enoubW9qb20uRnV6elVuaW9uLmZ1enpfdWludDE2
In19LCB7ImVuZCI6IDM0ODIsICJiZWdpbiI6IDM0NzIsICJlZGdlIjogIiUva3l0aGUvZWRnZS9n
ZW5lcmF0ZXMiLCAidHlwZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjog
ImNocm9taXVtLmdvb2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1v
am9tIiwgInNpZ25hdHVyZSI6ICJmdXp6Lm1vam9tLkZ1enpVbmlvbi5mdXp6X2ludDMyIn19LCB7
ImVuZCI6IDM1NjgsICJiZWdpbiI6IDM1NTgsICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0
ZXMiLCAidHlwZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9t
aXVtLmdvb2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwg
InNpZ25hdHVyZSI6ICJmdXp6Lm1vam9tLkZ1enpVbmlvbi5mdXp6X2ludDMyIn19LCB7ImVuZCI6
IDM2NDMsICJiZWdpbiI6IDM2MzIsICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMiLCAi
dHlwZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVtLmdv
b2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNpZ25h
dHVyZSI6ICJmdXp6Lm1vam9tLkZ1enpVbmlvbi5mdXp6X3VpbnQzMiJ9fSwgeyJlbmQiOiAzNzMy
LCAiYmVnaW4iOiAzNzIxLCAiZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUi
OiAiYW5jaG9yX2RlZmluZXMiLCAidm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVz
b3VyY2UuY29tL2Nocm9taXVtL3NyYyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUi
OiAiZnV6ei5tb2pvbS5GdXp6VW5pb24uZnV6el91aW50MzIifX0sIHsiZW5kIjogMzgwNSwgImJl
Z2luIjogMzc5NSwgImVkZ2UiOiAiJS9reXRoZS9lZGdlL2dlbmVyYXRlcyIsICJ0eXBlIjogImFu
Y2hvcl9kZWZpbmVzIiwgInZuYW1lIjogeyJjb3JwdXMiOiAiY2hyb21pdW0uZ29vZ2xlc291cmNl
LmNvbS9jaHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2UiOiAibW9qb20iLCAic2lnbmF0dXJlIjogImZ1
enoubW9qb20uRnV6elVuaW9uLmZ1enpfaW50NjQifX0sIHsiZW5kIjogMzg5MSwgImJlZ2luIjog
Mzg4MSwgImVkZ2UiOiAiJS9reXRoZS9lZGdlL2dlbmVyYXRlcyIsICJ0eXBlIjogImFuY2hvcl9k
ZWZpbmVzIiwgInZuYW1lIjogeyJjb3JwdXMiOiAiY2hyb21pdW0uZ29vZ2xlc291cmNlLmNvbS9j
aHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2UiOiAibW9qb20iLCAic2lnbmF0dXJlIjogImZ1enoubW9q
b20uRnV6elVuaW9uLmZ1enpfaW50NjQifX0sIHsiZW5kIjogMzk2NiwgImJlZ2luIjogMzk1NSwg
ImVkZ2UiOiAiJS9reXRoZS9lZGdlL2dlbmVyYXRlcyIsICJ0eXBlIjogImFuY2hvcl9kZWZpbmVz
IiwgInZuYW1lIjogeyJjb3JwdXMiOiAiY2hyb21pdW0uZ29vZ2xlc291cmNlLmNvbS9jaHJvbWl1
bS9zcmMiLCAibGFuZ3VhZ2UiOiAibW9qb20iLCAic2lnbmF0dXJlIjogImZ1enoubW9qb20uRnV6
elVuaW9uLmZ1enpfdWludDY0In19LCB7ImVuZCI6IDQwNTUsICJiZWdpbiI6IDQwNDQsICJlZGdl
IjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMiLCAidHlwZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2
bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVtLmdvb2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3Jj
IiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNpZ25hdHVyZSI6ICJmdXp6Lm1vam9tLkZ1enpVbmlv
bi5mdXp6X3VpbnQ2NCJ9fSwgeyJlbmQiOiA0MTI4LCAiYmVnaW4iOiA0MTE4LCAiZWRnZSI6ICIl
L2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2RlZmluZXMiLCAidm5hbWUi
OiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2Nocm9taXVtL3NyYyIsICJs
YW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAiZnV6ei5tb2pvbS5GdXp6VW5pb24uZnV6
el9mbG9hdCJ9fSwgeyJlbmQiOiA0MjE0LCAiYmVnaW4iOiA0MjA0LCAiZWRnZSI6ICIlL2t5dGhl
L2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2RlZmluZXMiLCAidm5hbWUiOiB7ImNv
cnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2Nocm9taXVtL3NyYyIsICJsYW5ndWFn
ZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAiZnV6ei5tb2pvbS5GdXp6VW5pb24uZnV6el9mbG9h
dCJ9fSwgeyJlbmQiOiA0Mjg5LCAiYmVnaW4iOiA0Mjc4LCAiZWRnZSI6ICIlL2t5dGhlL2VkZ2Uv
Z2VuZXJhdGVzIiwgInR5cGUiOiAiYW5jaG9yX2RlZmluZXMiLCAidm5hbWUiOiB7ImNvcnB1cyI6
ICJjaHJvbWl1bS5nb29nbGVzb3VyY2UuY29tL2Nocm9taXVtL3NyYyIsICJsYW5ndWFnZSI6ICJt
b2pvbSIsICJzaWduYXR1cmUiOiAiZnV6ei5tb2pvbS5GdXp6VW5pb24uZnV6el9kb3VibGUifX0s
IHsiZW5kIjogNDM3OCwgImJlZ2luIjogNDM2NywgImVkZ2UiOiAiJS9reXRoZS9lZGdlL2dlbmVy
YXRlcyIsICJ0eXBlIjogImFuY2hvcl9kZWZpbmVzIiwgInZuYW1lIjogeyJjb3JwdXMiOiAiY2hy
b21pdW0uZ29vZ2xlc291cmNlLmNvbS9jaHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2UiOiAibW9qb20i
LCAic2lnbmF0dXJlIjogImZ1enoubW9qb20uRnV6elVuaW9uLmZ1enpfZG91YmxlIn19LCB7ImVu
ZCI6IDQ0NTMsICJiZWdpbiI6IDQ0NDIsICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMi
LCAidHlwZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVt
Lmdvb2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNp
Z25hdHVyZSI6ICJmdXp6Lm1vam9tLkZ1enpVbmlvbi5mdXp6X3N0cmluZyJ9fSwgeyJlbmQiOiA0
NTQyLCAiYmVnaW4iOiA0NTMxLCAiZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5
cGUiOiAiYW5jaG9yX2RlZmluZXMiLCAidm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29n
bGVzb3VyY2UuY29tL2Nocm9taXVtL3NyYyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1
cmUiOiAiZnV6ei5tb2pvbS5GdXp6VW5pb24uZnV6el9zdHJpbmcifX0sIHsiZW5kIjogNDYyNSwg
ImJlZ2luIjogNDYxMCwgImVkZ2UiOiAiJS9reXRoZS9lZGdlL2dlbmVyYXRlcyIsICJ0eXBlIjog
ImFuY2hvcl9kZWZpbmVzIiwgInZuYW1lIjogeyJjb3JwdXMiOiAiY2hyb21pdW0uZ29vZ2xlc291
cmNlLmNvbS9jaHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2UiOiAibW9qb20iLCAic2lnbmF0dXJlIjog
ImZ1enoubW9qb20uRnV6elVuaW9uLmZ1enpfYm9vbF9hcnJheSJ9fSwgeyJlbmQiOiA0NzI1LCAi
YmVnaW4iOiA0NzEwLCAiZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUiOiAi
YW5jaG9yX2RlZmluZXMiLCAidm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVzb3Vy
Y2UuY29tL2Nocm9taXVtL3NyYyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUiOiAi
ZnV6ei5tb2pvbS5GdXp6VW5pb24uZnV6el9ib29sX2FycmF5In19LCB7ImVuZCI6IDQ4MTgsICJi
ZWdpbiI6IDQ3OTgsICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMiLCAidHlwZSI6ICJh
bmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVtLmdvb2dsZXNvdXJj
ZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNpZ25hdHVyZSI6ICJm
dXp6Lm1vam9tLkZ1enpVbmlvbi5mdXp6X3ByaW1pdGl2ZV9hcnJheSJ9fSwgeyJlbmQiOiA0OTMz
LCAiYmVnaW4iOiA0OTEzLCAiZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUi
OiAiYW5jaG9yX2RlZmluZXMiLCAidm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVz
b3VyY2UuY29tL2Nocm9taXVtL3NyYyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUi
OiAiZnV6ei5tb2pvbS5GdXp6VW5pb24uZnV6el9wcmltaXRpdmVfYXJyYXkifX0sIHsiZW5kIjog
NTAyMCwgImJlZ2luIjogNTAwMywgImVkZ2UiOiAiJS9reXRoZS9lZGdlL2dlbmVyYXRlcyIsICJ0
eXBlIjogImFuY2hvcl9kZWZpbmVzIiwgInZuYW1lIjogeyJjb3JwdXMiOiAiY2hyb21pdW0uZ29v
Z2xlc291cmNlLmNvbS9jaHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2UiOiAibW9qb20iLCAic2lnbmF0
dXJlIjogImZ1enoubW9qb20uRnV6elVuaW9uLmZ1enpfc3RydWN0X2FycmF5In19LCB7ImVuZCI6
IDUxMjYsICJiZWdpbiI6IDUxMDksICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMiLCAi
dHlwZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVtLmdv
b2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNpZ25h
dHVyZSI6ICJmdXp6Lm1vam9tLkZ1enpVbmlvbi5mdXp6X3N0cnVjdF9hcnJheSJ9fSwgeyJlbmQi
OiA1MjE1LCAiYmVnaW4iOiA1MTk3LCAiZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwg
InR5cGUiOiAiYW5jaG9yX2RlZmluZXMiLCAidm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5n
b29nbGVzb3VyY2UuY29tL2Nocm9taXVtL3NyYyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWdu
YXR1cmUiOiAiZnV6ei5tb2pvbS5GdXp6VW5pb24uZnV6el9wcmltaXRpdmVfbWFwIn19LCB7ImVu
ZCI6IDUzMjQsICJiZWdpbiI6IDUzMDYsICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMi
LCAidHlwZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVt
Lmdvb2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNp
Z25hdHVyZSI6ICJmdXp6Lm1vam9tLkZ1enpVbmlvbi5mdXp6X3ByaW1pdGl2ZV9tYXAifX0sIHsi
ZW5kIjogNTQwNSwgImJlZ2luIjogNTM5MSwgImVkZ2UiOiAiJS9reXRoZS9lZGdlL2dlbmVyYXRl
cyIsICJ0eXBlIjogImFuY2hvcl9kZWZpbmVzIiwgInZuYW1lIjogeyJjb3JwdXMiOiAiY2hyb21p
dW0uZ29vZ2xlc291cmNlLmNvbS9jaHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2UiOiAibW9qb20iLCAi
c2lnbmF0dXJlIjogImZ1enoubW9qb20uRnV6elVuaW9uLmZ1enpfYXJyYXlfbWFwIn19LCB7ImVu
ZCI6IDU1MDIsICJiZWdpbiI6IDU0ODgsICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMi
LCAidHlwZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVt
Lmdvb2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNp
Z25hdHVyZSI6ICJmdXp6Lm1vam9tLkZ1enpVbmlvbi5mdXp6X2FycmF5X21hcCJ9fSwgeyJlbmQi
OiA1NTg1LCAiYmVnaW4iOiA1NTcwLCAiZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwg
InR5cGUiOiAiYW5jaG9yX2RlZmluZXMiLCAidm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5n
b29nbGVzb3VyY2UuY29tL2Nocm9taXVtL3NyYyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWdu
YXR1cmUiOiAiZnV6ei5tb2pvbS5GdXp6VW5pb24uZnV6el9zdHJ1Y3RfbWFwIn19LCB7ImVuZCI6
IDU2ODUsICJiZWdpbiI6IDU2NzAsICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMiLCAi
dHlwZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVtLmdv
b2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNpZ25h
dHVyZSI6ICJmdXp6Lm1vam9tLkZ1enpVbmlvbi5mdXp6X3N0cnVjdF9tYXAifX0sIHsiZW5kIjog
NTc2NiwgImJlZ2luIjogNTc1MiwgImVkZ2UiOiAiJS9reXRoZS9lZGdlL2dlbmVyYXRlcyIsICJ0
eXBlIjogImFuY2hvcl9kZWZpbmVzIiwgInZuYW1lIjogeyJjb3JwdXMiOiAiY2hyb21pdW0uZ29v
Z2xlc291cmNlLmNvbS9jaHJvbWl1bS9zcmMiLCAibGFuZ3VhZ2UiOiAibW9qb20iLCAic2lnbmF0
dXJlIjogImZ1enoubW9qb20uRnV6elVuaW9uLmZ1enpfdW5pb25fbWFwIn19LCB7ImVuZCI6IDU4
NjMsICJiZWdpbiI6IDU4NDksICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMiLCAidHlw
ZSI6ICJhbmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVtLmdvb2ds
ZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNpZ25hdHVy
ZSI6ICJmdXp6Lm1vam9tLkZ1enpVbmlvbi5mdXp6X3VuaW9uX21hcCJ9fSwgeyJlbmQiOiA1OTQw
LCAiYmVnaW4iOiA1OTI4LCAiZWRnZSI6ICIlL2t5dGhlL2VkZ2UvZ2VuZXJhdGVzIiwgInR5cGUi
OiAiYW5jaG9yX2RlZmluZXMiLCAidm5hbWUiOiB7ImNvcnB1cyI6ICJjaHJvbWl1bS5nb29nbGVz
b3VyY2UuY29tL2Nocm9taXVtL3NyYyIsICJsYW5ndWFnZSI6ICJtb2pvbSIsICJzaWduYXR1cmUi
OiAiZnV6ei5tb2pvbS5GdXp6VW5pb24uZnV6el9jb21wbGV4In19LCB7ImVuZCI6IDYwMzIsICJi
ZWdpbiI6IDYwMjAsICJlZGdlIjogIiUva3l0aGUvZWRnZS9nZW5lcmF0ZXMiLCAidHlwZSI6ICJh
bmNob3JfZGVmaW5lcyIsICJ2bmFtZSI6IHsiY29ycHVzIjogImNocm9taXVtLmdvb2dsZXNvdXJj
ZS5jb20vY2hyb21pdW0vc3JjIiwgImxhbmd1YWdlIjogIm1vam9tIiwgInNpZ25hdHVyZSI6ICJm
dXp6Lm1vam9tLkZ1enpVbmlvbi5mdXp6X2NvbXBsZXgifX1dLCAidHlwZSI6ICJreXRoZTAifQ==
*/